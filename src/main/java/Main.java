import org.jf.dexlib2.DexFileFactory;
import org.jf.dexlib2.iface.ClassDef;
import org.jf.dexlib2.iface.DexFile;

import javax.xml.parsers.*;
import java.io.*;
import java.util.jar.JarFile;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by Rita on 3/10/2016.
 */


public class Main {

   public static void apkToolExtraction(String appname){

       String[] s = new String[6];
       s[0]="d";
//       s[1]="-r";
       s[1]="-s";
       s[2]="-f";
       s[3]="--output";
       s[4]="output_folder"; // nama output folder
       s[5]=appname;

       try {
           brut.apktool.Main.main(s);
           System.out.println("apktool");
       } catch (Exception e) {
           e.printStackTrace();
       }
   }


    public static void main(String[] args) {

        //apktool
//      String appname = "com.catfiz.apk";

//      apkToolExtraction(appname);

        Permissions perm = new Permissions();

        perm.getPermission();

        System.out.println("yuhu");

        perm.printValues();

        //class lists
        try{
            File dex = new File("output_folder/classes.dex");
            DexFile dexFile = DexFileFactory.loadDexFile(dex,19,true);

            for (ClassDef classDef: dexFile.getClasses()) {
                String classType = classDef.getType().replace("L","");
//                if (classType.length() > 4 ){
//                    System.out.println(classType);
//                    System.out.println("access flags");
//                    System.out.println(classDef.getAccessFlags());
//                    System.out.println("annotations");
//                    System.out.println(classDef.getAnnotations());
//                    System.out.println("direct method");
//                    System.out.println(classDef.getDirectMethods());
//                    System.out.println("Instance Field");
//                    System.out.println(classDef.getInstanceFields());
//                    System.out.println("Methods");
//                    System.out.println(classDef.getMethods());
//                    System.out.println("src file");
//                    System.out.println(classDef.getSourceFile());
//                    System.out.println("staticfields");
//                    System.out.println(classDef.getStaticFields());
//                    System.out.println("interface");
//                    System.out.println(classDef.getInterfaces());
//                    System.out.println("superclass");
//                    System.out.println(classDef.getSuperclass());
//                    System.out.println("virtual method");
//                    System.out.println(classDef.getVirtualMethods());
//                }
            }
        } catch (Exception e){

        }

    }
}
