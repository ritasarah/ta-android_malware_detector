package com.b.a.a;

import android.os.Message;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;

public class i extends f {
    protected void a(Message message) {
        switch (message.what) {
            case 100:
                a(message.obj);
                return;
            default:
                super.a(message);
                return;
        }
    }

    protected void a(Object obj) {
        if (obj instanceof JSONObject) {
            a((JSONObject) obj);
        } else if (obj instanceof JSONArray) {
            a((JSONArray) obj);
        } else {
            a(new JSONException("Unexpected type " + obj.getClass().getName()), (JSONObject) null);
        }
    }

    public void a(Throwable th, JSONArray jSONArray) {
    }

    public void a(Throwable th, JSONObject jSONObject) {
    }

    public void a(JSONArray jSONArray) {
    }

    public void a(JSONObject jSONObject) {
    }

    protected void b(String str) {
        try {
            b(a(100, d(str)));
        } catch (Throwable e) {
            b(e, str);
        }
    }

    protected void c(Throwable th, String str) {
        if (str != null) {
            try {
                Object d = d(str);
                if (d instanceof JSONObject) {
                    a(th, (JSONObject) d);
                    return;
                } else if (d instanceof JSONArray) {
                    a(th, (JSONArray) d);
                    return;
                } else {
                    a(th, str);
                    return;
                }
            } catch (JSONException e) {
                a(th, str);
                return;
            }
        }
        a(th, "");
    }

    protected Object d(String str) {
        Object obj = null;
        String trim = str.trim();
        if (trim.startsWith("{") || trim.startsWith("[")) {
            obj = new JSONTokener(trim).nextValue();
        }
        return obj == null ? trim : obj;
    }
}
