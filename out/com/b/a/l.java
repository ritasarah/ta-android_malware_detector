package com.b.a;

import com.b.a.a.c;
import com.b.a.c.b;
import com.b.a.g.d;
import com.b.a.g.f;
import com.b.a.g.i;
import com.b.a.g.k;
import com.b.a.g.n;
import com.b.a.g.t;
import com.catfiz.service.PinManagerV2;
import com.catfiz.util.Utils;
import java.util.Map;
import org.apache.commons.logging.impl.SimpleLog;
import org.apache.http.conn.routing.HttpRouteDirector;
import org.apache.http.protocol.HTTP;

public final class l implements w {
    public b encode(String str, a aVar, int i, int i2) {
        return encode(str, aVar, i, i2, null);
    }

    public b encode(String str, a aVar, int i, int i2, Map map) {
        w kVar;
        switch (m.a[aVar.ordinal()]) {
            case e.b /*1*/:
                kVar = new k();
                break;
            case e.c /*2*/:
                kVar = new i();
                break;
            case HttpRouteDirector.TUNNEL_TARGET /*3*/:
                kVar = new t();
                break;
            case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                kVar = new com.b.a.i.b();
                break;
            case HttpRouteDirector.LAYER_PROTOCOL /*5*/:
                kVar = new f();
                break;
            case SimpleLog.LOG_LEVEL_FATAL /*6*/:
                kVar = new d();
                break;
            case SimpleLog.LOG_LEVEL_OFF /*7*/:
                kVar = new n();
                break;
            case Utils.FILE_TYPE_INSTALLER /*8*/:
                kVar = new com.b.a.h.d();
                break;
            case HTTP.HT /*9*/:
                kVar = new com.b.a.g.b();
                break;
            case HTTP.LF /*10*/:
                kVar = new com.b.a.d.b();
                break;
            case PinManagerV2.REGCODE_HASOLDACC /*11*/:
                kVar = new c();
                break;
            default:
                throw new IllegalArgumentException("No encoder available for format " + aVar);
        }
        return kVar.encode(str, aVar, i, i2, map);
    }
}
