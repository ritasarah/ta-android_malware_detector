package com.security.cert.b;

import java.util.Iterator;
import org.json.JSONArray;
import org.json.JSONObject;

public class a {
    static final /* synthetic */ boolean a = (!a.class.desiredAssertionStatus());

    private static boolean a(Object obj, Object obj2) {
        if (obj == obj2) {
            return true;
        }
        if (obj == null || obj2 == null || !obj.getClass().equals(obj2.getClass())) {
            return false;
        }
        if (obj instanceof JSONObject) {
            JSONObject jSONObject = (JSONObject) obj;
            JSONObject jSONObject2 = (JSONObject) obj2;
            if (jSONObject.length() != jSONObject2.length()) {
                return false;
            }
            Iterator keys = jSONObject.keys();
            while (keys.hasNext()) {
                String str = (String) keys.next();
                if (!a(jSONObject.opt(str), jSONObject2.opt(str))) {
                    return false;
                }
            }
            return true;
        } else if (!(obj instanceof JSONArray)) {
            return obj.equals(obj2);
        } else {
            JSONArray jSONArray = (JSONArray) obj;
            JSONArray jSONArray2 = (JSONArray) obj2;
            if (jSONArray.length() != jSONArray2.length()) {
                return false;
            }
            for (int i = 0; i < jSONArray.length(); i++) {
                if (!a(jSONArray.opt(i), jSONArray2.opt(i))) {
                    return false;
                }
            }
            return true;
        }
    }

    public static boolean a(JSONObject jSONObject, JSONObject jSONObject2) {
        return a((Object) jSONObject, (Object) jSONObject2);
    }
}
