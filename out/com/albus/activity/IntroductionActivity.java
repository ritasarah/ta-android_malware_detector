package com.albus.activity;

import android.app.ActivityManager.TaskDescription;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.SlowViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.support.v4.view.ViewPager.PageTransformer;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.AnimationUtils;
import android.view.animation.TranslateAnimation;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.adapter.TutorialAdapter;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;

public class IntroductionActivity extends AppCompatActivity implements OnClickListener {
    private static final String TAG = "IntroductionActivity";
    private FragmentPagerAdapter mAdapter = null;
    private Button mBtnLeft = null;
    private Button mBtnLogin = null;
    private Button mBtnRegister = null;
    private FragmentManager mFragmentManager = null;
    private ImageView[] mIvContainer = new ImageView[4];
    private ImageView mIvIcon = null;
    private LinearLayout mLlIndicator = null;
    private RelativeLayout mRlBackground = null;
    private SlowViewPager mSvpPager = null;
    private View mViewSplash = null;
    private LinearLayout mllBottomBar = null;

    public class AnimationPageTransformer implements PageTransformer {
        public void transformPage(View view, float f) {
            int width = view.getWidth();
            ImageView imageView = (ImageView) view.findViewById(R.id.iv_img1);
            TextView textView = (TextView) view.findViewById(R.id.tv_subtitle);
            TextView textView2 = (TextView) view.findViewById(R.id.tv_title);
            Log.d(IntroductionActivity.TAG, "this is page:" + view.getTag());
            if (f < -1.0f) {
                if (VERSION.SDK_INT <= 11) {
                    Animation alphaAnimation = new AlphaAnimation(0.0f, 0.0f);
                    alphaAnimation.setDuration(0);
                    alphaAnimation.setFillAfter(true);
                    view.startAnimation(alphaAnimation);
                } else {
                    view.setAlpha(0.0f);
                }
                imageView.setTranslationX(0.0f);
                textView2.setTranslationX(0.0f);
                textView.setTranslationX(0.0f);
            } else if (f <= 1.0f) {
                if (VERSION.SDK_INT <= 11) {
                    float floatValue = view.getTag() != null ? ((Float) view.getTag()).floatValue() : 1.0f;
                    Log.d(IntroductionActivity.TAG, "currAlpha:" + floatValue + " 1 - position: " + (1.0f - f));
                    Animation alphaAnimation2 = new AlphaAnimation(floatValue, 1.0f - f);
                    view.setTag(Float.valueOf(1.0f - f));
                    alphaAnimation2.setDuration(0);
                    alphaAnimation2.setFillAfter(true);
                    view.startAnimation(alphaAnimation2);
                    Animation translateAnimation = new TranslateAnimation(((float) width) * (-f), ((float) width) * f, 0.0f, 0.0f);
                    translateAnimation.setFillAfter(true);
                    translateAnimation.setDuration(0);
                    view.startAnimation(translateAnimation);
                } else {
                    view.setAlpha(1.0f - f);
                    view.setTranslationX(((float) width) * (-f));
                    imageView.setTranslationX(((float) width) * f);
                    textView.setTranslationX((((float) width) * f) * 2.0f);
                    textView2.setTranslationX((((float) width) * f) * 2.0f);
                }
                Log.d(IntroductionActivity.TAG, "translation text= " + ((((float) width) * f) * 0.5f));
                Log.d(IntroductionActivity.TAG, "tag stage = " + imageView.getTag());
            } else {
                imageView.setTranslationX(0.0f);
                textView2.setTranslationX(0.0f);
                textView.setTranslationX(0.0f);
                if (VERSION.SDK_INT <= 11) {
                    Animation alphaAnimation3 = new AlphaAnimation(0.0f, 0.0f);
                    alphaAnimation3.setDuration(0);
                    alphaAnimation3.setFillAfter(true);
                    view.startAnimation(alphaAnimation3);
                    return;
                }
                view.setAlpha(0.0f);
            }
        }
    }

    private void setBottomNavigation(int i) {
        int i2 = 0;
        Animation loadAnimation = AnimationUtils.loadAnimation(this, R.anim.zoom_in_bottom);
        this.mllBottomBar.setVisibility(0);
        this.mBtnLogin.setVisibility(0);
        this.mBtnRegister.setVisibility(0);
        while (i2 < this.mIvContainer.length) {
            if (i2 == i) {
                this.mIvContainer[i2].setImageResource(R.drawable.ic_page_on);
                this.mIvContainer[i2].startAnimation(loadAnimation);
            } else {
                this.mIvContainer[i2].setImageResource(R.drawable.ic_page_off);
            }
            i2++;
        }
    }

    public void onClick(View view) {
        Intent intent;
        switch (view.getId()) {
            case R.id.btn_login:
                intent = new Intent(this, RegisterActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 3);
                startActivity(intent);
                return;
            case R.id.btn_register:
                Log.d(TAG, "get on register page");
                intent = new Intent(this, RegisterActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 0);
                startActivity(intent);
                return;
            default:
                return;
        }
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, "onCreate TutorialActivity");
        overridePendingTransition(17432576, 17432577);
        setContentView((int) R.layout.activity_introduction);
        if (Utils.hasLollipop()) {
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.red)));
            Window window = getWindow();
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.clearFlags(67108864);
            window.setStatusBarColor(getResources().getColor(R.color.black));
        }
        this.mIvContainer[0] = (ImageView) findViewById(R.id.imgscroll0);
        this.mIvContainer[1] = (ImageView) findViewById(R.id.imgscroll1);
        this.mIvContainer[2] = (ImageView) findViewById(R.id.imgscroll2);
        this.mIvContainer[3] = (ImageView) findViewById(R.id.imgscroll3);
        this.mIvIcon = (ImageView) findViewById(R.id.iv_icon);
        this.mLlIndicator = (LinearLayout) findViewById(R.id.ll_indicator);
        this.mRlBackground = (RelativeLayout) findViewById(R.id.rl_tutorial);
        this.mllBottomBar = (LinearLayout) findViewById(R.id.ll_button);
        this.mViewSplash = findViewById(R.id.view_splash);
        this.mBtnLogin = (Button) findViewById(R.id.btn_login);
        this.mBtnRegister = (Button) findViewById(R.id.btn_register);
        this.mSvpPager = (SlowViewPager) findViewById(R.id.vpPager);
        this.mFragmentManager = getSupportFragmentManager();
        Animation loadAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_out_start);
        final Animation loadAnimation2 = AnimationUtils.loadAnimation(this, R.anim.fade_in_start);
        this.mAdapter = new TutorialAdapter(this.mFragmentManager);
        this.mSvpPager.setOnPageChangeListener(new OnPageChangeListener() {
            public void onPageScrollStateChanged(int i) {
            }

            public void onPageScrolled(int i, float f, int i2) {
            }

            public void onPageSelected(int i) {
                IntroductionActivity.this.setBottomNavigation(i);
                Log.d(IntroductionActivity.TAG, "page selected = " + i);
            }
        });
        this.mSvpPager.setAdapter(this.mAdapter);
        this.mSvpPager.setPageTransformer(false, new AnimationPageTransformer());
        loadAnimation.setAnimationListener(new AnimationListener() {
            public void onAnimationEnd(Animation animation) {
                IntroductionActivity.this.mIvIcon.setVisibility(4);
                IntroductionActivity.this.mViewSplash.setVisibility(4);
            }

            public void onAnimationRepeat(Animation animation) {
            }

            public void onAnimationStart(Animation animation) {
                IntroductionActivity.this.mSvpPager.setAnimation(loadAnimation2);
                IntroductionActivity.this.mSvpPager.setVisibility(0);
                IntroductionActivity.this.mRlBackground.setBackgroundResource(R.color.white);
            }
        });
        this.mIvIcon.startAnimation(loadAnimation);
        this.mViewSplash.startAnimation(loadAnimation);
        this.mBtnLogin.setOnClickListener(this);
        this.mBtnRegister.setOnClickListener(this);
    }

    protected void onDestroy() {
        super.onDestroy();
        Log.d(TAG, " --- onDestroy --- ");
    }

    public void setPageLeft(int i) {
        this.mSvpPager.setCurrentItem(i - 1);
    }

    public void setPageRight(int i) {
        this.mSvpPager.setCurrentItem(i + 1);
    }
}
