package com.albus.activity;

import android.app.ActivityManager.TaskDescription;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.NavUtils;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.Window;
import com.albus.fragment.SharedExpandFragment;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.util.Utils;

public class SharedExpandActivity extends ActionBarActivity {
    private SharedExpandFragment mFragment = null;

    public void closeAM() {
        this.mFragment.closeActionMode();
    }

    public int[] getImageResID() {
        return getIntent().getExtras().getIntArray(AlbusModelObject.IMAGE);
    }

    public void onBackPressed() {
        super.onBackPressed();
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView((int) R.layout.activity_view);
        if (Utils.hasLollipop()) {
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.red)));
            Window window = getWindow();
            window.clearFlags(67108864);
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.setStatusBarColor(getResources().getColor(R.color.red2));
        }
        ActionBar supportActionBar = getSupportActionBar();
        supportActionBar.setDisplayHomeAsUpEnabled(true);
        Configuration configuration = getResources().getConfiguration();
        if (Utils.hasJellyBeanMR1() && configuration.getLayoutDirection() == 1) {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_dark_reverse);
        } else {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_dark);
        }
        if (bundle == null) {
            FragmentTransaction beginTransaction = getSupportFragmentManager().beginTransaction();
            this.mFragment = SharedExpandFragment.newInstance();
            beginTransaction.replace(R.id.fl_view, this.mFragment);
            beginTransaction.commit();
        }
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.actionbar_gallery, menu);
        return super.onCreateOptionsMenu(menu);
    }

    public boolean onOptionsItemSelected(MenuItem menuItem) {
        switch (menuItem.getItemId()) {
            case 16908332:
                Intent parentActivityIntent = NavUtils.getParentActivityIntent(this);
                parentActivityIntent.setFlags(603979776);
                NavUtils.navigateUpTo(this, parentActivityIntent);
                return true;
            default:
                return super.onOptionsItemSelected(menuItem);
        }
    }

    protected void onPause() {
        super.onPause();
    }
}
