package com.albus.activity;

import android.app.ActivityManager.TaskDescription;
import android.content.Intent;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.widget.RelativeLayout;
import com.albus.fragment.FizzlinkFileViewerFragment;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.pool.PoolDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.ServerMessageDataStorage;
import com.catfiz.svcpersistent.TaskDataStorage;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;

public class FizzlinkFileViewerActivity extends ActionBarActivity {
    public static final String TAG = "FizzlinkFileViewerActivity";
    private FizzlinkFileViewerFragment mFrgmnt;
    private MenuItem mMenuDelete;
    private UserPhotoLoader mUserPhotoLoader;

    public void downloadFizzlink(View view) {
        this.mFrgmnt.downloadFizzlink();
    }

    public void hideMenuDelete() {
        if (this.mMenuDelete != null) {
            this.mMenuDelete.setVisible(false);
        }
    }

    protected void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        Log.d(TAG, "onActivityResult(chatgroupviewactivity): " + i + " " + i2);
        if (i == 40) {
            switch (i2) {
                case e.b /*1*/:
                    intent.getLongExtra(AlbusModelObject.INTENT_IDSEQUENCE, 0);
                    intent.getStringExtra(AlbusModelObject.INTENT_FIZZLINK);
                    this.mFrgmnt.downloadFizzlinkAndViewThis();
                    return;
                case e.c /*2*/:
                    intent.getLongExtra(AlbusModelObject.INTENT_IDSEQUENCE, 0);
                    intent.getStringExtra(AlbusModelObject.INTENT_FIZZLINK);
                    this.mFrgmnt.showShareDialog();
                    return;
                default:
                    return;
            }
        }
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView((int) R.layout.activity_view);
        getSupportActionBar().setTitle((CharSequence) "");
        ((RelativeLayout) findViewById(R.id.rl_background)).setBackgroundColor(getResources().getColor(R.color.red));
        if (Utils.hasLollipop()) {
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.red)));
            Window window = getWindow();
            window.clearFlags(67108864);
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.setStatusBarColor(getResources().getColor(R.color.red2));
        }
        ActionBar supportActionBar = getSupportActionBar();
        supportActionBar.setDisplayHomeAsUpEnabled(true);
        Configuration configuration = getResources().getConfiguration();
        if (Utils.hasJellyBeanMR1() && configuration.getLayoutDirection() == 1) {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light_reverse);
        } else {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light);
        }
        if (bundle == null) {
            Bundle bundle2 = new Bundle();
            String stringExtra = getIntent().getStringExtra(ServerMessageDataStorage.SLINK);
            if (stringExtra == null) {
                Uri data = getIntent().getData();
                if (data != null) {
                    stringExtra = data.getLastPathSegment();
                }
            }
            bundle2.putString(CatfishRESTAPI.CFCOMPACT_STICKERID, getIntent().getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID));
            bundle2.putString(PoolDataStorage.TOPIC_KEY, getIntent().getStringExtra(PoolDataStorage.TOPIC_KEY));
            bundle2.putLong(ServerMessageDataStorage.SEQUENCE, getIntent().getLongExtra(ServerMessageDataStorage.SEQUENCE, 0));
            bundle2.putString(ServerMessageDataStorage.SLINK, stringExtra);
            bundle2.putLong(TaskDataStorage.TIMESTAMP, getIntent().getLongExtra(TaskDataStorage.TIMESTAMP, 0));
            FragmentTransaction beginTransaction = getSupportFragmentManager().beginTransaction();
            this.mFrgmnt = FizzlinkFileViewerFragment.newInstance(bundle2);
            beginTransaction.replace(R.id.fl_view, this.mFrgmnt);
            beginTransaction.commit();
        } else {
            this.mFrgmnt = (FizzlinkFileViewerFragment) getSupportFragmentManager().findFragmentById(R.id.fl_view);
        }
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(this)) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(this, imageCacheParams);
        this.mFrgmnt.setPhotoLoader(this.mUserPhotoLoader);
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.actionbar_fizzlink_file_viewer, menu);
        this.mMenuDelete = menu.findItem(R.id.delete);
        return super.onCreateOptionsMenu(menu);
    }

    public boolean onOptionsItemSelected(MenuItem menuItem) {
        switch (menuItem.getItemId()) {
            case R.id.delete:
                this.mFrgmnt.showDeleteFizzlinkDialog(getIntent().getLongExtra(ServerMessageDataStorage.SEQUENCE, 0));
                break;
            case R.id.share:
                this.mFrgmnt.showShareDialog();
                break;
        }
        return super.onOptionsItemSelected(menuItem);
    }

    protected void onPause() {
        super.onPause();
        this.mFrgmnt.stopPlayer();
    }

    public void openFile(Uri uri, String str) {
        Intent intent = new Intent("android.intent.action.VIEW");
        intent.setDataAndType(uri, str);
        try {
            startActivity(intent);
        } catch (Exception e) {
            e.printStackTrace();
            finish();
        }
    }
}
