package com.albus.activity;

import android.app.ActivityManager.TaskDescription;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.ListFragment;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.Window;
import android.widget.RelativeLayout;
import com.albus.fragment.MultipleDeleteChatFragment;
import com.albus.fragment.MultipleDeleteGroupFragment;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.OnGroupDeleted;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;

public class MultipleDeleteActivity extends AppCompatActivity implements ICatfiz {
    private static final String TAG = "MultipleDeleteActivity";
    private Catfiz mCatfiz = null;
    private ListFragment mFragment = null;
    private Intent mIntent = null;
    private int mPage = 0;
    private RelativeLayout mRlBackground;

    public void deleteChatMessages(String str) {
        String[] split = str.split(":");
        for (int i = 0; i < split.length; i++) {
            Log.d(TAG, "deleteChatMessages:" + split[i]);
            this.mCatfiz.chatDeleteConversation(split[i], new Callback() {
                public void onError() {
                }

                public void onSuccess() {
                }
            });
        }
        ((MultipleDeleteChatFragment) this.mFragment).deleteSelectedChat();
    }

    public void deleteGroup(String str) {
        String[] split = str.split("_");
        for (int i = 0; i < split.length; i++) {
            Log.d(TAG, "deleteGroup:" + split[i]);
            this.mCatfiz.dropGroup(split[i], new OnGroupDeleted() {
                public void onError() {
                }

                public void onSuccess() {
                }

                public void onSuccess(String str) {
                }
            });
        }
        AlbusUtils.setToastView(this, getString(R.string.you_del_group));
        finish();
    }

    public void deleteGroupConversation(String str) {
        String[] split = str.split("_");
        for (int i = 0; i < split.length; i++) {
            Log.d(TAG, "deleteGroupConversation:" + split[i]);
            this.mCatfiz.groupClearConferenceMessages(split[i], new Callback() {
                public void onError() {
                }

                public void onSuccess() {
                }
            });
        }
        AlbusUtils.setToastView(this, getString(R.string.clear_all_group_chat));
        ((MultipleDeleteGroupFragment) this.mFragment).deleteSelectedGroup();
    }

    public int getId() {
        return this.mIntent.getIntExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, -1);
    }

    public void leaveGroup(String str) {
        String[] split = str.split("_");
        for (int i = 0; i < split.length; i++) {
            Log.d(TAG, "leaveGroup:" + split[i]);
            this.mCatfiz.leaveGroup(split[i], new OnGroupDeleted() {
                public void onError() {
                }

                public void onSuccess() {
                }

                public void onSuccess(String str) {
                }
            });
        }
        AlbusUtils.setToastView(this, getString(R.string.you_leave_group));
        finish();
    }

    public void onBackPressed() {
        super.onBackPressed();
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView((int) R.layout.activity_view);
        this.mCatfiz = new Catfiz(this, this);
        this.mRlBackground = (RelativeLayout) findViewById(R.id.rl_background);
        this.mRlBackground.setBackgroundColor(getResources().getColor(R.color.white));
        if (Utils.hasLollipop()) {
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.white)));
            Window window = getWindow();
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.clearFlags(67108864);
            window.setStatusBarColor(getResources().getColor(R.color.black13));
        }
        ActionBar supportActionBar = getSupportActionBar();
        supportActionBar.setHomeButtonEnabled(true);
        Configuration configuration = getResources().getConfiguration();
        if (Utils.hasJellyBeanMR1() && configuration.getLayoutDirection() == 1) {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light_reverse);
        } else {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light);
        }
        if (bundle == null) {
            this.mIntent = getIntent();
            this.mPage = this.mIntent.getIntExtra(AlbusModelObject.PAGE, -1);
            FragmentTransaction beginTransaction = getSupportFragmentManager().beginTransaction();
            Bundle bundle2 = new Bundle();
            if (this.mPage == 1) {
                bundle2.putInt(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getIntExtra(AlbusModelObject.FRIEND_ID, -1));
                this.mFragment = MultipleDeleteChatFragment.newInstance(bundle2);
            } else if (this.mPage == 2) {
                bundle2.putInt(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getIntExtra(AlbusModelObject.FRIEND_ID, -1));
                this.mFragment = MultipleDeleteGroupFragment.newInstance(bundle2);
            }
            beginTransaction.replace(R.id.fl_view, this.mFragment);
            beginTransaction.commit();
        }
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.actionbar_multiple_select, menu);
        return super.onCreateOptionsMenu(menu);
    }

    protected void onPause() {
        super.onPause();
    }

    public void onRegisterProgress() {
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }
}
