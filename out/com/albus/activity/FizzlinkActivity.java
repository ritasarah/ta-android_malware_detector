package com.albus.activity;

import android.app.ActivityManager.TaskDescription;
import android.app.Dialog;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MenuItem.OnMenuItemClickListener;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.fragment.FizzlinkFragment;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.model.Fizzlink;
import com.catfiz.util.Utils;

public class FizzlinkActivity extends AppCompatActivity {
    private FizzlinkFragment mFrgmnt;

    public void cancelUploadFizzlink(Fizzlink fizzlink) {
        this.mFrgmnt.showCancelDialog(fizzlink);
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView((int) R.layout.activity_view);
        RelativeLayout relativeLayout = (RelativeLayout) findViewById(R.id.rl_background);
        if (Utils.hasLollipop()) {
            relativeLayout.setBackgroundColor(getResources().getColor(R.color.red));
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.red)));
            Window window = getWindow();
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.clearFlags(67108864);
            window.setStatusBarColor(getResources().getColor(R.color.red2));
        }
        ActionBar supportActionBar = getSupportActionBar();
        supportActionBar.setDisplayHomeAsUpEnabled(true);
        Configuration configuration = getResources().getConfiguration();
        if (Utils.hasJellyBeanMR1() && configuration.getLayoutDirection() == 1) {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light_reverse);
        } else {
            supportActionBar.setHomeAsUpIndicator((int) R.drawable.ic_back_light);
        }
        if (bundle == null) {
            Bundle bundle2 = new Bundle();
            bundle2.putString(AlbusModelObject.INTENT_FLPATH, getIntent().getStringExtra(AlbusModelObject.INTENT_FLPATH));
            FragmentTransaction beginTransaction = getSupportFragmentManager().beginTransaction();
            this.mFrgmnt = FizzlinkFragment.newInstance(bundle2);
            beginTransaction.replace(R.id.fl_view, this.mFrgmnt);
            beginTransaction.commit();
            return;
        }
        this.mFrgmnt = (FizzlinkFragment) getSupportFragmentManager().findFragmentById(R.id.fl_view);
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.actionbar_fizzlink, menu);
        return super.onCreateOptionsMenu(menu);
    }

    public boolean onPrepareOptionsMenu(Menu menu) {
        MenuItem findItem = menu.findItem(R.id.info);
        final Dialog dialog = new Dialog(this, 16973941);
        View inflate = getLayoutInflater().inflate(R.layout.dialog_alert, null);
        TextView textView = (TextView) inflate.findViewById(R.id.tv_title);
        TextView textView2 = (TextView) inflate.findViewById(R.id.tv_notif);
        Button button = (Button) inflate.findViewById(R.id.btn_action);
        inflate.findViewById(R.id.btn_cancel).setVisibility(8);
        textView.setVisibility(0);
        textView.setText(getString(R.string.fizzlink_info));
        textView2.setText(getString(R.string.fizzlink_info_msg));
        dialog.setContentView(inflate);
        button.setText(getString(R.string.ok_button_title));
        button.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                dialog.dismiss();
            }
        });
        findItem.setOnMenuItemClickListener(new OnMenuItemClickListener() {
            public boolean onMenuItemClick(MenuItem menuItem) {
                dialog.show();
                return true;
            }
        });
        return super.onPrepareOptionsMenu(menu);
    }

    public void shareFizzlink(Fizzlink fizzlink) {
        this.mFrgmnt.showShareDialog(fizzlink);
    }
}
