package com.albus.activity;

import android.app.Activity;
import android.app.ActivityManager.TaskDescription;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.ActionBarActivity;
import android.view.KeyEvent;
import android.view.View;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnShareButtonListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.fragment.AddNewFriendFragment;
import com.albus.fragment.ContactReceiveFragment;
import com.albus.fragment.NewChatFragment;
import com.albus.fragment.ProfileAddAddressFragment;
import com.albus.fragment.ProfileAddEmailFragment;
import com.albus.fragment.ProfileAddNotesFragment;
import com.albus.fragment.ProfileAddPhoneFragment;
import com.albus.fragment.ProfileAddWebFragment;
import com.albus.fragment.ProfileViewStatusFragment;
import com.albus.fragment.SelectFizzlinkFragment;
import com.albus.fragment.SelectFriendsFragment;
import com.albus.fragment.SelectGroupsFragment;
import com.albus.fragment.SetProfileNameFragment;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.UserDeletePendingRequestCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.localstorage.ChunkStorage;
import com.catfiz.model.Fizzlink;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.MessageType;
import com.catfiz.service.FriendListDataStorage;
import com.catfiz.service.ServerMessageDataStorage;
import com.catfiz.signal.Signal;
import com.catfiz.svcpersistent.TaskDataStorage;
import com.catfiz.util.FizzlinkUtil;
import com.catfiz.util.Log;
import com.catfiz.util.MimeTypeParser;
import com.catfiz.util.Utils;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.conn.params.ConnManagerParams;
import org.apache.http.protocol.HTTP;
import org.json.JSONException;
import org.json.JSONObject;

public class CustomActionBarPageActivity extends ActionBarActivity implements ICatfiz {
    private static final String TAG = CustomActionBarPageActivity.class.getSimpleName();
    private Activity mActivity = null;
    private Catfiz mCatfiz = null;
    private Fragment mFragment = null;
    private Intent mIntent = null;
    private int mPageFrag = -1;

    class ShareDialog implements AlbusDialogInterface {
        private Context mContext;

        private ShareDialog() {
            this.mContext = null;
        }

        private void replaceAndCommitFragment(int i, Fragment fragment) {
            FragmentTransaction beginTransaction = ((ActionBarActivity) this.mContext).getSupportFragmentManager().beginTransaction();
            beginTransaction.replace(i, fragment);
            beginTransaction.commit();
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            this.mContext = context;
            switch (i) {
                case R.styleable.Theme_spinnerDropDownItemStyle /*47*/:
                    AlbusDialog.setOnShareButtonClicked(new OnShareButtonListener() {
                        public void onShareToFriendClicked() {
                            String action = CustomActionBarPageActivity.this.mIntent.getAction();
                            String type = CustomActionBarPageActivity.this.mIntent.getType();
                            Bundle bundle = new Bundle();
                            CustomActionBarPageActivity.this.mIntent;
                            if (!"android.intent.action.SEND".equals(action) || type == null) {
                                if (!"android.intent.action.SEND_MULTIPLE".equals(action) || type == null || !type.startsWith("image/")) {
                                }
                            } else if (HTTP.PLAIN_TEXT_TYPE.equals(type)) {
                                action = CustomActionBarPageActivity.this.mIntent.getStringExtra("android.intent.extra.TEXT");
                                if (action != null) {
                                    bundle.putString(AlbusModelObject.TEXT, action);
                                    bundle.putString(MimeTypeParser.TAG_TYPE, CustomActionBarPageActivity.this.mIntent.getType());
                                    CustomActionBarPageActivity.this.mFragment = SelectFriendsFragment.newInstance(bundle);
                                    ShareDialog.this.replaceAndCommitFragment(R.id.fl_view, CustomActionBarPageActivity.this.mFragment);
                                }
                            } else {
                                Uri uri = (Uri) CustomActionBarPageActivity.this.mIntent.getParcelableExtra("android.intent.extra.STREAM");
                                if (uri != null) {
                                    bundle.putParcelable(ChunkStorage.DATA_TABLE_NAME, uri);
                                    bundle.putString(MimeTypeParser.TAG_TYPE, CustomActionBarPageActivity.this.mIntent.getType());
                                    CustomActionBarPageActivity.this.mFragment = SelectFriendsFragment.newInstance(bundle);
                                    ShareDialog.this.replaceAndCommitFragment(R.id.fl_view, CustomActionBarPageActivity.this.mFragment);
                                }
                            }
                        }

                        public void onShareToMyStatusClicked() {
                        }

                        public void onShareToPoolClicked() {
                            CustomActionBarPageActivity.this.mPageFrag = 41;
                            String action = CustomActionBarPageActivity.this.mIntent.getAction();
                            String type = CustomActionBarPageActivity.this.mIntent.getType();
                            Bundle bundle = new Bundle();
                            CustomActionBarPageActivity.this.mIntent;
                            if (!"android.intent.action.SEND".equals(action) || type == null) {
                                if (!"android.intent.action.SEND_MULTIPLE".equals(action) || type == null || !type.startsWith("image/")) {
                                }
                            } else if (HTTP.PLAIN_TEXT_TYPE.equals(type)) {
                                action = CustomActionBarPageActivity.this.mIntent.getStringExtra("android.intent.extra.TEXT");
                                if (action != null) {
                                    bundle.putString(AlbusModelObject.TEXT, action);
                                    bundle.putString(MimeTypeParser.TAG_TYPE, CustomActionBarPageActivity.this.mIntent.getType());
                                    CustomActionBarPageActivity.this.mFragment = SelectGroupsFragment.newInstance(bundle);
                                    ShareDialog.this.replaceAndCommitFragment(R.id.fl_view, CustomActionBarPageActivity.this.mFragment);
                                }
                            } else {
                                Uri uri = (Uri) CustomActionBarPageActivity.this.mIntent.getParcelableExtra("android.intent.extra.STREAM");
                                if (uri != null) {
                                    bundle.putParcelable(ChunkStorage.DATA_TABLE_NAME, uri);
                                    bundle.putString(MimeTypeParser.TAG_TYPE, CustomActionBarPageActivity.this.mIntent.getType());
                                    CustomActionBarPageActivity.this.mFragment = SelectGroupsFragment.newInstance(bundle);
                                    ShareDialog.this.replaceAndCommitFragment(R.id.fl_view, CustomActionBarPageActivity.this.mFragment);
                                }
                            }
                        }
                    });
                    return;
                default:
                    return;
            }
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    private Fragment createInitMainFragment() {
        Bundle bundle;
        switch (this.mPageFrag) {
            case R.styleable.Toolbar_titleMarginEnd /*14*/:
                Log.d(TAG, "PAGE_NEW_CHAT");
                return NewChatFragment.newInstance();
            case R.styleable.Toolbar_titleMarginTop /*15*/:
                Log.d(TAG, "PAGE_SET_ALIAS");
                bundle = new Bundle();
                bundle.putString(CatfishDataStorage.NIC_NAME, this.mIntent.getStringExtra(CatfishDataStorage.NIC_NAME));
                bundle.putInt(HTTP.IDENTITY_CODING, 15);
                bundle.putString(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID));
                return SetProfileNameFragment.newInstance(bundle);
            case FizzlinkUtil.S_MP3 /*16*/:
                Log.d(TAG, "PAGE_SET_GROUP_NAME");
                bundle = new Bundle();
                bundle.putString(CatfishDataStorage.NIC_NAME, this.mIntent.getStringExtra(CatfishDataStorage.NIC_NAME));
                bundle.putInt(HTTP.IDENTITY_CODING, 16);
                bundle.putString(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID));
                return SetProfileNameFragment.newInstance(bundle);
            case ConnManagerParams.DEFAULT_MAX_TOTAL_CONNECTIONS /*20*/:
                Log.d(TAG, "PAGE_EDIT_NAME");
                bundle = new Bundle();
                bundle.putString(CatfishDataStorage.NIC_NAME, this.mIntent.getStringExtra(AlbusModelObject.VALUE));
                bundle.putInt(HTTP.IDENTITY_CODING, 20);
                return SetProfileNameFragment.newInstance(bundle);
            case R.styleable.Toolbar_logoDescription /*22*/:
                Log.d(TAG, "PAGE_EDIT_PHONE");
                return ProfileAddPhoneFragment.newInstance();
            case R.styleable.Toolbar_titleTextColor /*23*/:
                Log.d(TAG, "PAGE_EDIT_EMAIL");
                return ProfileAddEmailFragment.newInstance();
            case R.styleable.Toolbar_subtitleTextColor /*24*/:
                Log.d(TAG, "PAGE_PERSONAL_STATUS");
                return ProfileViewStatusFragment.newInstance();
            case R.styleable.Theme_actionMenuTextColor /*26*/:
                Log.d(TAG, "PAGE_EDIT_ADDRESS");
                return ProfileAddAddressFragment.newInstance();
            case R.styleable.Theme_actionModeStyle /*27*/:
                Log.d(TAG, "PAGE_EDIT_WEB");
                return ProfileAddWebFragment.newInstance();
            case R.styleable.Theme_actionModeCloseButtonStyle /*28*/:
                Log.d(TAG, "PAGE_EDIT_NOTES");
                String stringExtra = getIntent().getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID);
                if (stringExtra == null) {
                    return ProfileAddNotesFragment.newInstance();
                }
                Bundle bundle2 = new Bundle();
                bundle2.putString(CatfishRESTAPI.CFCOMPACT_STICKERID, stringExtra);
                bundle2.putInt(HTTP.IDENTITY_CODING, 2);
                return ProfileAddNotesFragment.newInstance(bundle2);
            case R.styleable.Theme_actionModeCloseDrawable /*31*/:
                Log.d(TAG, "PAGE_COMMENT");
                bundle = new Bundle();
                bundle.putInt(HTTP.IDENTITY_CODING, 31);
                return SetProfileNameFragment.newInstance(bundle);
            case R.styleable.Theme_actionModeShareDrawable /*36*/:
                bundle = new Bundle();
                bundle.putString(ChunkStorage.DATA_TABLE_NAME, this.mIntent.getStringExtra(ChunkStorage.DATA_TABLE_NAME));
                bundle.putString(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID));
                return ContactReceiveFragment.newInstance(bundle);
            case R.styleable.Theme_textAppearanceSmallPopupMenu /*41*/:
                Log.d(TAG, "PAGE_SELECT_GROUPS");
                return SelectGroupsFragment.newInstance(new Bundle());
            case R.styleable.Theme_homeAsUpIndicator /*48*/:
                Log.d(TAG, "PAGE_ADD_FRIEND");
                return AddNewFriendFragment.newInstance();
            case R.styleable.Theme_actionButtonStyle /*49*/:
                Log.d(TAG, "PAGE_SHARE_FIZZLINK");
                return SelectFriendsFragment.newInstance(new Bundle());
            case R.styleable.Theme_activityChooserViewStyle /*57*/:
                Log.d(TAG, "PAGE_SELECT_FIZZLINK");
                return SelectFizzlinkFragment.newInstance(new Bundle());
            default:
                Log.d(TAG, "PAGE_SELECT_FRIENDS");
                bundle = new Bundle();
                bundle.putString(AlbusModelObject.IMAGE, this.mIntent.getStringExtra(AlbusModelObject.IMAGE));
                bundle.putString(CatfishDataStorage.NIC_NAME, this.mIntent.getStringExtra(CatfishDataStorage.NIC_NAME));
                bundle.putInt(AlbusModelObject.CATEGORY_ID, this.mIntent.getIntExtra(AlbusModelObject.CATEGORY_ID, -1));
                return SelectFriendsFragment.newInstance(bundle);
        }
    }

    private String getJSONFizzlink(Fizzlink fizzlink) {
        String link = fizzlink.getLink();
        Log.d(TAG, "slink:" + link);
        if (link.compareTo("0") == 0 || link == null) {
            return "";
        }
        JSONObject jSONObject = new JSONObject();
        try {
            jSONObject.put(ServerMessageDataStorage.SLINK, "catfiz://fl.catfiz.com/" + link);
            jSONObject.put(ServerMessageDataStorage.MESSAGE, fizzlink.getMessage());
            jSONObject.put(FriendListDataStorage.FILENAME, new File(fizzlink.getFilePath()).getName());
            jSONObject.put("filesize", AlbusUtils.getFileSize(fizzlink.getDataSize()));
            jSONObject.put(TaskDataStorage.FILE_PATH, fizzlink.getFilePath());
            jSONObject.put(TaskDataStorage.TIMESTAMP, fizzlink.getTimeStamp().toString());
            jSONObject.put("simplelink", fizzlink.getLink());
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return jSONObject.toString();
    }

    public void SelectAll() {
        if (this.mPageFrag == 41) {
            ((SelectGroupsFragment) this.mFragment).setSelect();
        } else {
            ((SelectFriendsFragment) this.mFragment).setSelect();
        }
    }

    public void UnselectAll() {
        if (this.mPageFrag == 41) {
            ((SelectGroupsFragment) this.mFragment).setUnselect();
        } else {
            ((SelectFriendsFragment) this.mFragment).setUnselect();
        }
    }

    public void actionReadd(String str) {
        this.mCatfiz.userResendingReq(str, new Callback() {
            public void onError() {
                Log.d(CustomActionBarPageActivity.TAG, Extra.ERROR);
            }

            public void onSuccess() {
                AlbusUtils.setToastView(CustomActionBarPageActivity.this, CustomActionBarPageActivity.this.getString(R.string.readd_alert));
            }
        });
    }

    public void addFriend(String str) {
        this.mCatfiz.userRequestAddFriend(str, new Callback() {
            public void onError() {
                Log.d(CustomActionBarPageActivity.TAG, "Error add friend");
            }

            public void onSuccess() {
                AlbusUtils.setToastView(CustomActionBarPageActivity.this, CustomActionBarPageActivity.this.getString(R.string.df_pending_friend));
            }
        });
    }

    public void backToProfile() {
        if (getIntent().getIntExtra(HTTP.IDENTITY_CODING, -1) == 3) {
            startActivity(new Intent(this, ProfilesActivity.class).setFlags(335544320));
        } else {
            finish();
        }
    }

    public void callBtnActionSelectFriend(List list) {
        ((SelectFriendsFragment) this.mFragment).activateBtnFunction(list);
    }

    public void callBtnActionSelectGroup(List list) {
        ((SelectGroupsFragment) this.mFragment).activateBtnFunction(list);
    }

    public void callPromoteSelectedFriend(User user) {
        ((SelectFriendsFragment) this.mFragment).groupPromoteFriend(user);
    }

    public void callPromoteSelectedFriend(User user, long j, String str) {
        ((SelectFriendsFragment) this.mFragment).commentPromoteFriend(user, j, str);
    }

    public void deletePendingReq(String str) {
        this.mCatfiz.userDeletePendingReq(str, new UserDeletePendingRequestCallback() {
            public void onData(List list) {
            }

            public void onError() {
                Log.d(CustomActionBarPageActivity.TAG, "Deleted Pending Request Unsuccessfully");
            }

            public void onSuccess() {
                Log.d(CustomActionBarPageActivity.TAG, "Deleted Pending Request Successfully");
                ((AddNewFriendFragment) CustomActionBarPageActivity.this.mFragment).updateData();
            }
        });
    }

    public void dismissKeyboard(View view) {
        ((InputMethodManager) getSystemService("input_method")).hideSoftInputFromWindow(view.getWindowToken(), 0);
    }

    public void endActivity() {
        finish();
    }

    public String getId() {
        return getIntent().getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID);
    }

    public int getIdentity() {
        return (!"android.intent.action.SEND".equals(getIntent().getAction()) || getIntent().getType() == null) ? this.mIntent.getIntExtra(HTTP.IDENTITY_CODING, -1) : 56;
    }

    public int getPage() {
        return this.mIntent.getIntExtra(AlbusModelObject.PAGE, -1);
    }

    public String getSelectedFriendsId() {
        return getIntent().getStringExtra(AlbusModelObject.SELECTED_FRIENDID);
    }

    public long getSequence() {
        return this.mIntent.getLongExtra(ServerMessageDataStorage.SEQUENCE, -1);
    }

    protected void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        if (i2 == -1 && i == 19) {
            ((AddNewFriendFragment) this.mFragment).updateData();
        }
    }

    public void onBackPressed() {
        Log.d(TAG, "on back pressed");
        if (this.mPageFrag == 54) {
            Intent intent = new Intent(this, CategoryActivity.class);
            intent.putExtra(CatfishDataStorage.NIC_NAME, this.mIntent.getStringExtra(CatfishDataStorage.NIC_NAME));
            intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mIntent.getIntExtra(AlbusModelObject.CATEGORY_ID, -1));
            startActivity(intent);
            return;
        }
        Log.d(TAG, "else - on back pressed");
        super.onBackPressed();
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(this, this);
        Log.d(TAG, "onCreate:" + TAG);
        setContentView((int) R.layout.activity_view);
        this.mActivity = this;
        if (Utils.hasLollipop()) {
            setTaskDescription(new TaskDescription(null, null, getResources().getColor(R.color.red)));
            Window window = getWindow();
            window.addFlags(RtlSpacingHelper.UNDEFINED);
            window.clearFlags(67108864);
            window.setStatusBarColor(getResources().getColor(R.color.black13));
        }
        this.mIntent = getIntent();
        this.mPageFrag = getPage();
        String action = this.mIntent.getAction();
        String type = this.mIntent.getType();
        Log.d(TAG, "ACTION: " + action + ", type: " + type);
        if ("android.intent.action.SEND".equals(action) && type != null) {
            Bundle bundle2 = new Bundle();
            bundle2.putInt(AlbusModelObject.DIALOG, 47);
            AlbusDialog.showDialog(47, new ShareDialog(), this, bundle2, getSupportFragmentManager());
        } else if (bundle == null) {
            FragmentTransaction beginTransaction = getSupportFragmentManager().beginTransaction();
            this.mFragment = createInitMainFragment();
            beginTransaction.replace(R.id.fl_view, this.mFragment);
            beginTransaction.commit();
        } else {
            this.mFragment = getSupportFragmentManager().findFragmentById(R.id.fl_view);
        }
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public boolean onKeyDown(int i, KeyEvent keyEvent) {
        Log.d(TAG, "onKeyDown:" + i);
        return (keyEvent.getAction() == 0 && i == 4) ? this.mPageFrag == 24 ? ((ProfileViewStatusFragment) this.mFragment).mBottomBar.closeAttachAndEmoPanel() ? super.onKeyDown(i, keyEvent) : false : super.onKeyDown(i, keyEvent) : false;
    }

    protected void onPause() {
        super.onPause();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    protected void onSaveInstanceState(Bundle bundle) {
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public void sendFizzlink(Fizzlink fizzlink) {
        int identity = getIdentity();
        String stringExtra = this.mIntent.getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID);
        Log.d(TAG, "sendFizzlink to:" + stringExtra + " @:" + identity);
        String stringExtra2 = getIntent().getStringExtra("slinkuri");
        String jSONFizzlink = getJSONFizzlink(fizzlink);
        if (stringExtra2 == null || stringExtra2.equals("")) {
            try {
                stringExtra2 = new JSONObject(jSONFizzlink).getString("simplelink");
            } catch (JSONException e) {
            }
        }
        switch (identity) {
            case e.b /*1*/:
                if (stringExtra2 != null && stringExtra2.compareTo("") != 0) {
                    Log.d(TAG, "fizzlink:" + stringExtra2);
                    this.mCatfiz.shareFizzlink(stringExtra, jSONFizzlink, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                            Intent intent = CustomActionBarPageActivity.this.mActivity.getIntent();
                            Activity access$200 = CustomActionBarPageActivity.this.mActivity;
                            CustomActionBarPageActivity.this.mActivity;
                            access$200.setResult(-1, intent);
                            CustomActionBarPageActivity.this.mActivity.finish();
                        }
                    });
                    return;
                }
                return;
            case e.c /*2*/:
                ArrayList arrayList = new ArrayList();
                arrayList.add(stringExtra);
                if (stringExtra2 != null && !stringExtra2.isEmpty()) {
                    Log.d(TAG, "fizzlink:" + stringExtra2);
                    this.mCatfiz.shareFizzlinkToGroup(arrayList, jSONFizzlink, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                            Intent intent = CustomActionBarPageActivity.this.mActivity.getIntent();
                            Activity access$200 = CustomActionBarPageActivity.this.mActivity;
                            CustomActionBarPageActivity.this.mActivity;
                            access$200.setResult(-1, intent);
                            CustomActionBarPageActivity.this.mActivity.finish();
                        }
                    });
                    return;
                }
                return;
            case R.styleable.Theme_actionModeCloseDrawable /*31*/:
                if (stringExtra2 != null && !stringExtra2.isEmpty()) {
                    Log.d(TAG, "fizzlink:" + stringExtra2);
                    long longExtra = this.mIntent.getLongExtra(AlbusModelObject.STATUS_SEQUENCE, -1);
                    if (longExtra > 0) {
                        this.mCatfiz.sendStatusComment(stringExtra, jSONFizzlink, longExtra, MessageType.SHARE_SLINK_AT_COMMENT, new Callback() {
                            public void onError() {
                            }

                            public void onSuccess() {
                                Intent intent = CustomActionBarPageActivity.this.mActivity.getIntent();
                                Activity access$200 = CustomActionBarPageActivity.this.mActivity;
                                CustomActionBarPageActivity.this.mActivity;
                                access$200.setResult(-1, intent);
                                CustomActionBarPageActivity.this.mActivity.finish();
                            }
                        });
                        return;
                    }
                    return;
                }
                return;
            default:
                return;
        }
    }

    public void setRemovedId(String str) {
        ((SelectFriendsFragment) this.mFragment).setRemovedID(str);
    }

    public void setSelectFriendData(int i, String str) {
        ((SelectFriendsFragment) this.mFragment).setDataFriendBasedOnDialog(i, str);
    }

    public void showKeyboard(View view) {
        ((InputMethodManager) getSystemService("input_method")).toggleSoftInput(2, 0);
    }
}
