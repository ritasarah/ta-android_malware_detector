package com.albus.fragment;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.Toast;
import com.albus.activity.MenuActivity;
import com.albus.activity.ScanQrCodeActivity;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.b.a.s;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.intents.CatfishIntents;
import com.catfiz.qrlib.FileQRCodeReader;
import com.catfiz.qrlib.result.ResultHandler;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.MediaFilePath;
import java.util.Locale;
import org.apache.http.protocol.HTTP;

public class ScanQrCodeFragment extends Fragment implements OnClickListener, ICatfiz {
    public static final String TAG = "ScanQrCodeFragment";
    private boolean inScanMode = false;
    private Button mBtnGallery = null;
    private Button mBtnMyQr = null;
    private Catfiz mCatfiz = null;
    private FrameLayout mFlScanArea = null;
    private String mNicFriend = null;
    private ScanQrCodeActivity mParentActivity = null;

    private void checkIsFriend(String str) {
        String[] split = (str + "").split("/");
        Log.d(TAG, "-- cek is friend -- :" + str);
        if (str == null || !str.toString().toUpperCase(Locale.US).contains("NIC.CATFIZ.COM") || split.length <= 1) {
            AlbusUtils.setToastView(getActivity(), getResources().getString(R.string.qr_code_not_nic));
            return;
        }
        String str2 = split[split.length - 1];
        Log.d(TAG, "-- cek is friend service --");
        str2 = str2.toUpperCase(Locale.US);
        if (str2.equals(CatfishService.getUserPIN().toUpperCase(Locale.US))) {
            Log.d(TAG, " my nic nic : " + str2);
            Toast.makeText(this.mParentActivity, getResources().getString(R.string.my_nic), 0).show();
            return;
        }
        Intent newIntent = CatfishIntents.newIntent(this.mParentActivity, CatfishIntents.ACTION_UI_NICLINK);
        newIntent.setData(Uri.parse(str));
        startActivity(newIntent);
    }

    public static ScanQrCodeFragment newInstance(Bundle bundle) {
        ScanQrCodeFragment scanQrCodeFragment = new ScanQrCodeFragment();
        scanQrCodeFragment.setArguments(bundle);
        return scanQrCodeFragment;
    }

    public void handleDecodeInternally(s sVar, ResultHandler resultHandler, Bitmap bitmap) {
        Log.d(TAG, "in handleDecode ScanQrCodeFragment");
        CharSequence displayContents = resultHandler.getDisplayContents();
        String[] split = (displayContents + "").split("/");
        if (displayContents != null && displayContents.toString().toUpperCase(Locale.US).contains("NIC.CATFIZ.COM") && split.length > 1) {
            this.mNicFriend = split[split.length - 1];
            this.mNicFriend = this.mNicFriend.toUpperCase(Locale.US);
            if (this.mNicFriend.equals(CatfishService.getUserPIN().toUpperCase(Locale.US))) {
                Toast.makeText(getActivity(), getActivity().getResources().getString(R.string.qr_code_nic_mine), 0).show();
                ((ScanQrCodeActivity) getActivity()).finish();
                return;
            }
            this.mCatfiz.userCheckIsFriend(this.mNicFriend, new Callback() {
                public void onError() {
                    AlbusUtils.setToastView(ScanQrCodeFragment.this.mParentActivity, ScanQrCodeFragment.this.getResources().getString(R.string.already_a_friend_dialog_title));
                    FragmentActivity activity = ScanQrCodeFragment.this.getActivity();
                    ScanQrCodeFragment.this.getActivity();
                    activity.setResult(0);
                    ((ScanQrCodeActivity) ScanQrCodeFragment.this.getActivity()).finish();
                }

                public void onSuccess() {
                    Log.d(ScanQrCodeFragment.TAG, "success check friend");
                    ScanQrCodeFragment.this.mCatfiz.userRequestAddFriend(ScanQrCodeFragment.this.mNicFriend, new Callback() {
                        public void onError() {
                            Log.d(ScanQrCodeFragment.TAG, "unsuccess add friend");
                            ((ScanQrCodeActivity) ScanQrCodeFragment.this.getActivity()).finish();
                        }

                        public void onSuccess() {
                            Log.d(ScanQrCodeFragment.TAG, "success add friend");
                            AlbusUtils.setToastView(ScanQrCodeFragment.this.mParentActivity, ScanQrCodeFragment.this.getResources().getString(R.string.nic_add) + ScanQrCodeFragment.this.mNicFriend);
                            FragmentActivity activity = ScanQrCodeFragment.this.getActivity();
                            ScanQrCodeFragment.this.getActivity();
                            activity.setResult(-1);
                            ((ScanQrCodeActivity) ScanQrCodeFragment.this.getActivity()).finish();
                        }
                    });
                }
            });
        }
    }

    public void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        if (i2 == -1 && i == 18 && intent != null && intent.getData() != null) {
            String path;
            Uri data = intent.getData();
            Cursor query = getActivity().getContentResolver().query(data, new String[]{"_data"}, null, null, null);
            if (query == null) {
                Log.d(TAG, "File Uri: " + data.toString());
                path = MediaFilePath.getPath(getActivity(), data);
                Log.d(TAG, "File Path: " + path);
            } else {
                query.moveToFirst();
                path = MediaFilePath.getPath(getActivity(), data);
                Log.d(TAG, "File Path: " + path);
                query.close();
            }
            Log.d(TAG, "path of qrcode : " + path);
            try {
                String content = FileQRCodeReader.getContent(path);
                Log.d(TAG, "path of qrcode : " + path + " content : " + content);
                checkIsFriend(content);
            } catch (OutOfMemoryError e) {
            }
        }
    }

    public void onAttach(Activity activity) {
        this.mParentActivity = (ScanQrCodeActivity) activity;
        super.onAttach(activity);
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        Intent intent;
        switch (view.getId()) {
            case R.id.btn_gallery:
                intent = new Intent();
                intent.setType("image/*");
                intent.setAction("android.intent.action.GET_CONTENT");
                startActivityForResult(intent, 18);
                return;
            case R.id.btn_qrcode:
                intent = new Intent(getActivity(), MenuActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 6);
                intent.putExtra(HTTP.IDENTITY_CODING, 3);
                intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, CatfishService.getUserPIN());
                startActivity(intent);
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, "oncreate ScanQrCodeFragment");
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_scan_qrcode, viewGroup, false);
        this.inScanMode = false;
        this.mBtnGallery = (Button) inflate.findViewById(R.id.btn_gallery);
        this.mBtnMyQr = (Button) inflate.findViewById(R.id.btn_qrcode);
        this.mFlScanArea = (FrameLayout) inflate.findViewById(R.id.fl_scanner);
        this.mBtnGallery.setOnClickListener(this);
        this.mBtnMyQr.setOnClickListener(this);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    protected void showScanner() {
        this.inScanMode = true;
    }
}
