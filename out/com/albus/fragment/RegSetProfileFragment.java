package com.albus.fragment;

import android.content.Intent;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.telephony.TelephonyManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import com.albus.activity.AlbusMainActivity;
import com.albus.activity.RegisterSettingProfileActivity;
import com.albus.crop.Crop;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.DialogUI;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.CircleImageView;
import com.albus.view.CustomEdittext;
import com.albus.view.CustomEdittext.OnActionEdittextChange;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.Constant;
import com.catfiz.base.ICatfiz;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.model.Email;
import com.catfiz.model.User;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.setting.CatfishPreferences;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import org.apache.http.HttpStatus;

public class RegSetProfileFragment extends Fragment implements OnClickListener, ICatfiz {
    private static final String TAG = "RegSetProfileFragment";
    private Button mBtnStart = null;
    private Catfiz mCatfiz = null;
    private CustomEdittext mCetName = null;
    private ArrayList mCountries = new ArrayList();
    private ArrayList mCountryCodes = new ArrayList();
    private String mGender = "Male";
    private boolean mIsFemaleSelected = false;
    private boolean mIsMaleSelected = true;
    private LinearLayout mLlProgress = null;
    private String mName = null;
    private Uri mPpUri = null;
    private CircleImageView mRivImg = null;
    private RelativeLayout mRlSwitchFemale = null;
    private RelativeLayout mRlSwitchMale = null;
    private String mSelectedCountryCode = null;
    private View mShadow = null;
    private Spinner mSpCountry = null;
    private View mViewFemale = null;
    private View mViewMale = null;

    private void DisableStart() {
        this.mBtnStart.setEnabled(false);
        this.mBtnStart.setBackgroundResource(R.drawable.bg_btn_blue_disable);
    }

    private void EnableStart() {
        this.mBtnStart.setEnabled(true);
        this.mBtnStart.setBackgroundResource(R.drawable.button_blue_onclick);
    }

    private void checkFemale() {
        this.mViewMale.setVisibility(4);
        this.mViewFemale.setVisibility(0);
    }

    private void checkMale() {
        this.mViewMale.setVisibility(0);
        this.mViewFemale.setVisibility(4);
    }

    private void executeSettingProfile() {
        CatfishPreferences catfishPreferences = CatfishService.getCatfishPreferences();
        User user = this.mCatfiz.getUser();
        user.setName(this.mName);
        if (this.mCatfiz.getUser().getStatus() == null) {
            user.setStatus(getActivity().getResources().getString(R.string.status_dfault));
        }
        user.setStatusDate(AlbusUtils.getDate());
        user.setGender(this.mGender);
        Email email = new Email();
        email.setEmail(catfishPreferences.getString(CatfishRESTAPI.CFCOMPACT_EMAIL, ""));
        email.setType(Constant.TYPE_EMAIL_DEFAULT);
        List arrayList = new ArrayList();
        arrayList.add(email);
        user.setEmails(arrayList);
        user.setCountry(this.mSelectedCountryCode);
        final File userProfilePhotoFile = CatfishPhotoStorage.getUserProfilePhotoFile(getActivity());
        this.mCatfiz.accountSetProfile(user, new Callback() {
            public void onError() {
                AlbusUtils.setToastView(RegSetProfileFragment.this.getActivity(), RegSetProfileFragment.this.getString(R.string.setting_profile_error));
                RegSetProfileFragment.this.EnableStart();
            }

            public void onSuccess() {
                RegSetProfileFragment.this.DisableStart();
                if (RegSetProfileFragment.this.mPpUri != null) {
                    File file = new File(RegSetProfileFragment.this.mPpUri.getPath());
                    RegSetProfileFragment.this.mCatfiz.userUploadPhoto(CatfishService.getUserPIN(), file, new Callback() {
                        public void onError() {
                            Log.d(RegSetProfileFragment.TAG, "error upload");
                        }

                        public void onSuccess() {
                            AlbusUtils.setToastView(RegSetProfileFragment.this.getActivity(), RegSetProfileFragment.this.getString(R.string.image_upload));
                        }
                    });
                    try {
                        AlbusUtils.copyFileUsingFileStreams(file, userProfilePhotoFile);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                Intent intent = new Intent(RegSetProfileFragment.this.getActivity(), AlbusMainActivity.class);
                intent.setFlags(268468224);
                intent.putExtra(AlbusModelObject.PAGE, 1);
                RegSetProfileFragment.this.startActivity(intent);
                RegSetProfileFragment.this.mLlProgress.setVisibility(8);
                RegSetProfileFragment.this.mShadow.setVisibility(8);
            }
        });
    }

    public static RegSetProfileFragment newInstance() {
        return new RegSetProfileFragment();
    }

    public void getCountryData() {
        Locale[] availableLocales = Locale.getAvailableLocales();
        Arrays.sort(availableLocales, new Comparator() {
            public int compare(Locale locale, Locale locale2) {
                return locale.getDisplayCountry().compareTo(locale2.getDisplayCountry());
            }
        });
        for (Locale locale : availableLocales) {
            String displayCountry = locale.getDisplayCountry();
            String country = locale.getCountry();
            if (displayCountry.trim().length() > 0 && !this.mCountries.contains(displayCountry)) {
                this.mCountries.add(displayCountry);
                this.mCountryCodes.add(country);
            }
        }
    }

    public void handleCropResult(int i, Intent intent) {
        getActivity();
        if (i == -1) {
            this.mPpUri = Crop.getOutput(intent);
            if (this.mRivImg != null) {
                this.mRivImg.setImageDrawable(null);
                this.mRivImg.setImageURI(this.mPpUri);
                return;
            }
            this.mRivImg.setImageURI(this.mPpUri);
        } else if (i == HttpStatus.SC_NOT_FOUND) {
            AlbusUtils.setToastView(getActivity(), Crop.getError(intent).getMessage());
        }
    }

    public void onCatfizStarted() {
        if (this.mCatfiz.getUser() != null) {
            User user = this.mCatfiz.getUser();
            if (user.getName() != null) {
                File userProfilePhotoFile = CatfishPhotoStorage.getUserProfilePhotoFile(getActivity());
                if (userProfilePhotoFile != null) {
                    this.mCetName.setText(user.getName());
                    this.mRivImg.setImageBitmap(BitmapFactory.decodeFile(userProfilePhotoFile.getAbsolutePath()));
                }
            }
        }
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.riv_img:
                Bundle bundle = new Bundle();
                bundle.putInt(AlbusModelObject.DIALOG, 24);
                AlbusDialog.showDialog(24, new DialogUI().getDialogInterface(), getActivity(), bundle, getActivity().getSupportFragmentManager());
                return;
            case R.id.btn_start:
                if (AlbusUtils.isNetworkAvailable(getActivity())) {
                    this.mCetName.clearFocus();
                    ((RegisterSettingProfileActivity) getActivity()).dismissKeyboard(this.mCetName);
                    executeSettingProfile();
                    this.mLlProgress.setVisibility(0);
                    this.mShadow.setVisibility(0);
                    DisableStart();
                    return;
                }
                AlbusUtils.setToastView(getActivity(), getString(R.string.check_connection));
                return;
            case R.id.rl_switch_male:
                if (this.mIsMaleSelected) {
                    this.mIsFemaleSelected = false;
                    checkMale();
                }
                if (this.mIsFemaleSelected) {
                    this.mIsFemaleSelected = false;
                    this.mIsMaleSelected = true;
                    this.mGender = getString(R.string.male);
                    checkMale();
                    return;
                }
                return;
            case R.id.rl_switch_female:
                if (this.mIsFemaleSelected) {
                    this.mIsMaleSelected = false;
                    checkFemale();
                }
                if (this.mIsMaleSelected) {
                    this.mIsFemaleSelected = true;
                    this.mIsMaleSelected = false;
                    this.mGender = getString(R.string.female);
                    checkFemale();
                    return;
                }
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Object displayCountry;
        View inflate = layoutInflater.inflate(R.layout.fragment_reg_set_profile, viewGroup, false);
        this.mBtnStart = (Button) inflate.findViewById(R.id.btn_start);
        this.mRlSwitchFemale = (RelativeLayout) inflate.findViewById(R.id.rl_switch_female);
        this.mRlSwitchMale = (RelativeLayout) inflate.findViewById(R.id.rl_switch_male);
        this.mSpCountry = (Spinner) inflate.findViewById(R.id.sp_country);
        this.mRivImg = (CircleImageView) inflate.findViewById(R.id.riv_img);
        this.mLlProgress = (LinearLayout) inflate.findViewById(R.id.ll_dialog);
        this.mShadow = inflate.findViewById(R.id.view_shadow);
        this.mViewMale = inflate.findViewById(R.id.view_male_pressed);
        this.mViewFemale = inflate.findViewById(R.id.view_female_pressed);
        this.mCetName = (CustomEdittext) inflate.findViewById(R.id.cet_name);
        this.mCetName.setNormalInput(getString(R.string.set_usr_name), true, false);
        this.mCetName.setOnActionEdittextChangeClickListener(new OnActionEdittextChange() {
            public void onTextChanged(EditText editText) {
                RegSetProfileFragment.this.mName = editText.getText().toString();
                if (RegSetProfileFragment.this.mName.equals("")) {
                    RegSetProfileFragment.this.DisableStart();
                } else {
                    RegSetProfileFragment.this.EnableStart();
                }
            }
        });
        getCountryData();
        Object arrayAdapter = new ArrayAdapter(getActivity(), 17367048, this.mCountries);
        arrayAdapter.setDropDownViewResource(17367049);
        this.mSpCountry.setAdapter(arrayAdapter);
        this.mSpCountry.setOnItemSelectedListener(new OnItemSelectedListener() {
            public void onItemSelected(AdapterView adapterView, View view, int i, long j) {
                RegSetProfileFragment.this.mSelectedCountryCode = (String) RegSetProfileFragment.this.mCountryCodes.get(i);
            }

            public void onNothingSelected(AdapterView adapterView) {
            }
        });
        this.mRivImg.setOnClickListener(this);
        this.mBtnStart.setOnClickListener(this);
        this.mRlSwitchFemale.setOnClickListener(this);
        this.mRlSwitchMale.setOnClickListener(this);
        this.mShadow.setOnClickListener(null);
        TelephonyManager telephonyManager = (TelephonyManager) getActivity().getSystemService(Constant.PHONE);
        String str = "Indonesia";
        if (telephonyManager.getSimState() != 1) {
            displayCountry = new Locale("", telephonyManager.getSimCountryIso()).getDisplayCountry();
        } else {
            String str2 = str;
        }
        int position = arrayAdapter.getPosition(displayCountry);
        this.mSpCountry.setSelection(position);
        this.mSelectedCountryCode = (String) this.mCountryCodes.get(position);
        checkMale();
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }
}
