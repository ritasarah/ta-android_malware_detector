package com.albus.fragment;

import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.albus.activity.MenuActivity;
import com.albus.adapter.WhoIsLikeAdapter;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.FetchGroupMessageLikesCallback;
import com.catfiz.base.Callback.UserFetchStatusLike;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.List;

public class WhoIsLikeFragment extends ListFragment implements ICatfiz {
    protected static final String TAG = "WhoIsLikeFragment";
    private WhoIsLikeAdapter mAdapter = null;
    private Catfiz mCatfiz = null;
    private List mData = null;
    private long mStatusSeq = 0;
    private String mUserId = "";
    private UserPhotoLoader mUserPhotoLoader = null;

    public class FetchGroupConvLikeCb implements FetchGroupMessageLikesCallback {
        private WeakReference mThisFragmentRef;

        public FetchGroupConvLikeCb(WhoIsLikeFragment whoIsLikeFragment) {
            this.mThisFragmentRef = new WeakReference(whoIsLikeFragment);
        }

        public void onData(List list) {
            WhoIsLikeFragment whoIsLikeFragment = (WhoIsLikeFragment) this.mThisFragmentRef.get();
            if (whoIsLikeFragment == null) {
                Log.d(WhoIsLikeFragment.TAG, "FetchGroupConvLikeCb weak Ref is null");
                return;
            }
            Log.d(WhoIsLikeFragment.TAG, "Wholike count:" + list.size());
            whoIsLikeFragment.mData.addAll(list);
            whoIsLikeFragment.mAdapter.notifyDataSetChanged();
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public class FetchStatusLikeCb implements UserFetchStatusLike {
        private WeakReference mThisFragmentRef;

        public FetchStatusLikeCb(ListFragment listFragment) {
            this.mThisFragmentRef = new WeakReference(listFragment);
        }

        public void onData(List list) {
            WhoIsLikeFragment whoIsLikeFragment = (WhoIsLikeFragment) this.mThisFragmentRef.get();
            if (whoIsLikeFragment == null) {
                Log.d(WhoIsLikeFragment.TAG, "FetchStatusLikeCb weak Ref is null");
                return;
            }
            Log.d(WhoIsLikeFragment.TAG, "Wholike count:" + list.size());
            whoIsLikeFragment.mData.addAll(list);
            whoIsLikeFragment.mAdapter.notifyDataSetChanged();
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public static WhoIsLikeFragment newInstance(Bundle bundle) {
        WhoIsLikeFragment whoIsLikeFragment = new WhoIsLikeFragment();
        whoIsLikeFragment.mStatusSeq = bundle.getLong(AlbusModelObject.STATUS_SEQUENCE);
        whoIsLikeFragment.mUserId = bundle.getString(CatfishRESTAPI.CFCOMPACT_STICKERID);
        return whoIsLikeFragment;
    }

    public void onCatfizStarted() {
        int identity = ((MenuActivity) getActivity()).getIdentity();
        if (identity == 26) {
            this.mCatfiz.groupFetchLikeConference(this.mUserId, this.mStatusSeq, new FetchGroupConvLikeCb(this));
            return;
        }
        String str = "";
        this.mCatfiz.requestUserLikeList(identity == 1 ? "scl:" : "sl:", this.mStatusSeq, this.mUserId, new FetchStatusLikeCb(this));
        this.mCatfiz.setRecentUpdateOpenLike(this.mUserId, new Callback() {
            public void onError() {
            }

            public void onSuccess() {
            }
        });
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(getActivity())) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(getActivity(), imageCacheParams);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_whoislike, viewGroup, false);
        this.mData = new ArrayList();
        this.mAdapter = new WhoIsLikeAdapter(getActivity(), this.mData, this.mUserPhotoLoader);
        setListAdapter(this.mAdapter);
        return inflate;
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.start();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.stop();
        }
    }
}
