package com.albus.fragment;

import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.TextView;
import com.albus.activity.RegisterActivity;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.UserFetchProfileCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.Constant;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.User;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.signal.Signal;
import com.catfiz.util.FizzlinkUtil;
import com.catfiz.util.Log;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.LangUtils;

public class AccountSettingFragment extends Fragment implements OnClickListener, ICatfiz {
    private static final String TAG = "AccountSettingFragment";
    private Calendar mCalendar = null;
    private Catfiz mCatfiz = null;
    private DialogFragment mDialog = null;
    private String mEmail = null;
    private LinearLayout mLlBirthday = null;
    private LinearLayout mLlEmail = null;
    private LinearLayout mLlGender = null;
    private LinearLayout mLlPassword = null;
    private TextView mTvBirthdate = null;
    private TextView mTvEmail = null;
    private TextView mTvEmailTitle = null;
    private TextView mTvGender = null;
    private TextView mTvPhone = null;
    private User mUser = null;

    class AccountSettingDialog implements AlbusDialogInterface {
        String gender;

        private AccountSettingDialog() {
            this.gender = "";
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, DialogFragment dialogFragment, final View view, Bundle bundle, Context context) {
            AccountSettingFragment.this.mDialog = dialogFragment;
            switch (i) {
                case LangUtils.HASH_SEED /*17*/:
                    final EditText editText = (EditText) view.findViewById(R.id.et_change_phone);
                    editText.setText(AccountSettingFragment.this.mTvPhone.getText().toString());
                    AlbusDialog.setOnActionClickListener(17, new OnActionClickListener() {
                        public void onActionNoListener() {
                            AccountSettingFragment.this.mDialog.dismiss();
                        }

                        public void onActionYesListener() {
                            final String str = ((TextView) view.findViewById(R.id.tv_code_phone)).getText().toString() + editText.getText().toString();
                            AccountSettingFragment.this.mCatfiz.userProfilePhoneUpdate(AccountSettingFragment.this.mUser, str, Constant.TYPE_EMAIL_DEFAULT, Boolean.valueOf(false), new Callback() {
                                public void onError() {
                                }

                                public void onSuccess() {
                                    AlbusUtils.setToastView(AccountSettingFragment.this.getActivity(), AccountSettingFragment.this.getString(R.string.phonenumber_update));
                                    AccountSettingFragment.this.mTvPhone.setText(str);
                                }
                            });
                            AccountSettingFragment.this.mDialog.dismiss();
                        }
                    });
                    return;
                case FizzlinkUtil.S_AAC /*18*/:
                    RadioButton radioButton = (RadioButton) view.findViewById(R.id.rb_male);
                    RadioButton radioButton2 = (RadioButton) view.findViewById(R.id.rb_female);
                    if (AccountSettingFragment.this.mUser.getGender().equalsIgnoreCase(AccountSettingFragment.this.getActivity().getResources().getString(R.string.df_female))) {
                        radioButton2.setChecked(true);
                        radioButton.setChecked(false);
                    } else {
                        radioButton2.setChecked(false);
                        radioButton.setChecked(true);
                    }
                    ((RadioGroup) view.findViewById(R.id.rg_gender)).setOnCheckedChangeListener(new OnCheckedChangeListener() {
                        public void onCheckedChanged(RadioGroup radioGroup, int i) {
                            if (i == R.id.rb_male) {
                                AccountSettingDialog.this.gender = AccountSettingFragment.this.getActivity().getResources().getString(R.string.df_male);
                            } else {
                                AccountSettingDialog.this.gender = AccountSettingFragment.this.getActivity().getResources().getString(R.string.df_female);
                            }
                            AccountSettingFragment.this.mCatfiz.userProfileGenderUpdate(AccountSettingFragment.this.mUser, AccountSettingDialog.this.gender, new Callback() {
                                public void onError() {
                                }

                                public void onSuccess() {
                                    AlbusUtils.setToastView(AccountSettingFragment.this.getActivity(), AccountSettingFragment.this.getString(R.string.gender_update));
                                    AccountSettingFragment.this.mTvGender.setText(AccountSettingDialog.this.gender);
                                    AccountSettingFragment.this.mUser.setGender(AccountSettingDialog.this.gender);
                                }
                            });
                            AccountSettingFragment.this.mTvGender.setText(AccountSettingDialog.this.gender);
                            AccountSettingFragment.this.mDialog.dismiss();
                        }
                    });
                    return;
                default:
                    return;
            }
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    public static AccountSettingFragment newInstance() {
        return new AccountSettingFragment();
    }

    public void getAllData() {
        this.mCatfiz.userFetchProfile(new UserFetchProfileCallback() {
            public void onData(User user) {
                AccountSettingFragment.this.mUser = user;
                CharSequence string = CatfishService.getCatfishPreferences().getString(CatfishRESTAPI.CFCOMPACT_EMAIL, null);
                if (string != null) {
                    AccountSettingFragment.this.mEmail = string;
                    AccountSettingFragment.this.mTvEmail.setText(string);
                }
                AccountSettingFragment.this.mTvGender.setText(AccountSettingFragment.this.mUser.getGender());
                Log.d(AccountSettingFragment.TAG, "User birthday=" + AccountSettingFragment.this.mUser.getBirthday());
                if (AccountSettingFragment.this.mUser.getBirthday() != null) {
                    AccountSettingFragment.this.mTvBirthdate.setText(AccountSettingFragment.this.mUser.getBirthday());
                }
            }

            public void onError() {
            }

            public void onSuccess() {
            }
        });
    }

    public void onCatfizStarted() {
        getAllData();
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        Intent intent;
        switch (view.getId()) {
            case R.id.ll_email_panel:
                intent = new Intent(getActivity(), RegisterActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 1);
                intent.putExtra(CatfishRESTAPI.CFCOMPACT_EMAIL, this.mEmail);
                startActivity(intent);
                return;
            case R.id.ll_pass_panel:
                intent = new Intent(getActivity(), RegisterActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 5);
                intent.putExtra(HTTP.IDENTITY_CODING, 8);
                if (this.mEmail != null) {
                    intent.putExtra(CatfishRESTAPI.CFCOMPACT_EMAIL, this.mEmail);
                }
                startActivity(intent);
                return;
            case R.id.ll_gender_panel:
                Bundle bundle = new Bundle();
                bundle.putInt(AlbusModelObject.DIALOG, 18);
                AlbusDialog.showDialog(18, new AccountSettingDialog(), getActivity(), bundle, getActivity().getSupportFragmentManager());
                return;
            case R.id.ll_birth_panel:
                new DatePickerDialog(getActivity(), new OnDateSetListener() {
                    public void onDateSet(DatePicker datePicker, int i, int i2, int i3) {
                        AccountSettingFragment.this.mCalendar.set(1, i);
                        AccountSettingFragment.this.mCalendar.set(2, i2);
                        AccountSettingFragment.this.mCalendar.set(5, i3);
                        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd MMM yyyy", Locale.US);
                        AccountSettingFragment.this.mCatfiz.userProfileBirthdayUpdate(AccountSettingFragment.this.mUser, simpleDateFormat.format(AccountSettingFragment.this.mCalendar.getTime()), new Callback() {
                            public void onError() {
                            }

                            public void onSuccess() {
                                AlbusUtils.setToastView(AccountSettingFragment.this.getActivity(), AccountSettingFragment.this.getString(R.string.birthday_update));
                            }
                        });
                        AccountSettingFragment.this.mTvBirthdate.setText(simpleDateFormat.format(AccountSettingFragment.this.mCalendar.getTime()));
                    }
                }, this.mCalendar.get(1), this.mCalendar.get(2), this.mCalendar.get(5)).show();
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, "oncreate AlbusMainActivity");
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_account_setting, viewGroup, false);
        this.mCalendar = Calendar.getInstance();
        this.mTvBirthdate = (TextView) inflate.findViewById(R.id.tv_birthday);
        this.mTvGender = (TextView) inflate.findViewById(R.id.tv_gender);
        this.mTvEmail = (TextView) inflate.findViewById(R.id.tv_email);
        this.mTvEmailTitle = (TextView) inflate.findViewById(R.id.tv_email_title);
        this.mLlBirthday = (LinearLayout) inflate.findViewById(R.id.ll_birth_panel);
        this.mLlEmail = (LinearLayout) inflate.findViewById(R.id.ll_email_panel);
        this.mLlPassword = (LinearLayout) inflate.findViewById(R.id.ll_pass_panel);
        this.mLlGender = (LinearLayout) inflate.findViewById(R.id.ll_gender_panel);
        this.mLlBirthday.setOnClickListener(this);
        if (this.mCatfiz.isAccountVerified()) {
            this.mLlEmail.setEnabled(false);
            this.mTvEmailTitle.setText(R.string.email_verified);
        } else {
            this.mLlEmail.setOnClickListener(this);
            this.mTvEmailTitle.setText(R.string.email_notverified);
            this.mTvEmailTitle.setTextColor(getResources().getColor(R.color.orange_notif));
        }
        this.mLlPassword.setOnClickListener(this);
        this.mLlGender.setOnClickListener(this);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
        if (this.mCatfiz.isCatfizStarted()) {
            getAllData();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public void setGender(String str) {
        this.mTvGender.setText(str);
    }
}
