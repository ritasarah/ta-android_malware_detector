package com.albus.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.text.InputFilter;
import android.text.InputFilter.LengthFilter;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.activity.ProfilesGroupActivity;
import com.albus.imagespan.SmiledText;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.ChatsBottomBarView;
import com.albus.view.ChatsBottomBarView.onEmojiPanelComponentListener;
import com.albus.view.ChatsBottomBarView.onPanelEmojiAnimation;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.catfiz.R;
import com.catfiz.base.Callback.FetchGroupCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.Group;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import java.lang.ref.WeakReference;
import org.apache.http.HttpStatus;

public class ProfileAddNotesFragment extends Fragment implements ICatfiz {
    private static final String TAG = "ProfileAddNotesFragment";
    private CustomActionbarView mActionbar = null;
    public ChatsBottomBarView mBottomBar = null;
    private Catfiz mCatfiz = null;
    private EditText mEtNotes = null;
    private Group mGroup = null;
    private String mNotes = null;
    private TextView mTvCount = null;

    class FetchGroupProfileCb implements FetchGroupCallback {
        private WeakReference mThisFragRef;

        public FetchGroupProfileCb(ProfileAddNotesFragment profileAddNotesFragment) {
            this.mThisFragRef = new WeakReference(profileAddNotesFragment);
        }

        public void onData(Group group, String str) {
            ProfileAddNotesFragment profileAddNotesFragment = (ProfileAddNotesFragment) this.mThisFragRef.get();
            if (profileAddNotesFragment != null) {
                if (group != null) {
                    profileAddNotesFragment.mGroup = group;
                    profileAddNotesFragment.mEtNotes.setText(SmiledText.getSmiledText(profileAddNotesFragment.getActivity(), profileAddNotesFragment.mGroup.getNotes(), profileAddNotesFragment.mEtNotes));
                    profileAddNotesFragment.mEtNotes.selectAll();
                    Log.d(ProfileAddNotesFragment.TAG, "Success get:" + ProfileAddNotesFragment.this.mGroup.getName() + " " + ProfileAddNotesFragment.this.mGroup.getNotes());
                    return;
                }
                Log.d(ProfileAddNotesFragment.TAG, "Fail get group data");
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    private void backToGroupProfile() {
        Intent intent = new Intent(getActivity(), ProfilesGroupActivity.class);
        intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mGroup.getGroupID());
        intent.putExtra(CatfishDataStorage.NIC_NAME, this.mGroup.getName());
        intent.putExtra(AlbusModelObject.IMAGE, this.mGroup.getImagePath());
        intent.putExtra(AlbusModelObject.OWNER, this.mGroup.getOwner().getId());
        startActivity(intent.setFlags(335544320));
    }

    public static ProfileAddNotesFragment newInstance() {
        return new ProfileAddNotesFragment();
    }

    public static ProfileAddNotesFragment newInstance(Bundle bundle) {
        return new ProfileAddNotesFragment();
    }

    private void setGroup() {
        String stringExtra = getActivity().getIntent().getStringExtra(CatfishRESTAPI.CFCOMPACT_STICKERID);
        String stringExtra2 = getActivity().getIntent().getStringExtra(AlbusModelObject.NOTES);
        String stringExtra3 = getActivity().getIntent().getStringExtra(AlbusModelObject.OWNER);
        this.mGroup = new Group(stringExtra);
        User user = new User(stringExtra3);
        this.mGroup.setNotes(stringExtra2);
        this.mGroup.setOwner(user);
        Log.d(TAG, "setGroup:" + stringExtra + " " + stringExtra2 + " " + stringExtra3);
    }

    public void onCatfizStarted() {
        this.mCatfiz.fetchGroup(this.mGroup.getGroupID(), new FetchGroupProfileCb(this));
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Log.d(TAG, "onCreateView ProfileAddNotesFragment");
        setGroup();
        View inflate = layoutInflater.inflate(R.layout.fragment_profile_status_view, viewGroup, false);
        this.mEtNotes = (EditText) inflate.findViewById(R.id.et_value);
        this.mEtNotes.setSelectAllOnFocus(true);
        this.mTvCount = (TextView) inflate.findViewById(R.id.tv_count);
        this.mTvCount.setText("0/500");
        this.mEtNotes.setFilters(new InputFilter[]{new LengthFilter(HttpStatus.SC_INTERNAL_SERVER_ERROR)});
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        this.mActionbar.setButtonSave();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                ProfileAddNotesFragment.this.mNotes = ProfileAddNotesFragment.this.mEtNotes.getText().toString();
                Log.d(ProfileAddNotesFragment.TAG, "note=" + ProfileAddNotesFragment.this.mNotes);
                Intent intent = new Intent(ProfileAddNotesFragment.this.getActivity(), ProfilesGroupActivity.class);
                intent.putExtra(AlbusModelObject.NOTES, ProfileAddNotesFragment.this.mNotes);
                ProfileAddNotesFragment.this.getActivity().setResult(-1, intent);
                ProfileAddNotesFragment.this.getActivity().finish();
            }

            public void onBtnCloseClicked() {
                ProfileAddNotesFragment.this.backToGroupProfile();
            }
        });
        this.mBottomBar = (ChatsBottomBarView) inflate.findViewById(R.id.cv_bottom_bar);
        this.mBottomBar.setEditProfileStatus(true, this.mEtNotes);
        this.mBottomBar.setOnEmojiPanelAnimation(new onPanelEmojiAnimation() {
            public void onPanelDown() {
            }

            public void onPanelDownFinished() {
            }

            public void onPanelUp(View view) {
                ((CustomActionBarPageActivity) ProfileAddNotesFragment.this.getActivity()).dismissKeyboard(view);
            }

            public void onPanelUpFinished(View view) {
            }
        });
        this.mBottomBar.setOnEmojiPanelComponentListener(new onEmojiPanelComponentListener() {
            public void onBtnKeyboardPressed(View view) {
                ((CustomActionBarPageActivity) ProfileAddNotesFragment.this.getActivity()).showKeyboard(ProfileAddNotesFragment.this.mEtNotes);
            }

            public void onBtnSendPressed(String str) {
            }

            public void onBtnStickerActive(ImageButton imageButton, boolean z) {
            }

            public void onEditTextFocusChanged() {
            }
        });
        this.mEtNotes.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                int length = ProfileAddNotesFragment.this.mEtNotes.getText().length();
                ProfileAddNotesFragment.this.mTvCount.setText(length + "/" + HttpStatus.SC_INTERNAL_SERVER_ERROR);
                if (!ProfileAddNotesFragment.this.mEtNotes.isFocused() || length < HttpStatus.SC_INTERNAL_SERVER_ERROR) {
                    String trim = AlbusUtils.removeUnecessaryHtmlTag(ProfileAddNotesFragment.this.mEtNotes.getText().toString()).trim();
                    if (trim.equals("") || trim.equals(ProfileAddNotesFragment.this.mGroup.getNotes())) {
                        ProfileAddNotesFragment.this.saveDeactivated();
                        return;
                    } else {
                        ProfileAddNotesFragment.this.saveActivated();
                        return;
                    }
                }
                AlbusUtils.setToastView(ProfileAddNotesFragment.this.getActivity(), ProfileAddNotesFragment.this.getString(R.string.reach_max_char_notes).replace("[count]", "500"));
            }
        });
        this.mEtNotes.setText(this.mGroup.getNotes());
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public void saveActivated() {
        this.mActionbar.setOnActionBtnActivated();
    }

    public void saveDeactivated() {
        this.mActionbar.setOnActionBtnDeactivated();
    }
}
