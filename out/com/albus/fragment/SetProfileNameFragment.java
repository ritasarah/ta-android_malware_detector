package com.albus.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.text.InputFilter;
import android.text.InputFilter.LengthFilter;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import com.albus.activity.ProfilesActivity;
import com.albus.activity.ProfilesFriendActivity;
import com.albus.activity.ProfilesGroupActivity;
import com.albus.imagespan.SmiledText;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.ChatsBottomBarView;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.albus.view.CustomEdittext;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.FetchFriendCallback;
import com.catfiz.base.Callback.FetchGroupCallback;
import com.catfiz.base.Callback.UserFetchProfileCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.Constant;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.Group;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.setting.CatfishPreferences;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import java.lang.ref.WeakReference;
import org.apache.http.protocol.HTTP;
import org.json.JSONException;
import org.json.JSONObject;

public class SetProfileNameFragment extends Fragment implements ICatfiz {
    private static final String TAG = "SetProfileNameFragment";
    private CustomActionbarView mActionbar = null;
    public ChatsBottomBarView mBottomBar = null;
    private Catfiz mCatfiz = null;
    private CustomEdittext mCetValue = null;
    private EditText mEtAlias = null;
    private Group mGroup = null;
    private String mId = "";
    private String mName = "";
    private int mPage = 0;
    private CatfishPreferences mPref = null;
    private String mPrevName = "";
    private TextView mTvCount = null;
    private User mUser = null;

    class FetchFriendProfileCb implements FetchFriendCallback {
        private WeakReference mThisFragmentRef;

        public FetchFriendProfileCb(Fragment fragment) {
            this.mThisFragmentRef = new WeakReference(fragment);
        }

        public void onData(User user, String str) {
            SetProfileNameFragment setProfileNameFragment = (SetProfileNameFragment) this.mThisFragmentRef.get();
            if (setProfileNameFragment != null) {
                setProfileNameFragment.mUser = user;
                setProfileNameFragment.mPrevName = setProfileNameFragment.mUser.getName();
                setProfileNameFragment.mEtAlias.setText(SmiledText.getSmiledText(setProfileNameFragment.getActivity(), setProfileNameFragment.mPrevName, setProfileNameFragment.mEtAlias));
                setProfileNameFragment.mEtAlias.setSelection(setProfileNameFragment.mEtAlias.getText().length());
            }
        }

        public void onError() {
            Log.e(SetProfileNameFragment.TAG, "Fail Go to user profile");
        }

        public void onSuccess() {
        }
    }

    class FetchGroupProfileCb implements FetchGroupCallback {
        private WeakReference mThisFragRef;

        public FetchGroupProfileCb(SetProfileNameFragment setProfileNameFragment) {
            this.mThisFragRef = new WeakReference(setProfileNameFragment);
        }

        public void onData(Group group, String str) {
            SetProfileNameFragment setProfileNameFragment = (SetProfileNameFragment) this.mThisFragRef.get();
            if (setProfileNameFragment != null) {
                if (group != null) {
                    setProfileNameFragment.mGroup = group;
                    setProfileNameFragment.mPrevName = group.getName();
                    setProfileNameFragment.mEtAlias.setText(SmiledText.getSmiledText(setProfileNameFragment.getActivity(), setProfileNameFragment.mPrevName, setProfileNameFragment.mEtAlias));
                    setProfileNameFragment.mEtAlias.setSelection(setProfileNameFragment.mEtAlias.getText().length());
                    Log.d(SetProfileNameFragment.TAG, "Success get:" + group.getName() + " " + group.getNotes());
                    return;
                }
                Log.d(SetProfileNameFragment.TAG, "Fail get group data");
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public class FetchNameOnProfileCb implements UserFetchProfileCallback {
        private WeakReference mThisFragmentRef;

        public FetchNameOnProfileCb(Fragment fragment) {
            this.mThisFragmentRef = new WeakReference(fragment);
        }

        public void onData(User user) {
            SetProfileNameFragment setProfileNameFragment = (SetProfileNameFragment) this.mThisFragmentRef.get();
            if (setProfileNameFragment != null) {
                setProfileNameFragment.mUser = user;
                setProfileNameFragment.mPrevName = setProfileNameFragment.mUser.getName();
                setProfileNameFragment.mEtAlias.setText(SmiledText.getSmiledText(setProfileNameFragment.getActivity(), setProfileNameFragment.mPrevName, setProfileNameFragment.mEtAlias));
                setProfileNameFragment.mEtAlias.setSelection(setProfileNameFragment.mEtAlias.getText().length());
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    private void backToFriendProfile() {
        Intent intent = new Intent(getActivity(), ProfilesFriendActivity.class);
        intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mId);
        intent.putExtra(CatfishDataStorage.NIC_NAME, this.mName);
        intent.putExtra(HTTP.IDENTITY_CODING, 9);
        startActivity(intent.setFlags(335544320));
    }

    private void backToGroupProfile() {
        Intent intent = new Intent(getActivity(), ProfilesGroupActivity.class);
        intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, this.mGroup.getGroupID());
        intent.putExtra(CatfishDataStorage.NIC_NAME, this.mGroup.getName());
        intent.putExtra(AlbusModelObject.IMAGE, this.mGroup.getImagePath());
        intent.putExtra(AlbusModelObject.OWNER, this.mGroup.getOwner().getId());
        startActivity(intent.setFlags(335544320));
    }

    private void backToProfile() {
        startActivity(new Intent(getActivity(), ProfilesActivity.class).setFlags(335544320));
    }

    public static SetProfileNameFragment newInstance(Bundle bundle) {
        SetProfileNameFragment setProfileNameFragment = new SetProfileNameFragment();
        setProfileNameFragment.mName = bundle.getString(CatfishDataStorage.NIC_NAME);
        setProfileNameFragment.mPage = bundle.getInt(HTTP.IDENTITY_CODING);
        setProfileNameFragment.mId = bundle.getString(CatfishRESTAPI.CFCOMPACT_STICKERID);
        Log.d(TAG, setProfileNameFragment.mId + ", name : " + setProfileNameFragment.mName);
        return setProfileNameFragment;
    }

    public void SaveActivated() {
        this.mActionbar.setOnActionBtnActivated();
    }

    public void SaveDeactivated() {
        this.mActionbar.setOnActionBtnDeactivated();
    }

    public void onCatfizStarted() {
        if (this.mPage == 20) {
            this.mCatfiz.userFetchProfile(new FetchNameOnProfileCb(this));
        } else if (this.mPage == 15) {
            this.mCatfiz.chatFetchFriend(this.mId, new FetchFriendProfileCb(this));
        } else if (this.mPage == 16) {
            this.mCatfiz.fetchGroup(this.mId, new FetchGroupProfileCb(this));
        }
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Log.d(TAG, "mPage=" + this.mPage);
        View inflate = layoutInflater.inflate(R.layout.fragment_edit_profile, viewGroup, false);
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        ((TextView) inflate.findViewById(R.id.tv_name)).setText(getString(R.string.edit_name));
        this.mEtAlias = (EditText) inflate.findViewById(R.id.et_value);
        this.mTvCount = (TextView) inflate.findViewById(R.id.tv_count);
        this.mTvCount.setText("0/24");
        this.mEtAlias.setFilters(new InputFilter[]{new LengthFilter(24)});
        this.mPref = CatfishService.getCatfishPreferences();
        this.mActionbar.setButtonSave();
        SaveDeactivated();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                SetProfileNameFragment.this.mName = SetProfileNameFragment.this.mEtAlias.getText().toString();
                if (SetProfileNameFragment.this.mPage == 20) {
                    SetProfileNameFragment.this.mCatfiz.userProfileNameUpdate(SetProfileNameFragment.this.mUser, SetProfileNameFragment.this.mName, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                            AlbusUtils.setToastView(SetProfileNameFragment.this.getActivity(), SetProfileNameFragment.this.getString(R.string.username_update));
                            SetProfileNameFragment.this.mPref.edit().putString(CatfishDataStorage.NIC_NAME, SetProfileNameFragment.this.mName).commit();
                            SetProfileNameFragment.this.backToProfile();
                        }
                    });
                } else if (SetProfileNameFragment.this.mPage == 15) {
                    SetProfileNameFragment.this.mCatfiz.updateFriendAlias(SetProfileNameFragment.this.mId, SetProfileNameFragment.this.mName, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                            SetProfileNameFragment.this.backToFriendProfile();
                        }
                    });
                } else {
                    String str = "";
                    try {
                        str = new JSONObject(CatfishService.getCatfishPreferences().getString(Constant.PREF_KEY_PROFILE, "")).getString(CatfishDataStorage.NIC_NAME);
                    } catch (JSONException e) {
                    }
                    SetProfileNameFragment.this.mCatfiz.updatePoolTitle(SetProfileNameFragment.this.mName, str, SetProfileNameFragment.this.mId, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                            SetProfileNameFragment.this.backToGroupProfile();
                        }
                    });
                }
            }

            public void onBtnCloseClicked() {
                if (SetProfileNameFragment.this.mPage == 20) {
                    SetProfileNameFragment.this.backToProfile();
                } else if (SetProfileNameFragment.this.mPage == 16) {
                    SetProfileNameFragment.this.backToGroupProfile();
                } else {
                    SetProfileNameFragment.this.backToFriendProfile();
                }
            }
        });
        this.mEtAlias.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                int length = SetProfileNameFragment.this.mEtAlias.getText().length();
                SetProfileNameFragment.this.mTvCount.setText(length + "/" + 24);
                if (!SetProfileNameFragment.this.mEtAlias.isFocused() || length < 24) {
                    String trim = AlbusUtils.removeUnecessaryHtmlTag(SetProfileNameFragment.this.mEtAlias.getText().toString()).trim();
                    if (trim.equals("") || trim.equals(SetProfileNameFragment.this.mPrevName)) {
                        SetProfileNameFragment.this.SaveDeactivated();
                        return;
                    } else {
                        SetProfileNameFragment.this.SaveActivated();
                        return;
                    }
                }
                trim = "";
                AlbusUtils.setToastView(SetProfileNameFragment.this.getActivity(), (SetProfileNameFragment.this.mPage == 16 ? SetProfileNameFragment.this.getString(R.string.reach_max_char_name_group) : SetProfileNameFragment.this.getString(R.string.reach_max_char_names)).replace("[count]", "24"));
            }
        });
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }
}
