package com.albus.fragment;

import android.content.Intent;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.AlbusMainActivity;
import com.albus.activity.BroadcastActivity;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.ChatsBottomBarView;
import com.albus.view.ChatsBottomBarView.onEmojiPanelComponentListener;
import com.albus.view.ChatsBottomBarView.onPanelEmojiAnimation;
import com.albus.view.ChatsBottomBarView.onVoiceBroadcastAttach;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.service.CatfishService;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import org.apache.http.protocol.HTTP;
import org.json.JSONArray;
import org.json.JSONException;

public class BroadcastFragment extends Fragment implements OnClickListener, ICatfiz {
    private static final String TAG = "BroadcastFragment";
    private String mAudioPath = null;
    public ChatsBottomBarView mBottomBar = null;
    private Catfiz mCatfiz = null;
    private String mDataSelectedId = null;
    private String[] mFriendsId = null;
    private LinearLayout mLlSearchFriends = null;
    private TextView mTvSelectedFriends = null;

    private String fetchFriendList(String str) {
        String str2;
        JSONException e;
        String str3 = "";
        try {
            JSONArray jSONArray = new JSONArray(str);
            if (jSONArray.length() != 0) {
                Log.d(TAG, "sum selected friend = " + jSONArray.length());
                str2 = str3;
                int i = 0;
                while (i < jSONArray.length()) {
                    try {
                        str2 = i != jSONArray.length() + -1 ? str2 + jSONArray.getString(i) + ", " : str2 + jSONArray.getString(i);
                        i++;
                    } catch (JSONException e2) {
                        e = e2;
                    }
                }
            } else {
                str2 = getResources().getString(R.string.broadcast_to);
            }
        } catch (JSONException e3) {
            JSONException jSONException = e3;
            str2 = str3;
            e = jSONException;
            e.printStackTrace();
            return str2;
        }
        return str2;
    }

    private void goToAddFriends() {
        Intent intent = new Intent(getActivity(), CustomActionBarPageActivity.class);
        Log.d(TAG, "send data selected friends to selectfriendsfragment: " + this.mDataSelectedId);
        intent.putExtra(AlbusModelObject.SELECTED_FRIENDID, this.mDataSelectedId);
        intent.putExtra(AlbusModelObject.PAGE, 30);
        intent.putExtra(HTTP.IDENTITY_CODING, 18);
        startActivityForResult(intent, 3);
    }

    public static BroadcastFragment newInstance() {
        return new BroadcastFragment();
    }

    public boolean isAnyMessage() {
        return false;
    }

    public boolean isAnyRecipient() {
        return this.mTvSelectedFriends.getText().toString().equals(getResources().getString(R.string.broadcast_to));
    }

    public void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        getActivity();
        if (i2 == -1 && i == 3) {
            Log.d(TAG, "onActivityResult after get selected friends");
            String stringExtra = intent.getStringExtra(AlbusModelObject.SELECTED_FRIEND);
            this.mDataSelectedId = intent.getStringExtra(AlbusModelObject.SELECTED_FRIENDID);
            Log.d(TAG, "onActivityResult get selected friends : " + this.mDataSelectedId);
            this.mTvSelectedFriends.setText(fetchFriendList(stringExtra));
        }
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.ll_clickable_search_friends:
                goToAddFriends();
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_broadcast, viewGroup, false);
        this.mTvSelectedFriends = (TextView) inflate.findViewById(R.id.tv_selected_friends_container);
        this.mLlSearchFriends = (LinearLayout) inflate.findViewById(R.id.ll_clickable_search_friends);
        String selectedName = ((BroadcastActivity) getActivity()).getSelectedName();
        this.mDataSelectedId = ((BroadcastActivity) getActivity()).getSelectedId();
        this.mTvSelectedFriends.setText(fetchFriendList(selectedName));
        this.mBottomBar = (ChatsBottomBarView) inflate.findViewById(R.id.cv_bottom_bar);
        this.mBottomBar.setBroadcast(true, CatfishService.getUserPIN());
        this.mBottomBar.setOnVoiceAttachBroadcast(new onVoiceBroadcastAttach() {
            public void onVoiceBroadcastAttachmentClicked(String str, MediaPlayer mediaPlayer) {
                if (str != null) {
                    BroadcastFragment.this.mAudioPath = str;
                }
            }
        });
        this.mBottomBar.setOnEmojiPanelAnimation(new onPanelEmojiAnimation() {
            public void onPanelDown() {
            }

            public void onPanelDownFinished() {
            }

            public void onPanelUp(View view) {
                ((BroadcastActivity) BroadcastFragment.this.getActivity()).dismissKeyboard(view);
            }

            public void onPanelUpFinished(View view) {
            }
        });
        this.mBottomBar.setOnEmojiPanelComponentListener(new onEmojiPanelComponentListener() {
            public void onBtnKeyboardPressed(View view) {
                ((BroadcastActivity) BroadcastFragment.this.getActivity()).showKeyboard(view);
            }

            public void onBtnSendPressed(String str) {
                BroadcastFragment.this.mBottomBar.checkIsAudioPlay();
                try {
                    JSONArray jSONArray = new JSONArray(BroadcastFragment.this.mDataSelectedId);
                    BroadcastFragment.this.mFriendsId = new String[jSONArray.length()];
                    if (jSONArray.length() != 0) {
                        for (int i = 0; i < jSONArray.length(); i++) {
                            BroadcastFragment.this.mCatfiz.broadcastSelectFriends(jSONArray.getString(i), Boolean.valueOf(true));
                            BroadcastFragment.this.mFriendsId[i] = jSONArray.getString(i);
                        }
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                Log.d(BroadcastFragment.TAG, "broadcast text : " + str);
                Log.d(BroadcastFragment.TAG, "broadcast selected friend : " + BroadcastFragment.this.mFriendsId.length);
                if (BroadcastFragment.this.mAudioPath != null) {
                    BroadcastFragment.this.mCatfiz.broadcastSendVoiceMessage(BroadcastFragment.this.mFriendsId, AlbusUtils.removeUnecessaryHtmlTag(str), BroadcastFragment.this.mAudioPath, new Callback() {
                        public void onError() {
                        }

                        public void onSuccess() {
                        }
                    });
                } else {
                    BroadcastFragment.this.mCatfiz.broadcastSendMessage(BroadcastFragment.this.mFriendsId, AlbusUtils.removeUnecessaryHtmlTag(str), new Callback() {
                        public void onError() {
                            Log.d(BroadcastFragment.TAG, "send broadcast message error");
                        }

                        public void onSuccess() {
                            Log.d(BroadcastFragment.TAG, "send broadcast message success");
                        }
                    });
                }
                Intent intent = new Intent(BroadcastFragment.this.getActivity(), AlbusMainActivity.class);
                intent.setFlags(603979776);
                BroadcastFragment.this.startActivity(intent);
                BroadcastFragment.this.getActivity().finish();
            }

            public void onBtnStickerActive(ImageButton imageButton, boolean z) {
            }

            public void onEditTextFocusChanged() {
            }
        });
        this.mLlSearchFriends.setOnClickListener(this);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        if (!this.mCatfiz.isCatfizStarted()) {
            this.mCatfiz.start();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }
}
