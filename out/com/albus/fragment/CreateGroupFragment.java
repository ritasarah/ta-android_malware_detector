package com.albus.fragment;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.text.InputFilter;
import android.text.InputFilter.LengthFilter;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import com.albus.activity.CreateGroupActivity;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.crop.Crop;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.DialogUI;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.CircleImageView;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.catfiz.R;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.util.Log;
import org.apache.http.HttpStatus;
import org.apache.http.protocol.HTTP;

public class CreateGroupFragment extends Fragment {
    private static final String TAG = "CreateGroupFragment";
    private CustomActionbarView mActionbar = null;
    private EditText mEtGroupName = null;
    private boolean mIsOpenGroup = true;
    private Uri mPpUri = null;
    private CircleImageView mRivPictGroup = null;
    private TextView mTvCount = null;

    public static CreateGroupFragment newInstance() {
        return new CreateGroupFragment();
    }

    public void handleCropResult(int i, Intent intent) {
        getActivity();
        if (i == -1) {
            this.mPpUri = Crop.getOutput(intent);
            if (this.mRivPictGroup != null) {
                Log.d(TAG, "set image group");
                this.mRivPictGroup.setImageDrawable(null);
                this.mRivPictGroup.setImageURI(this.mPpUri);
                return;
            }
            this.mRivPictGroup.setImageURI(this.mPpUri);
        } else if (i == HttpStatus.SC_NOT_FOUND) {
            AlbusUtils.setToastView(getActivity(), Crop.getError(intent).getMessage());
        }
    }

    public boolean isAnyGroupName() {
        String obj = this.mEtGroupName.getText().toString();
        return obj.equals(null) || obj.equals("");
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Log.d(TAG, "onCreateGroupFragment");
        View inflate = layoutInflater.inflate(R.layout.fragment_create_group, viewGroup, false);
        this.mEtGroupName = (EditText) inflate.findViewById(R.id.et_group_name);
        this.mTvCount = (TextView) inflate.findViewById(R.id.tv_count);
        this.mTvCount.setText("0/24");
        this.mEtGroupName.setFilters(new InputFilter[]{new LengthFilter(24)});
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        this.mActionbar.setButtonCreate();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                Intent intent = new Intent(CreateGroupFragment.this.getActivity(), CustomActionBarPageActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 11);
                intent.putExtra(HTTP.IDENTITY_CODING, 10);
                intent.putExtra(CatfishDataStorage.NIC_NAME, CreateGroupFragment.this.mEtGroupName.getText().toString());
                if (CreateGroupFragment.this.mPpUri != null) {
                    intent.putExtra(AlbusModelObject.IMAGE, CreateGroupFragment.this.mPpUri.getPath());
                }
                CreateGroupFragment.this.startActivity(intent);
            }

            public void onBtnCloseClicked() {
                if (CreateGroupFragment.this.isAnyGroupName()) {
                    CreateGroupFragment.this.getActivity().finish();
                } else {
                    ((CreateGroupActivity) CreateGroupFragment.this.getActivity()).showDialogAlert();
                }
            }
        });
        this.mEtGroupName.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                int length = CreateGroupFragment.this.mEtGroupName.getText().length();
                CreateGroupFragment.this.mTvCount.setText(length + "/" + 24);
                if (CreateGroupFragment.this.mEtGroupName.isFocused() && length >= 24) {
                    AlbusUtils.setToastView(CreateGroupFragment.this.getActivity(), CreateGroupFragment.this.getString(R.string.reach_max_char_name_group).replace("[count]", "24"));
                } else if (AlbusUtils.removeUnecessaryHtmlTag(CreateGroupFragment.this.mEtGroupName.getText().toString()).trim().equals("")) {
                    CreateGroupFragment.this.mActionbar.setOnActionBtnDeactivated();
                } else {
                    CreateGroupFragment.this.mActionbar.setOnActionBtnActivated();
                }
            }
        });
        this.mRivPictGroup = (CircleImageView) inflate.findViewById(R.id.riv_img);
        this.mRivPictGroup.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Bundle bundle = new Bundle();
                bundle.putInt(AlbusModelObject.DIALOG, 14);
                AlbusDialog.showDialog(14, new DialogUI().getDialogInterface(), CreateGroupFragment.this.getActivity(), bundle, CreateGroupFragment.this.getActivity().getSupportFragmentManager());
            }
        });
        return inflate;
    }
}
