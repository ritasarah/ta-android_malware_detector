package com.albus.fragment;

import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import com.albus.adapter.FriendsAdapter;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.catfiz.R;
import com.catfiz.base.Callback.FetchUserCategoryCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.User;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Locale;

public class CategoryFragment extends ListFragment implements ICatfiz {
    private static final String TAG = CategoryFragment.class.getSimpleName();
    private FriendsAdapter mAdapter = null;
    private int mCategoryId = 0;
    private Catfiz mCatfiz = null;
    private List mFriends = null;
    private List mFriendsSearchHelper = null;
    private LinearLayout mLlDfView = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    public class FetchUserCatagoryCb implements FetchUserCategoryCallback {
        private WeakReference mThisFragmentRef;

        public FetchUserCatagoryCb(ListFragment listFragment) {
            this.mThisFragmentRef = new WeakReference(listFragment);
        }

        public void onData(List list) {
            CategoryFragment categoryFragment = (CategoryFragment) this.mThisFragmentRef.get();
            if (categoryFragment == null) {
                Log.d(CategoryFragment.TAG, "FetchUserCatagoryCb weak Ref is null");
                return;
            }
            Log.d(CategoryFragment.TAG, "sum category friend = " + list.size());
            categoryFragment.mFriends.clear();
            categoryFragment.mFriends.addAll(list);
            categoryFragment.mAdapter.notifyDataSetChanged();
            if (list.size() > 0) {
                categoryFragment.setDfView(false);
            } else {
                categoryFragment.setDfView(true);
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public static CategoryFragment newInstance() {
        return new CategoryFragment();
    }

    public void enterSearchMode() {
        Log.d(TAG, ">>> onEnterSearchMode");
        this.mFriendsSearchHelper = new ArrayList();
        this.mFriendsSearchHelper.addAll(this.mFriends);
    }

    public void getAllData() {
        Log.d(TAG, ">>> Category ID:" + this.mCategoryId);
        this.mCatfiz.FetchUserOnCategory(this.mCategoryId, new FetchUserCatagoryCb(this));
    }

    public void leaveSearchMode() {
        Log.d(TAG, ">>> onLeaveSearchMode");
        this.mFriendsSearchHelper = null;
        getAllData();
    }

    public void limitListView(String str, boolean z) {
        if (str.length() > 0) {
            if (z) {
                this.mFriends.clear();
                this.mFriends.addAll(this.mFriendsSearchHelper);
            }
            Collection arrayList = new ArrayList();
            for (User user : this.mFriends) {
                if (user != null) {
                    String name = user.getName();
                    if (!(name == null || name.isEmpty() || !name.toLowerCase().contains(str.toLowerCase(Locale.US)))) {
                        arrayList.add(user);
                    }
                }
            }
            this.mFriends.clear();
            this.mFriends.addAll(arrayList);
            this.mAdapter.notifyDataSetChanged();
            return;
        }
        getAllData();
    }

    public void onCatfizStarted() {
        getAllData();
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, ">>>>>>>> onCreate:" + TAG);
        this.mCatfiz = new Catfiz(getActivity(), this);
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(getActivity())) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(getActivity(), imageCacheParams);
        this.mCategoryId = getActivity().getIntent().getIntExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, 0);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_friends, viewGroup, false);
        this.mLlDfView = (LinearLayout) inflate.findViewById(R.id.ll_df_content);
        this.mFriends = new ArrayList();
        this.mAdapter = new FriendsAdapter(getActivity(), this.mFriends, 51);
        this.mAdapter.setUserPhotoLoader(this.mUserPhotoLoader);
        setListAdapter(this.mAdapter);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        Log.d(TAG, ">>>>>>>> onDestroy:" + TAG);
        this.mFriendsSearchHelper = null;
        this.mFriends = null;
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        Log.d(TAG, ">>>>>>>> onResume:" + TAG);
        this.mCatfiz.start();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.start();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        Log.d(TAG, ">>>>>>>> onStop:" + TAG);
        this.mCatfiz.finish();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.stop();
        }
    }

    public void setDfView(boolean z) {
        if (z) {
            this.mLlDfView.setVisibility(0);
        } else {
            this.mLlDfView.setVisibility(8);
        }
    }

    public void updateData() {
        if (this.mCatfiz.isCatfizStarted()) {
            getAllData();
        }
    }
}
