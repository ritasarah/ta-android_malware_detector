package com.albus.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.RegisterActivity;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.albus.view.CircleImageView;
import com.albus.view.CustomEdittext;
import com.albus.view.CustomEdittext.OnActionEdittextChange;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.Account;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.setting.CatfishPreferences;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import org.apache.http.protocol.HTTP;

public class ForgotVerifyPasswordFragment extends Fragment implements OnClickListener, ICatfiz {
    private static final String TAG = "ForgotVerifyPasswordFragment";
    private Button mBtnCancel = null;
    private Button mBtnChange = null;
    private Catfiz mCatfiz = null;
    private CustomEdittext mCetPass = null;
    private CustomEdittext mCetResetCode = null;
    private String mCode = null;
    private String mEmail = null;
    private Handler mHandler = new Handler();
    private long mIdle = 1250;
    private boolean mIsFinished = false;
    private boolean mIsPassCorrect = false;
    private long mLastEdit = 0;
    private LinearLayout mLlProgress = null;
    private String mName = null;
    private String mPass = null;
    private CircleImageView mRivPp = null;
    private View mShadow = null;
    private Runnable mShowError = null;
    private TextView mTvName = null;

    private void DisableChange() {
        this.mBtnChange.setEnabled(false);
        this.mBtnChange.setBackgroundResource(R.drawable.bg_btn_blue_disable);
    }

    private void EnableChange() {
        this.mBtnChange.setEnabled(true);
        this.mBtnChange.setBackgroundResource(R.drawable.button_blue_onclick);
    }

    private void executeChangePassword() {
        Account account = new Account();
        account.setEmail(this.mEmail);
        account.setPassword(this.mPass);
        this.mCatfiz.accountResetPasswordVerify(account, this.mCode, new Callback() {
            public void onError() {
                AlbusUtils.setToastView(ForgotVerifyPasswordFragment.this.getActivity(), ForgotVerifyPasswordFragment.this.getString(R.string.changed_pass_error));
                ForgotVerifyPasswordFragment.this.mLlProgress.setVisibility(8);
                ForgotVerifyPasswordFragment.this.mShadow.setVisibility(8);
            }

            public void onSuccess() {
                if (ForgotVerifyPasswordFragment.this.getActivity().getIntent().getIntExtra(HTTP.IDENTITY_CODING, -1) == 8) {
                    AlbusUtils.setToastView(ForgotVerifyPasswordFragment.this.getActivity(), ForgotVerifyPasswordFragment.this.getString(R.string.changed_pass_success));
                    ((RegisterActivity) ForgotVerifyPasswordFragment.this.getActivity()).finish();
                    return;
                }
                Intent intent = new Intent(ForgotVerifyPasswordFragment.this.getActivity(), RegisterActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 3);
                ForgotVerifyPasswordFragment.this.startActivity(intent);
                ForgotVerifyPasswordFragment.this.mLlProgress.setVisibility(8);
                ForgotVerifyPasswordFragment.this.mShadow.setVisibility(8);
            }
        });
    }

    public static ForgotVerifyPasswordFragment newInstance() {
        return new ForgotVerifyPasswordFragment();
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.btn_cancel:
                getActivity().finish();
                return;
            case R.id.btn_change:
                if (AlbusUtils.isNetworkAvailable(getActivity())) {
                    ((RegisterActivity) getActivity()).finish();
                    this.mCetPass.clearFocus();
                    this.mCetResetCode.clearFocus();
                    ((RegisterActivity) getActivity()).dismissKeyboard(this.mCetPass);
                    ((RegisterActivity) getActivity()).dismissKeyboard(this.mCetResetCode);
                    this.mLlProgress.setVisibility(0);
                    this.mShadow.setVisibility(0);
                    executeChangePassword();
                    return;
                }
                AlbusUtils.setToastView(getActivity(), getString(R.string.check_connection));
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
        this.mEmail = getActivity().getIntent().getExtras().getString(CatfishRESTAPI.CFCOMPACT_EMAIL, null);
        CatfishPreferences catfishPreferences = CatfishService.getCatfishPreferences();
        if (this.mEmail.equals(catfishPreferences.getString(CatfishRESTAPI.CFCOMPACT_EMAIL, ""))) {
            this.mName = catfishPreferences.getString(CatfishDataStorage.NIC_NAME, "");
        }
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Log.d(TAG, "onForgotVerifyPasswordFragment");
        View inflate = layoutInflater.inflate(R.layout.fragment_forgot_verify, viewGroup, false);
        this.mBtnChange = (Button) inflate.findViewById(R.id.btn_change);
        this.mBtnCancel = (Button) inflate.findViewById(R.id.btn_cancel);
        this.mRivPp = (CircleImageView) inflate.findViewById(R.id.riv_pp);
        this.mTvName = (TextView) inflate.findViewById(R.id.tv_name);
        this.mLlProgress = (LinearLayout) inflate.findViewById(R.id.ll_dialog);
        this.mShadow = inflate.findViewById(R.id.view_shadow);
        this.mTvName.setText(this.mEmail);
        this.mCetResetCode = (CustomEdittext) inflate.findViewById(R.id.cet_reset_code);
        this.mCetResetCode.setNormalInput(getString(R.string.reset_code), true, true);
        this.mCetResetCode.setOnActionEdittextChangeClickListener(new OnActionEdittextChange() {
            public void onTextChanged(EditText editText) {
                ForgotVerifyPasswordFragment.this.mCode = editText.getText().toString();
                if (ForgotVerifyPasswordFragment.this.mPass != null) {
                    ForgotVerifyPasswordFragment.this.validateEdittext();
                }
            }
        });
        this.mCetPass = (CustomEdittext) inflate.findViewById(R.id.cet_pass);
        this.mCetPass.setPassInput(getString(R.string.new_pass_hint));
        this.mShowError = new Runnable() {
            public void run() {
                if (System.currentTimeMillis() > (ForgotVerifyPasswordFragment.this.mLastEdit + ForgotVerifyPasswordFragment.this.mIdle) - 500 && ForgotVerifyPasswordFragment.this.isAdded() && !ForgotVerifyPasswordFragment.this.mIsFinished) {
                    ForgotVerifyPasswordFragment.this.mCetPass.setErrorView(ForgotVerifyPasswordFragment.this.getString(R.string.pass_6));
                    ForgotVerifyPasswordFragment.this.mIsPassCorrect = false;
                }
            }
        };
        this.mCetPass.setOnActionEdittextChangeClickListener(new OnActionEdittextChange() {
            public void onTextChanged(EditText editText) {
                ForgotVerifyPasswordFragment.this.mPass = editText.getText().toString();
                if (ForgotVerifyPasswordFragment.this.mCode == null) {
                    ForgotVerifyPasswordFragment.this.DisableChange();
                } else if (ForgotVerifyPasswordFragment.this.mPass.length() >= 6) {
                    ForgotVerifyPasswordFragment.this.mCetPass.hideErrorView();
                    ForgotVerifyPasswordFragment.this.mIsPassCorrect = true;
                    ForgotVerifyPasswordFragment.this.mIsFinished = true;
                    ForgotVerifyPasswordFragment.this.validateEdittext();
                } else {
                    ForgotVerifyPasswordFragment.this.mIsFinished = false;
                    ForgotVerifyPasswordFragment.this.mIsPassCorrect = false;
                    ForgotVerifyPasswordFragment.this.mCetPass.hideErrorView();
                    ForgotVerifyPasswordFragment.this.mLastEdit = System.currentTimeMillis();
                    ForgotVerifyPasswordFragment.this.mHandler.postDelayed(ForgotVerifyPasswordFragment.this.mShowError, ForgotVerifyPasswordFragment.this.mIdle);
                }
            }
        });
        this.mBtnChange.setOnClickListener(this);
        this.mBtnCancel.setOnClickListener(this);
        this.mShadow.setOnClickListener(null);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public void validateEdittext() {
        if (!this.mIsPassCorrect || this.mCode.equals("")) {
            DisableChange();
        } else {
            EnableChange();
        }
    }
}
