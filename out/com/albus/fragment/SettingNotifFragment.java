package com.albus.fragment;

import android.content.ContentUris;
import android.content.Intent;
import android.media.Ringtone;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.Parcelable;
import android.provider.MediaStore.Audio.Media;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.service.CatfishService;
import com.catfiz.setting.CatfishPreferences;
import org.apache.http.conn.routing.HttpRouteDirector;

public class SettingNotifFragment extends Fragment implements OnClickListener, OnCheckedChangeListener {
    private static final String CHAT_DIM = "enable_dim_chat";
    private static final String CHAT_RINGTONE = "select_chat_ringtone";
    private static final String CHAT_RINGTONE_ENABLED = "enable_chat_ringtone";
    private static final String CHAT_VIBRATE = "enable_chat_vibrate";
    private static final String DIM_SCREEN = "dim_screen";
    private static final String GROUP_DIM = "enable_dim_pool";
    private static final String GROUP_RINGTONE = "select_pool_ringtone";
    private static final String GROUP_RINGTONE_ENABLED = "enable_pool_ringtone";
    private static final String GROUP_VIBRATE = "enable_pool_vibrate";
    private static final String MY_STATUS_DIM = "enable_dim_status";
    private static final String MY_STATUS_RINGTONE = "select_status_ringtone";
    private static final String MY_STATUS_RINGTONE_ENABLED = "enable_status_ringtone";
    private static final String MY_STATUS_VIBRATE = "enable_status_vibrate";
    private static final String RINGTONE_ENABLED = "enable_ringtone";
    private static final String TAG = "SettingNotifFragment";
    private boolean mIsDimScreen = false;
    private boolean mIsSwitchChatNotif = false;
    private boolean mIsSwitchDimChat = false;
    private boolean mIsSwitchDimGroup = false;
    private boolean mIsSwitchDimMyStatus = false;
    private boolean mIsSwitchVibrateChat = false;
    private boolean mIsSwitchVibrateGroup = false;
    private boolean mIsSwitchVibrateMyStatus = false;
    private ImageView mIvChatNotif = null;
    private CheckBox mIvDimChat = null;
    private CheckBox mIvDimGroup = null;
    private CheckBox mIvDimMyStatus = null;
    private CheckBox mIvVibrateChat = null;
    private CheckBox mIvVibrateGroup = null;
    private CheckBox mIvVibrateMyStatus = null;
    private LinearLayout mLlSoundChat = null;
    private LinearLayout mLlSoundGroup = null;
    private LinearLayout mLlSoundMyStatus = null;
    private CatfishPreferences mPref;
    private RelativeLayout mRlDimChat = null;
    private RelativeLayout mRlDimGroup = null;
    private RelativeLayout mRlDimMyStatus = null;
    private RelativeLayout mRlVibrateChat = null;
    private RelativeLayout mRlVibrateGroup = null;
    private RelativeLayout mRlVibrateMyStatus = null;
    private TextView mTvSoundChat = null;
    private TextView mTvSoundGroup = null;
    private TextView mTvSoundMyStatus = null;

    private void changeSwitch(boolean z, CheckBox checkBox) {
        checkBox.setChecked(z);
    }

    private Intent getRingtoneIntent() {
        Intent intent = new Intent("android.intent.action.RINGTONE_PICKER");
        intent.putExtra("android.intent.extra.ringtone.TYPE", 2);
        intent.putExtra("android.intent.extra.ringtone.TITLE", AlbusModelObject.SOUNDS);
        Parcelable withAppendedId = ContentUris.withAppendedId(Media.EXTERNAL_CONTENT_URI, 1);
        intent.putExtra("android.intent.extra.ringtone.SHOW_SILENT", true);
        intent.putExtra("android.intent.extra.ringtone.SHOW_DEFAULT", true);
        intent.putExtra("android.intent.extra.ringtone.EXISTING_URI", withAppendedId);
        return intent;
    }

    private String getRingtoneTitle(Uri uri) {
        String str = "";
        return uri != null ? RingtoneManager.getRingtone(getActivity(), uri).getTitle(getActivity()) : "Silent";
    }

    public static SettingNotifFragment newInstance() {
        return new SettingNotifFragment();
    }

    public void onActivityResult(int i, int i2, Intent intent) {
        getActivity();
        if (i2 == -1) {
            Uri uri;
            switch (i) {
                case e.b /*1*/:
                    uri = (Uri) intent.getParcelableExtra("android.intent.extra.ringtone.PICKED_URI");
                    if (uri == null) {
                        this.mPref.edit().putBoolean(CHAT_RINGTONE_ENABLED, false).commit();
                        this.mPref.edit().putString(CHAT_RINGTONE, null).commit();
                        this.mTvSoundChat.setText("Silent");
                        break;
                    }
                    if (!this.mPref.getBoolean(CHAT_RINGTONE_ENABLED, false)) {
                        this.mPref.edit().putBoolean(CHAT_RINGTONE_ENABLED, true).commit();
                    }
                    this.mPref.edit().putString(CHAT_RINGTONE, uri.toString()).commit();
                    this.mTvSoundChat.setText(getRingtoneTitle(uri));
                    break;
                case e.c /*2*/:
                    uri = (Uri) intent.getParcelableExtra("android.intent.extra.ringtone.PICKED_URI");
                    if (uri == null) {
                        this.mPref.edit().putBoolean(GROUP_RINGTONE_ENABLED, false).commit();
                        this.mPref.edit().putString(GROUP_RINGTONE, null).commit();
                        this.mTvSoundGroup.setText("Silent");
                        break;
                    }
                    if (!this.mPref.getBoolean(GROUP_RINGTONE_ENABLED, false)) {
                        this.mPref.edit().putBoolean(GROUP_RINGTONE_ENABLED, true).commit();
                    }
                    this.mPref.edit().putString(GROUP_RINGTONE, uri.toString()).commit();
                    this.mTvSoundGroup.setText(getRingtoneTitle(uri));
                    break;
                case HttpRouteDirector.TUNNEL_TARGET /*3*/:
                    uri = (Uri) intent.getParcelableExtra("android.intent.extra.ringtone.PICKED_URI");
                    if (uri == null) {
                        this.mPref.edit().putBoolean(MY_STATUS_RINGTONE_ENABLED, false).commit();
                        this.mPref.edit().putString(MY_STATUS_RINGTONE, null).commit();
                        this.mTvSoundMyStatus.setText("Silent");
                        break;
                    }
                    if (!this.mPref.getBoolean(MY_STATUS_RINGTONE_ENABLED, false)) {
                        this.mPref.edit().putBoolean(MY_STATUS_RINGTONE_ENABLED, true).commit();
                    }
                    this.mPref.edit().putString(MY_STATUS_RINGTONE, uri.toString()).commit();
                    this.mTvSoundMyStatus.setText(getRingtoneTitle(uri));
                    break;
            }
        }
        super.onActivityResult(i, i2, intent);
    }

    public void onCheckedChanged(CompoundButton compoundButton, boolean z) {
        switch (compoundButton.getId()) {
            case R.id.iv_dim_chat:
                this.mPref.edit().putBoolean(CHAT_DIM, z).commit();
                this.mIsSwitchDimChat = z;
                return;
            case R.id.iv_vibrate_chat:
                this.mPref.edit().putBoolean(CHAT_VIBRATE, z).commit();
                this.mIsSwitchVibrateChat = z;
                return;
            case R.id.iv_dim_group:
                this.mPref.edit().putBoolean(GROUP_DIM, z).commit();
                this.mIsSwitchDimGroup = z;
                return;
            case R.id.iv_vibrate_group:
                this.mPref.edit().putBoolean(GROUP_VIBRATE, z).commit();
                this.mIsSwitchVibrateGroup = z;
                return;
            case R.id.iv_dim_my_status:
                this.mPref.edit().putBoolean(MY_STATUS_DIM, z).commit();
                this.mIsSwitchDimMyStatus = z;
                return;
            case R.id.iv_vibrate_my_status:
                this.mPref.edit().putBoolean(MY_STATUS_VIBRATE, z).commit();
                this.mIsSwitchVibrateMyStatus = z;
                return;
            default:
                return;
        }
    }

    public void onClick(View view) {
        boolean z = true;
        Parcelable parse;
        Intent ringtoneIntent;
        switch (view.getId()) {
            case R.id.ll_sound_chat:
                Parcelable parse2 = Uri.parse(this.mPref.getString(CHAT_RINGTONE, ""));
                Intent ringtoneIntent2 = getRingtoneIntent();
                ringtoneIntent2.putExtra("android.intent.extra.ringtone.EXISTING_URI", parse2);
                startActivityForResult(ringtoneIntent2, 1);
                return;
            case R.id.rl_dim_chat:
                if (this.mIsSwitchDimChat) {
                    z = false;
                }
                changeSwitch(z, this.mIvDimChat);
                return;
            case R.id.rl_vibrate_chat:
                if (this.mIsSwitchVibrateChat) {
                    z = false;
                }
                changeSwitch(z, this.mIvVibrateChat);
                return;
            case R.id.ll_sound_group:
                parse = Uri.parse(this.mPref.getString(GROUP_RINGTONE, ""));
                ringtoneIntent = getRingtoneIntent();
                ringtoneIntent.putExtra("android.intent.extra.ringtone.EXISTING_URI", parse);
                startActivityForResult(ringtoneIntent, 2);
                return;
            case R.id.rl_dim_group:
                if (this.mIsSwitchDimGroup) {
                    z = false;
                }
                changeSwitch(z, this.mIvDimGroup);
                return;
            case R.id.rl_vibrate_group:
                if (this.mIsSwitchVibrateGroup) {
                    z = false;
                }
                changeSwitch(z, this.mIvVibrateGroup);
                return;
            case R.id.ll_sound_mystatus:
                parse = Uri.parse(this.mPref.getString(MY_STATUS_RINGTONE, ""));
                ringtoneIntent = getRingtoneIntent();
                ringtoneIntent.putExtra("android.intent.extra.ringtone.EXISTING_URI", parse);
                startActivityForResult(ringtoneIntent, 3);
                return;
            case R.id.rl_dim_my_status:
                if (this.mIsSwitchDimMyStatus) {
                    z = false;
                }
                changeSwitch(z, this.mIvDimMyStatus);
                return;
            case R.id.rl_vibrate_my_status:
                if (this.mIsSwitchVibrateMyStatus) {
                    z = false;
                }
                changeSwitch(z, this.mIvVibrateMyStatus);
                return;
            default:
                return;
        }
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        Ringtone ringtone;
        View inflate = layoutInflater.inflate(R.layout.fragment_setting_notif, viewGroup, false);
        this.mLlSoundChat = (LinearLayout) inflate.findViewById(R.id.ll_sound_chat);
        this.mLlSoundGroup = (LinearLayout) inflate.findViewById(R.id.ll_sound_group);
        this.mLlSoundMyStatus = (LinearLayout) inflate.findViewById(R.id.ll_sound_mystatus);
        this.mRlVibrateChat = (RelativeLayout) inflate.findViewById(R.id.rl_vibrate_chat);
        this.mRlVibrateGroup = (RelativeLayout) inflate.findViewById(R.id.rl_vibrate_group);
        this.mRlVibrateMyStatus = (RelativeLayout) inflate.findViewById(R.id.rl_vibrate_my_status);
        this.mRlDimChat = (RelativeLayout) inflate.findViewById(R.id.rl_dim_chat);
        this.mRlDimGroup = (RelativeLayout) inflate.findViewById(R.id.rl_dim_group);
        this.mRlDimMyStatus = (RelativeLayout) inflate.findViewById(R.id.rl_dim_my_status);
        this.mIvVibrateChat = (CheckBox) inflate.findViewById(R.id.iv_vibrate_chat);
        this.mIvVibrateGroup = (CheckBox) inflate.findViewById(R.id.iv_vibrate_group);
        this.mIvVibrateMyStatus = (CheckBox) inflate.findViewById(R.id.iv_vibrate_my_status);
        this.mIvDimChat = (CheckBox) inflate.findViewById(R.id.iv_dim_chat);
        this.mIvDimGroup = (CheckBox) inflate.findViewById(R.id.iv_dim_group);
        this.mIvDimMyStatus = (CheckBox) inflate.findViewById(R.id.iv_dim_my_status);
        this.mTvSoundChat = (TextView) inflate.findViewById(R.id.tv_sound_chat);
        this.mTvSoundGroup = (TextView) inflate.findViewById(R.id.tv_sound_group);
        this.mTvSoundMyStatus = (TextView) inflate.findViewById(R.id.tv_sound_mystatus);
        this.mLlSoundChat.setOnClickListener(this);
        this.mLlSoundGroup.setOnClickListener(this);
        this.mLlSoundMyStatus.setOnClickListener(this);
        this.mRlVibrateChat.setOnClickListener(this);
        this.mRlVibrateGroup.setOnClickListener(this);
        this.mRlVibrateMyStatus.setOnClickListener(this);
        this.mRlDimChat.setOnClickListener(this);
        this.mRlDimGroup.setOnClickListener(this);
        this.mRlDimMyStatus.setOnClickListener(this);
        this.mIvVibrateChat.setOnCheckedChangeListener(this);
        this.mIvVibrateGroup.setOnCheckedChangeListener(this);
        this.mIvVibrateMyStatus.setOnCheckedChangeListener(this);
        this.mIvDimChat.setOnCheckedChangeListener(this);
        this.mIvDimGroup.setOnCheckedChangeListener(this);
        this.mIvDimMyStatus.setOnCheckedChangeListener(this);
        this.mPref = CatfishService.getCatfishPreferences();
        String string = this.mPref.getString(CHAT_RINGTONE, "");
        if (string == null || string.isEmpty()) {
            this.mTvSoundChat.setText("Silent");
        } else {
            ringtone = RingtoneManager.getRingtone(getActivity(), Uri.parse(string));
            if (ringtone == null) {
                this.mPref.edit().remove(CHAT_RINGTONE).commit();
                this.mTvSoundChat.setText("Silent");
            } else {
                this.mTvSoundChat.setText(ringtone.getTitle(getActivity()));
            }
        }
        string = this.mPref.getString(GROUP_RINGTONE, "");
        if (string == null || string.isEmpty()) {
            this.mTvSoundGroup.setText("Silent");
        } else {
            ringtone = RingtoneManager.getRingtone(getActivity(), Uri.parse(string));
            if (ringtone == null) {
                this.mPref.edit().remove(GROUP_RINGTONE).commit();
                this.mTvSoundGroup.setText("Silent");
            } else {
                this.mTvSoundGroup.setText(ringtone.getTitle(getActivity()));
            }
        }
        string = this.mPref.getString(MY_STATUS_RINGTONE, "");
        if (string == null || string.isEmpty()) {
            this.mTvSoundMyStatus.setText("Silent");
        } else {
            ringtone = RingtoneManager.getRingtone(getActivity(), Uri.parse(string));
            if (ringtone == null) {
                this.mPref.edit().remove(MY_STATUS_RINGTONE).commit();
                this.mTvSoundMyStatus.setText("Silent");
            } else {
                this.mTvSoundMyStatus.setText(ringtone.getTitle(getActivity()));
            }
        }
        this.mIsSwitchVibrateChat = this.mPref.getBoolean(CHAT_VIBRATE, false);
        changeSwitch(this.mIsSwitchVibrateChat, this.mIvVibrateChat);
        this.mIsSwitchVibrateGroup = this.mPref.getBoolean(GROUP_VIBRATE, false);
        changeSwitch(this.mIsSwitchVibrateGroup, this.mIvVibrateGroup);
        this.mIsSwitchVibrateMyStatus = this.mPref.getBoolean(MY_STATUS_VIBRATE, false);
        changeSwitch(this.mIsSwitchVibrateMyStatus, this.mIvVibrateMyStatus);
        this.mIsSwitchDimChat = this.mPref.getBoolean(CHAT_DIM, false);
        changeSwitch(this.mIsSwitchDimChat, this.mIvDimChat);
        this.mIsSwitchDimGroup = this.mPref.getBoolean(GROUP_DIM, false);
        changeSwitch(this.mIsSwitchDimGroup, this.mIvDimGroup);
        this.mIsSwitchDimMyStatus = this.mPref.getBoolean(MY_STATUS_DIM, false);
        changeSwitch(this.mIsSwitchDimMyStatus, this.mIvDimMyStatus);
        return inflate;
    }
}
