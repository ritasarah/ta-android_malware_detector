package com.albus.fragment;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.ListFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import com.albus.activity.SyncContactActivity;
import com.albus.adapter.ContactAdapter;
import com.albus.contact.SyncContactUtil;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.catfiz.R;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class SyncContactFragment extends ListFragment implements ICatfiz {
    public static final String TAG = "SyncContactFragment";
    private FetchEmailsFromContact fetchEmails = null;
    private CustomActionbarView mActionbar = null;
    private ContactAdapter mAdapter = null;
    private Catfiz mCatfiz = null;
    private String mNicFriend = null;
    private ProgressBar mPbSync = null;
    private List mUsers = null;
    private Thread thread = null;

    class FetchEmailsFromContact implements Runnable {
        private Context mContext;
        private Handler mHandler;
        private List mUsers;
        private SyncContactUtil syncUtil = null;

        public FetchEmailsFromContact(Context context, List list, Handler handler) {
            this.mUsers = list;
            this.mContext = context;
            this.mHandler = handler;
        }

        public void run() {
            this.syncUtil = new SyncContactUtil();
            Collection fetchContactData = this.syncUtil.fetchContactData(this.mContext);
            if (fetchContactData == null) {
                this.mHandler.sendEmptyMessage(0);
                return;
            }
            this.mUsers.clear();
            this.mUsers.addAll(fetchContactData);
            this.mHandler.sendEmptyMessage(1);
        }

        public void stop() {
            this.syncUtil.stop();
        }
    }

    private void fetchEmailsFromContact() {
        this.fetchEmails = new FetchEmailsFromContact(getActivity(), this.mUsers, new Handler() {
            public void handleMessage(Message message) {
                super.handleMessage(message);
                Log.d(SyncContactFragment.TAG, "fetch email get done! with status :" + message.what);
                if (message.what == 1) {
                    SyncContactFragment.this.mAdapter.notifyDataSetChanged();
                    SyncContactFragment.this.mPbSync.setVisibility(8);
                    SyncContactFragment.this.getListView().setVisibility(0);
                }
            }
        });
        this.thread = new Thread(this.fetchEmails);
        this.thread.start();
    }

    public static SyncContactFragment newInstance() {
        return new SyncContactFragment();
    }

    public void getAllData() {
        fetchEmailsFromContact();
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        setListAdapter(this.mAdapter);
        getAllData();
    }

    public void onCatfizStarted() {
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_sync_contact, viewGroup, false);
        this.mUsers = new ArrayList();
        this.mAdapter = new ContactAdapter(getActivity(), this.mUsers);
        this.mPbSync = (ProgressBar) inflate.findViewById(R.id.pb_sync);
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        this.mActionbar.setButtonRefresh();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                SyncContactFragment.this.getAllData();
            }

            public void onBtnCloseClicked() {
                ((SyncContactActivity) SyncContactFragment.this.getActivity()).finish();
            }
        });
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
        if (this.fetchEmails != null) {
            this.fetchEmails.stop();
        }
        if (this.thread != null) {
            this.thread.interrupt();
            this.thread = null;
        }
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }
}
