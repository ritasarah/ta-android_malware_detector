package com.albus.fragment;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.ListFragment;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.CategorySettingsActivity;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.adapter.FriendsAdapter;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.FetchUserCategoryCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.protocol.HTTP;
import org.json.JSONArray;

public class CategorySettingFragment extends ListFragment implements ICatfiz {
    private static final String TAG = "CategorySettingFragment";
    private FriendsAdapter mAdapter = null;
    private Catfiz mCatfiz = null;
    private JSONArray mFriendInCategory = null;
    private List mFriends = null;
    private int mId = 0;
    private String mName = null;
    private TextView mTvName = null;
    private TextView mTvSum = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    public class FetchUserCatagoryCb implements FetchUserCategoryCallback {
        private WeakReference mThisFragmentRef;

        public FetchUserCatagoryCb(ListFragment listFragment) {
            this.mThisFragmentRef = new WeakReference(listFragment);
        }

        public void onData(List list) {
            CategorySettingFragment categorySettingFragment = (CategorySettingFragment) this.mThisFragmentRef.get();
            if (categorySettingFragment == null) {
                Log.d(CategorySettingFragment.TAG, "FetchUserCatagoryCb weak Ref is null");
                return;
            }
            Log.d(CategorySettingFragment.TAG, "sum category friend = " + list.size());
            categorySettingFragment.mFriendInCategory = new JSONArray();
            for (int i = 0; i < list.size(); i++) {
                categorySettingFragment.mFriendInCategory.put(((User) list.get(i)).getId().toString());
            }
            categorySettingFragment.mFriends.addAll(list);
            categorySettingFragment.mAdapter.notifyDataSetChanged();
            if (list.size() > 0) {
                categorySettingFragment.mTvSum.setText("" + list.size());
            } else {
                categorySettingFragment.mTvSum.setText(categorySettingFragment.getActivity().getString(R.string.no));
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    class deleteCategory implements AlbusDialogInterface {
        private deleteCategory() {
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            final int i2 = bundle.getInt(CatfishRESTAPI.CFCOMPACT_STICKERID);
            AlbusDialog.setOnActionClickListener(i, new OnActionClickListener() {
                public void onActionNoListener() {
                    dialogFragment.dismiss();
                }

                public void onActionYesListener() {
                    dialogFragment.dismiss();
                    CategorySettingFragment.this.mCatfiz.dropCategory(i2, new Callback() {
                        public void onError() {
                            AlbusUtils.setToastView(CategorySettingFragment.this.getActivity(), CategorySettingFragment.this.getString(R.string.delete_category_failed));
                        }

                        public void onSuccess() {
                            AlbusUtils.setToastView(CategorySettingFragment.this.getActivity(), CategorySettingFragment.this.getString(R.string.delete_category));
                            ((CategorySettingsActivity) CategorySettingFragment.this.getActivity()).endactivitybefore();
                        }
                    });
                }
            });
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    class renameCategory implements AlbusDialogInterface {
        private renameCategory() {
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            final EditText editText = (EditText) view.findViewById(R.id.et_value);
            final int i2 = bundle.getInt(CatfishRESTAPI.CFCOMPACT_STICKERID);
            AlbusDialog.setOnActionClickListener(i, new OnActionClickListener() {
                public void onActionNoListener() {
                    dialogFragment.dismiss();
                }

                public void onActionYesListener() {
                    CategorySettingFragment.this.mCatfiz.renameCategory(editText.getText().toString(), String.valueOf(i2), new Callback() {
                        public void onError() {
                            AlbusUtils.setToastView(CategorySettingFragment.this.getActivity(), CategorySettingFragment.this.getString(R.string.changed_name_failed));
                        }

                        public void onSuccess() {
                            AlbusUtils.setToastView(CategorySettingFragment.this.getActivity(), CategorySettingFragment.this.getString(R.string.changed_name_success));
                            ((CategorySettingsActivity) CategorySettingFragment.this.getActivity()).setName(editText.getText().toString());
                            CategorySettingFragment.this.mTvName.setText(editText.getText().toString());
                            dialogFragment.dismiss();
                        }
                    });
                }
            });
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    public static CategorySettingFragment newInstance() {
        return new CategorySettingFragment();
    }

    public void clearAllData() {
        this.mFriends.clear();
        this.mAdapter.notifyDataSetChanged();
    }

    public void enterSearchMode() {
        clearAllData();
    }

    public void getAllData() {
        this.mFriends.clear();
        Log.d(TAG, "category id = " + ((CategorySettingsActivity) getActivity()).getId());
        this.mCatfiz.FetchUserOnCategory(((CategorySettingsActivity) getActivity()).getId(), new FetchUserCatagoryCb(this));
    }

    public void leaveSearchMode() {
        clearAllData();
        getAllData();
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        View inflate = getActivity().getLayoutInflater().inflate(R.layout.header_category_setting, null, false);
        this.mTvSum = (TextView) inflate.findViewById(R.id.tv_sum);
        LinearLayout linearLayout = (LinearLayout) inflate.findViewById(R.id.ll_edit_name);
        LinearLayout linearLayout2 = (LinearLayout) inflate.findViewById(R.id.ll_delete);
        LinearLayout linearLayout3 = (LinearLayout) inflate.findViewById(R.id.ll_add);
        this.mTvName = (TextView) inflate.findViewById(R.id.tv_name);
        this.mTvName.setText(((CategorySettingsActivity) getActivity()).getName());
        linearLayout.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Bundle bundle = new Bundle();
                bundle.putInt(AlbusModelObject.DIALOG, 46);
                bundle.putString(CatfishDataStorage.NIC_NAME, CategorySettingFragment.this.mName);
                bundle.putInt(CatfishRESTAPI.CFCOMPACT_STICKERID, CategorySettingFragment.this.mId);
                AlbusDialog.showDialog(46, new renameCategory(), CategorySettingFragment.this.getActivity(), bundle, CategorySettingFragment.this.getActivity().getSupportFragmentManager());
            }
        });
        linearLayout2.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Bundle bundle = new Bundle();
                bundle.putInt(AlbusModelObject.DIALOG, 49);
                bundle.putString(CatfishDataStorage.NIC_NAME, CategorySettingFragment.this.mName);
                bundle.putInt(CatfishRESTAPI.CFCOMPACT_STICKERID, CategorySettingFragment.this.mId);
                AlbusDialog.showDialog(49, new deleteCategory(), CategorySettingFragment.this.getActivity(), bundle, CategorySettingFragment.this.getActivity().getSupportFragmentManager());
            }
        });
        linearLayout3.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Log.d(CategorySettingFragment.TAG, "friend already in category is : " + CategorySettingFragment.this.mFriendInCategory.toString());
                Intent intent = new Intent(CategorySettingFragment.this.getActivity(), CustomActionBarPageActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 53);
                intent.putExtra(HTTP.IDENTITY_CODING, 52);
                intent.putExtra(AlbusModelObject.SELECTED_FRIENDID, CategorySettingFragment.this.mFriendInCategory.toString());
                intent.putExtra(AlbusModelObject.CATEGORY_ID, CategorySettingFragment.this.mId);
                intent.putExtra(CatfishDataStorage.NIC_NAME, CategorySettingFragment.this.mName);
                CategorySettingFragment.this.startActivity(intent);
            }
        });
        getListView().addHeaderView(inflate, null, false);
        this.mAdapter = new FriendsAdapter(getActivity(), this.mFriends, 52);
        this.mAdapter.setUserPhotoLoader(this.mUserPhotoLoader);
        setListAdapter(this.mAdapter);
    }

    public void onCatfizStarted() {
        getAllData();
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, "onCreate CategorySettingFragment");
        this.mCatfiz = new Catfiz(getActivity(), this);
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(getActivity())) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(getActivity(), imageCacheParams);
        this.mName = ((CategorySettingsActivity) getActivity()).getName();
        this.mId = ((CategorySettingsActivity) getActivity()).getId();
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_listview, viewGroup, false);
        this.mFriends = new ArrayList();
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
        if (this.mCatfiz.isCatfizStarted()) {
            getAllData();
        }
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.start();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.stop();
        }
    }

    public void updateData() {
        if (this.mCatfiz.isCatfizStarted()) {
            getAllData();
        }
    }
}
