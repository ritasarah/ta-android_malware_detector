package com.albus.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.text.Editable;
import android.text.InputFilter;
import android.text.InputFilter.AllCaps;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Toast;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.activity.ScanQrCodeActivity;
import com.albus.activity.SyncContactActivity;
import com.albus.adapter.AddNewFriendAdapter;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusUtils;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.UserFetchPendingRequestCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.service.CatfishService;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import org.apache.http.protocol.HTTP;

public class AddNewFriendFragment extends ListFragment implements OnClickListener, ICatfiz {
    public static final String TAG = "AddNewFriendFragment";
    private CustomActionbarView mActionbar = null;
    private AddNewFriendAdapter mAdapter = null;
    private Catfiz mCatfiz = null;
    private EditText mEtValue = null;
    private List mFriends = null;
    private ImageButton mIbClear = null;
    private LinearLayout mLlProgress = null;
    private LinearLayout mLlTitleList = null;
    private String mNicFriend = null;
    private View mShadow = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    public class FetchPendingFriendCb implements UserFetchPendingRequestCallback {
        private WeakReference mThisFragmentRef;

        public FetchPendingFriendCb(ListFragment listFragment) {
            this.mThisFragmentRef = new WeakReference(listFragment);
        }

        public void onData(List list) {
            AddNewFriendFragment addNewFriendFragment = (AddNewFriendFragment) this.mThisFragmentRef.get();
            if (addNewFriendFragment == null) {
                Log.d(AddNewFriendFragment.TAG, "FetchPendingFriendCb weak Ref is null");
            } else if (list.size() > 0) {
                addNewFriendFragment.mLlTitleList.setVisibility(0);
                addNewFriendFragment.mFriends.addAll(list);
                addNewFriendFragment.mAdapter.notifyDataSetChanged();
            } else {
                addNewFriendFragment.mLlTitleList.setVisibility(8);
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public static AddNewFriendFragment newInstance() {
        return new AddNewFriendFragment();
    }

    public void getAllData() {
        this.mFriends.clear();
        this.mCatfiz.userFetchPendingRequest(new FetchPendingFriendCb(this));
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        View inflate = getActivity().getLayoutInflater().inflate(R.layout.header_addfriend, null, false);
        LinearLayout linearLayout = (LinearLayout) inflate.findViewById(R.id.ll_scan_qrcode);
        LinearLayout linearLayout2 = (LinearLayout) inflate.findViewById(R.id.ll_sync);
        LinearLayout linearLayout3 = (LinearLayout) inflate.findViewById(R.id.ll_invite_more);
        this.mLlTitleList = (LinearLayout) inflate.findViewById(R.id.ll_header_list);
        linearLayout.setOnClickListener(this);
        linearLayout2.setOnClickListener(this);
        linearLayout3.setOnClickListener(this);
        getListView().addHeaderView(inflate, null, false);
        this.mAdapter = new AddNewFriendAdapter(getActivity(), this.mFriends);
        this.mAdapter.setUserPhotoLoader(this.mUserPhotoLoader);
        setListAdapter(this.mAdapter);
    }

    public void onCatfizStarted() {
        getAllData();
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.ib_clear:
                this.mEtValue.setText("");
                return;
            case R.id.ll_scan_qrcode:
                startActivityForResult(new Intent(getActivity(), ScanQrCodeActivity.class), 19);
                return;
            case R.id.ll_sync:
                startActivity(new Intent(getActivity(), SyncContactActivity.class));
                return;
            case R.id.ll_invite_more:
                Intent intent = new Intent("android.intent.action.SEND");
                intent.setType(HTTP.PLAIN_TEXT_TYPE);
                intent.putExtra("android.intent.extra.TEXT", getString(R.string.tell_friend) + "\nnic.catfiz.com/" + CatfishService.getUserPIN());
                startActivity(Intent.createChooser(intent, getString(R.string.share_using)));
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(getActivity())) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(getActivity(), imageCacheParams);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_add_friend, viewGroup, false);
        this.mIbClear = (ImageButton) inflate.findViewById(R.id.ib_clear);
        this.mShadow = inflate.findViewById(R.id.view_shadow);
        this.mLlProgress = (LinearLayout) inflate.findViewById(R.id.ll_dialog);
        this.mFriends = new ArrayList();
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        this.mActionbar.setButtonAdd();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                if (AlbusUtils.isNetworkAvailable(AddNewFriendFragment.this.getActivity())) {
                    AddNewFriendFragment.this.mLlProgress.setVisibility(0);
                    AddNewFriendFragment.this.mShadow.setVisibility(0);
                    AddNewFriendFragment.this.mEtValue.clearFocus();
                    ((CustomActionBarPageActivity) AddNewFriendFragment.this.getActivity()).dismissKeyboard(AddNewFriendFragment.this.mEtValue);
                    AddNewFriendFragment.this.mActionbar.setOnActionBtnDeactivated();
                    final String replace = AddNewFriendFragment.this.mEtValue.getText().toString().toUpperCase(Locale.US).replace("NIC:", "");
                    if (AddNewFriendFragment.this.mEtValue.getText() == null || !replace.equals(CatfishService.getUserPIN().toUpperCase(Locale.US))) {
                        AddNewFriendFragment.this.mCatfiz.userCheckIsFriend(replace, new Callback() {
                            public void onError() {
                                AlbusUtils.setToastView(AddNewFriendFragment.this.getActivity(), AddNewFriendFragment.this.getString(R.string.already_a_friend_dialog_title));
                                AddNewFriendFragment.this.mLlProgress.setVisibility(8);
                                AddNewFriendFragment.this.mShadow.setVisibility(8);
                                AddNewFriendFragment.this.mEtValue.setText("");
                            }

                            public void onSuccess() {
                                Log.d(AddNewFriendFragment.TAG, "success check friend");
                                AddNewFriendFragment.this.mCatfiz.userRequestAddFriend(replace, new Callback() {
                                    public void onError() {
                                        AddNewFriendFragment.this.mLlProgress.setVisibility(8);
                                        AddNewFriendFragment.this.mShadow.setVisibility(8);
                                        AlbusUtils.setToastView(AddNewFriendFragment.this.getActivity(), AddNewFriendFragment.this.getString(R.string.add_error));
                                        AddNewFriendFragment.this.mActionbar.setOnActionBtnActivated();
                                        AddNewFriendFragment.this.mEtValue.requestFocus();
                                    }

                                    public void onSuccess() {
                                        AddNewFriendFragment.this.mLlProgress.setVisibility(8);
                                        AddNewFriendFragment.this.mShadow.setVisibility(8);
                                        AddNewFriendFragment.this.mEtValue.setText("");
                                        AddNewFriendFragment.this.getAllData();
                                        AlbusUtils.setToastView(AddNewFriendFragment.this.getActivity(), AddNewFriendFragment.this.getResources().getString(R.string.df_pending_friend));
                                    }
                                });
                            }
                        });
                        return;
                    }
                    Toast.makeText(AddNewFriendFragment.this.getActivity(), AddNewFriendFragment.this.getActivity().getResources().getString(R.string.qr_code_nic_mine), 0).show();
                    AddNewFriendFragment.this.mLlProgress.setVisibility(8);
                    AddNewFriendFragment.this.mShadow.setVisibility(8);
                    AddNewFriendFragment.this.mEtValue.setText("");
                    AddNewFriendFragment.this.getAllData();
                    return;
                }
                AlbusUtils.setToastView(AddNewFriendFragment.this.getActivity(), AddNewFriendFragment.this.getString(R.string.check_connection));
            }

            public void onBtnCloseClicked() {
                ((CustomActionBarPageActivity) AddNewFriendFragment.this.getActivity()).dismissKeyboard(AddNewFriendFragment.this.mEtValue);
                ((CustomActionBarPageActivity) AddNewFriendFragment.this.getActivity()).finish();
            }
        });
        this.mEtValue = (EditText) inflate.findViewById(R.id.et_value);
        this.mEtValue.setFilters(new InputFilter[]{new AllCaps()});
        this.mEtValue.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                if (AddNewFriendFragment.this.mEtValue.getText().length() > 7) {
                    AddNewFriendFragment.this.mActionbar.setOnActionBtnActivated();
                } else {
                    AddNewFriendFragment.this.mActionbar.setOnActionBtnDeactivated();
                }
            }
        });
        this.mIbClear.setOnClickListener(this);
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
        updateData();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public void updateData() {
        if (this.mCatfiz.isCatfizStarted()) {
            getAllData();
        }
    }
}
