package com.albus.fragment;

import android.app.Dialog;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.service.CatfishService;
import com.catfiz.setting.CatfishPreferences;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class SettingUpdateFragment extends Fragment implements OnClickListener {
    private static final String RECEIVE_TIME = "status_receive_time";
    private CheckBox mIvCheckedName;
    private LinearLayout mLlReceiveTime;
    private SharedPreferences mPref;
    private List mReceiveTimeList;
    private List mReceiveTimeValueList;
    private RelativeLayout mRlShowChangedName;
    private boolean mShowChangedName;
    private TextView mTvReceiveTime;

    private void changeSwitch(boolean z, CheckBox checkBox) {
        checkBox.setChecked(z);
    }

    private int getIndexReceiveTime(String str) {
        int i = 0;
        for (String equals : this.mReceiveTimeValueList) {
            if (equals.equals(str)) {
                return i;
            }
            i++;
        }
        return 0;
    }

    public static SettingUpdateFragment newInstance() {
        return new SettingUpdateFragment();
    }

    private void showDialogChooserReceiveTime() {
        final Dialog dialog = new Dialog(getActivity(), 16973941);
        View inflate = getActivity().getLayoutInflater().inflate(R.layout.dialog_list_category, null);
        TextView textView = (TextView) inflate.findViewById(R.id.tv_title);
        inflate.findViewById(R.id.ll_bottom_btn).setVisibility(8);
        final Object arrayAdapter = new ArrayAdapter(getActivity(), R.layout.item_list_dialog);
        arrayAdapter.addAll(this.mReceiveTimeList);
        ListView listView = (ListView) inflate.findViewById(R.id.listview);
        listView.setAdapter(arrayAdapter);
        listView.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView adapterView, View view, int i, long j) {
                SettingUpdateFragment.this.mTvReceiveTime.setText((String) arrayAdapter.getItem(i));
                SettingUpdateFragment.this.mPref.edit().putString(SettingUpdateFragment.RECEIVE_TIME, (String) SettingUpdateFragment.this.mReceiveTimeValueList.get(i)).commit();
                dialog.dismiss();
            }
        });
        textView.setText(getString(R.string.update_receive_time));
        dialog.setContentView(inflate);
        dialog.show();
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.ll_receive_time:
                showDialogChooserReceiveTime();
                return;
            case R.id.rl_hide_fname_change:
                changeSwitch(!this.mShowChangedName, this.mIvCheckedName);
                return;
            default:
                return;
        }
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_setting_update, viewGroup, false);
        this.mLlReceiveTime = (LinearLayout) inflate.findViewById(R.id.ll_receive_time);
        this.mTvReceiveTime = (TextView) inflate.findViewById(R.id.tv_receive_time);
        this.mRlShowChangedName = (RelativeLayout) inflate.findViewById(R.id.rl_hide_fname_change);
        this.mIvCheckedName = (CheckBox) inflate.findViewById(R.id.iv_name_checked);
        this.mShowChangedName = CatfishService.getCatfishPreferences().getBoolean(AlbusModelObject.SHOW_CHANGED_NAME, false);
        this.mPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
        changeSwitch(this.mShowChangedName, this.mIvCheckedName);
        this.mReceiveTimeList = Arrays.asList(getActivity().getResources().getStringArray(R.array.list_interval));
        this.mReceiveTimeValueList = new ArrayList();
        this.mReceiveTimeValueList.add("0");
        this.mReceiveTimeValueList.add("180000");
        this.mReceiveTimeValueList.add("300000");
        this.mReceiveTimeValueList.add("900000");
        this.mReceiveTimeValueList.add("3600000");
        this.mTvReceiveTime.setText("" + ((String) this.mReceiveTimeList.get(getIndexReceiveTime(this.mPref.getString(RECEIVE_TIME, (String) this.mReceiveTimeValueList.get(0))))));
        this.mLlReceiveTime.setOnClickListener(this);
        this.mRlShowChangedName.setOnClickListener(this);
        this.mIvCheckedName.setOnCheckedChangeListener(new OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton compoundButton, boolean z) {
                CatfishPreferences catfishPreferences = CatfishService.getCatfishPreferences();
                SettingUpdateFragment.this.mShowChangedName = z;
                catfishPreferences.edit().putBoolean(AlbusModelObject.SHOW_CHANGED_NAME, SettingUpdateFragment.this.mShowChangedName);
            }
        });
        return inflate;
    }
}
