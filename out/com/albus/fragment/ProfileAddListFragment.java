package com.albus.fragment;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v4.app.NavUtils;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;
import android.widget.TextView;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.activity.ProfilesGroupActivity;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.model.Email;
import com.catfiz.model.User;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.util.Log;
import com.catfiz.util.MimeTypeParser;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.apache.commons.logging.impl.SimpleLog;
import org.apache.http.conn.routing.HttpRouteDirector;
import org.json.JSONException;
import org.json.JSONObject;

public class ProfileAddListFragment extends Fragment {
    private static final String TAG = "ProfileAddListFragment";
    private ArrayAdapter mAdapter = null;
    private Spinner mAddSpinner = null;
    private View mAddView = null;
    private Button mBtnAdd = null;
    private Button mBtnCancel = null;
    private Button mBtnCreate = null;
    private int mCountEt = 1;
    private String mCustomField = null;
    private Dialog mDialog = null;
    private EditText mEtCustomField = null;
    private EditText mEtValue = null;
    private EditText mEtValueNew = null;
    private int mFieldCount = 0;
    private ArrayList mFields = null;
    private boolean mFirst = true;
    private Intent mIntent = null;
    private boolean mIsSpinnerActive = false;
    private ImageView mIvClose = null;
    private ImageView mIvSave = null;
    private List mListEtNew = new ArrayList();
    private List mListSpinnerNew = new ArrayList();
    private LinearLayout mLlCancel = null;
    private LinearLayout mLlContainer = null;
    private LinearLayout mLlSave = null;
    private String mName = null;
    private int mPosition = -1;
    private RelativeLayout mRlArea = null;
    private Spinner mSpinner = null;
    private int mSumSpinner = 3;
    private TextView mTvHint = null;
    private TextView mTvName = null;
    private TextView mTvSave = null;
    private User mUser = null;
    private String mValue = null;

    class ProfileAddDialog implements AlbusDialogInterface {
        private Spinner mSpinner;

        public ProfileAddDialog(Spinner spinner) {
            this.mSpinner = spinner;
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            final EditText editText = (EditText) view.findViewById(R.id.et_custom_name);
            AlbusDialog.setOnActionClickListener(21, new OnActionClickListener() {
                public void onActionNoListener() {
                    dialogFragment.dismiss();
                }

                public void onActionYesListener() {
                    String obj = editText.getText().toString();
                    Log.d(ProfileAddListFragment.TAG, "selected=" + ProfileAddDialog.this.mSpinner.getSelectedItem().toString());
                    Log.d(ProfileAddListFragment.TAG, "type=" + obj + " spinner count=" + ProfileAddDialog.this.mSpinner.getCount());
                    ProfileAddListFragment.this.changeSpinnerList(ProfileAddDialog.this.mSpinner, obj);
                    dialogFragment.dismiss();
                }
            });
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    private void addCloseBtnListener(ImageView imageView, final View view, final EditText editText, final Spinner spinner) {
        imageView.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                ProfileAddListFragment.this.SaveActivated();
                if (ProfileAddListFragment.this.mCountEt == 1) {
                    ProfileAddListFragment.this.mEtValueNew.setText("");
                    ProfileAddListFragment.this.isGone();
                    return;
                }
                int indexOf = ProfileAddListFragment.this.mListEtNew.indexOf(editText);
                int indexOf2 = ProfileAddListFragment.this.mListSpinnerNew.indexOf(spinner);
                ProfileAddListFragment.this.mListEtNew.remove(indexOf);
                ProfileAddListFragment.this.mListSpinnerNew.remove(indexOf2);
                ((LinearLayout) view.getParent()).removeView(view);
                ProfileAddListFragment.this.mCountEt = ProfileAddListFragment.this.mCountEt - 1;
                ProfileAddListFragment.this.isShow();
            }
        });
    }

    private void addEdittextListener(final EditText editText) {
        editText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                if (editText.getText().toString().equals("") && editText.getText().toString().equals(ProfileAddListFragment.this.mValue)) {
                    ProfileAddListFragment.this.isGone();
                    ProfileAddListFragment.this.SaveDeactivated();
                    Log.d(ProfileAddListFragment.TAG, "add new edittext, close and add must hide");
                    return;
                }
                ProfileAddListFragment.this.isShow();
                ProfileAddListFragment.this.SaveActivated();
            }
        });
    }

    private void changeSpinnerList(Spinner spinner, String str) {
        ArrayAdapter arrayAdapter = (ArrayAdapter) spinner.getAdapter();
        int count = spinner.getCount();
        String string = getActivity().getResources().getString(R.string.custom);
        arrayAdapter.insert(str, count);
        arrayAdapter.insert(string, count + 1);
    }

    private void isShow() {
        this.mBtnAdd.setVisibility(0);
    }

    public static ProfileAddListFragment newInstance() {
        return new ProfileAddListFragment();
    }

    private void setSpinnerClickListener(final Spinner spinner) {
        spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
            public void onItemSelected(AdapterView adapterView, View view, int i, long j) {
                ProfileAddListFragment.this.SaveActivated();
                if (adapterView.getSelectedItem().toString().equals("Custom")) {
                    Log.d(ProfileAddListFragment.TAG, "create dialog");
                    Bundle bundle = new Bundle();
                    bundle.putInt(AlbusModelObject.DIALOG, 21);
                    AlbusDialog.showDialog(21, new ProfileAddDialog(spinner), ProfileAddListFragment.this.getActivity(), bundle, ProfileAddListFragment.this.getActivity().getSupportFragmentManager());
                    return;
                }
                ProfileAddListFragment.this.mIsSpinnerActive = true;
                Log.d(ProfileAddListFragment.TAG, "--------mIsSpinnerActive=" + ProfileAddListFragment.this.mIsSpinnerActive);
            }

            public void onNothingSelected(AdapterView adapterView) {
            }
        });
    }

    public void BackToProfile() {
        int identity = ((CustomActionBarPageActivity) getActivity()).getIdentity();
        if (identity == 5) {
            this.mIntent = new Intent(getActivity(), ProfilesGroupActivity.class);
            this.mIntent.setFlags(603979776);
            NavUtils.navigateUpTo(getActivity(), this.mIntent);
        } else if (identity == 3) {
            ((CustomActionBarPageActivity) getActivity()).backToProfile();
        }
    }

    public void SaveActivated() {
        this.mLlSave.setBackgroundResource(R.drawable.button_onclick);
        this.mLlSave.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (ProfileAddListFragment.this.mPosition == 4) {
                    String obj = ProfileAddListFragment.this.mEtValue.getText().toString();
                    String obj2 = ProfileAddListFragment.this.mSpinner.getSelectedItem().toString();
                    String str = "";
                    str = "";
                    List arrayList = new ArrayList();
                    JSONObject jSONObject = new JSONObject();
                    try {
                        jSONObject.put(CatfishRESTAPI.CFCOMPACT_EMAIL, obj);
                        jSONObject.put(MimeTypeParser.TAG_TYPE, obj2);
                        arrayList.add(jSONObject.toString());
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    for (int i = 0; i < ProfileAddListFragment.this.mListEtNew.size(); i++) {
                        EditText editText = (EditText) ProfileAddListFragment.this.mListEtNew.get(i);
                        Spinner spinner = (Spinner) ProfileAddListFragment.this.mListSpinnerNew.get(i);
                        JSONObject jSONObject2 = new JSONObject();
                        try {
                            jSONObject2.put(CatfishRESTAPI.CFCOMPACT_EMAIL, editText.getText().toString());
                            jSONObject2.put(MimeTypeParser.TAG_TYPE, spinner.getSelectedItem().toString());
                            arrayList.add(jSONObject2.toString());
                        } catch (JSONException e2) {
                            e2.printStackTrace();
                        }
                    }
                    return;
                }
                ((CustomActionBarPageActivity) ProfileAddListFragment.this.getActivity()).backToProfile();
            }
        });
        this.mIvSave.setBackgroundResource(R.drawable.ic_check_blue);
        this.mTvSave.setTextColor(getResources().getColor(R.color.blue));
    }

    public void SaveDeactivated() {
        this.mLlSave.setBackgroundResource(R.color.transparent);
        this.mLlSave.setOnClickListener(null);
        this.mIvSave.setBackgroundResource(R.drawable.ic_check_blue_disable);
        this.mTvSave.setTextColor(getResources().getColor(R.color.blue54));
    }

    public void isGone() {
        this.mBtnAdd.setVisibility(8);
        SaveDeactivated();
    }

    public View onCreateView(final LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View view;
        this.mName = getResources().getStringArray(R.array.profile_list_arrays)[this.mPosition];
        if (this.mPosition == 8) {
            Log.d(TAG, "success open page note");
            View inflate = layoutInflater.inflate(R.layout.fragment_edit_profile, viewGroup, false);
            this.mEtValue = (EditText) inflate.findViewById(R.id.et_value);
            this.mLlCancel = (LinearLayout) inflate.findViewById(R.id.ll_field_cancel);
            this.mLlSave = (LinearLayout) inflate.findViewById(R.id.ll_field_save);
            this.mIvSave = (ImageView) inflate.findViewById(R.id.iv_save);
            this.mTvSave = (TextView) inflate.findViewById(R.id.tv_save);
            if (!this.mValue.equals("")) {
                this.mEtValue.setText(this.mValue);
            }
            this.mEtValue.addTextChangedListener(new TextWatcher() {
                public void afterTextChanged(Editable editable) {
                }

                public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                }

                public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                    if (ProfileAddListFragment.this.mEtValue.getText().toString().equals("") && ProfileAddListFragment.this.mEtValue.getText().toString().equals(ProfileAddListFragment.this.mValue)) {
                        ProfileAddListFragment.this.SaveDeactivated();
                    } else {
                        ProfileAddListFragment.this.SaveActivated();
                    }
                }
            });
            view = inflate;
        } else {
            View inflate2 = layoutInflater.inflate(R.layout.fragment_profile_add_field, viewGroup, false);
            this.mIvClose = (ImageView) inflate2.findViewById(R.id.iv_close);
            this.mEtValue = (EditText) inflate2.findViewById(R.id.et_custom_value);
            this.mSpinner = (Spinner) inflate2.findViewById(R.id.spinner_val_identifier);
            this.mBtnAdd = (Button) inflate2.findViewById(R.id.btn_new);
            this.mLlContainer = (LinearLayout) inflate2.findViewById(R.id.ll_container);
            this.mFields = new ArrayList(Arrays.asList(getResources().getStringArray(R.array.profile_add_field)));
            this.mTvHint = (TextView) inflate2.findViewById(R.id.tv_hint);
            this.mAdapter = new ArrayAdapter(getActivity(), 17367048, this.mFields);
            this.mAdapter.setDropDownViewResource(17367049);
            this.mRlArea = (RelativeLayout) inflate2.findViewById(R.id.rl_value_area);
            this.mTvName = (TextView) inflate2.findViewById(R.id.tv_title);
            this.mLlCancel = (LinearLayout) inflate2.findViewById(R.id.ll_field_cancel);
            this.mLlSave = (LinearLayout) inflate2.findViewById(R.id.ll_field_save);
            this.mIvSave = (ImageView) inflate2.findViewById(R.id.iv_save);
            this.mTvSave = (TextView) inflate2.findViewById(R.id.tv_save);
            Log.d(TAG, "success open page" + this.mName);
            Log.d(TAG, "value=" + this.mValue);
            this.mTvName.setText(this.mName);
            this.mSpinner.setAdapter(this.mAdapter);
            List asList = Arrays.asList(getActivity().getResources().getStringArray(R.array.profile_add_field));
            switch (this.mPosition) {
                case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                    this.mTvHint.setText(R.string.del_email_hint);
                    this.mEtValue.setInputType(33);
                    this.mEtValue.setHint(R.string.email_hint);
                    List emails = this.mUser.getEmails();
                    for (int i = 0; i < emails.size(); i++) {
                        int indexOf = asList.indexOf(((Email) emails.get(i)).getType());
                        Log.d(TAG, i + "-type=" + ((Email) emails.get(i)).getType() + "--" + indexOf);
                        if (i == 0) {
                            this.mEtValue.setText(((Email) emails.get(i)).getEmail());
                            this.mIsSpinnerActive = false;
                            Log.d(TAG, "--mIsSpinnerActive=" + this.mIsSpinnerActive);
                            this.mSpinner.setSelection(this.mSpinner.getCount() - 1);
                            if (indexOf == -1) {
                                changeSpinnerList(this.mSpinner, ((Email) emails.get(i)).getType());
                                this.mIsSpinnerActive = false;
                                Log.d(TAG, "----mIsSpinnerActive=" + this.mIsSpinnerActive);
                                this.mSpinner.setSelection(this.mSpinner.getCount() - 2);
                            } else {
                                this.mSpinner.setSelection(indexOf);
                            }
                        } else {
                            this.mCountEt++;
                            View inflate3 = getActivity().getLayoutInflater().inflate(R.layout.item_profile_add_field_row, null);
                            ImageView imageView = (ImageView) inflate3.findViewById(R.id.iv_add_close);
                            EditText editText = (EditText) inflate3.findViewById(R.id.et_add_value);
                            Spinner spinner = (Spinner) inflate3.findViewById(R.id.spinner_add_identifier);
                            SpinnerAdapter arrayAdapter = new ArrayAdapter(getActivity(), 17367048, new ArrayList(Arrays.asList(getResources().getStringArray(R.array.profile_add_field))));
                            arrayAdapter.setDropDownViewResource(17367049);
                            spinner.setAdapter(arrayAdapter);
                            this.mIsSpinnerActive = false;
                            spinner.setSelection(spinner.getCount() - 1);
                            if (indexOf == -1) {
                                changeSpinnerList(spinner, ((Email) emails.get(i)).getType());
                                this.mIsSpinnerActive = false;
                                spinner.setSelection(spinner.getCount() - 2);
                            } else {
                                spinner.setSelection(indexOf);
                            }
                            editText.setText(((Email) emails.get(i)).getEmail());
                            imageView.setVisibility(0);
                            this.mListEtNew.add(editText);
                            this.mListSpinnerNew.add(spinner);
                            addEdittextListener(editText);
                            addCloseBtnListener(imageView, inflate3, editText, spinner);
                            setSpinnerClickListener(spinner);
                            this.mLlContainer.addView(inflate3);
                        }
                    }
                    isShow();
                    this.mTvHint.setVisibility(0);
                    this.mEtValue.setEnabled(false);
                    break;
                case HttpRouteDirector.LAYER_PROTOCOL /*5*/:
                    this.mTvHint.setText(R.string.del_phone_hint);
                    this.mEtValue.setRawInputType(3);
                    this.mEtValue.setMaxLines(1);
                    this.mEtValue.setHint(R.string.phone_numb);
                    break;
                case SimpleLog.LOG_LEVEL_FATAL /*6*/:
                    this.mTvHint.setText(R.string.del_address_hint);
                    this.mFields.remove(0);
                    this.mEtValue.setHint(R.string.address);
                    break;
                case SimpleLog.LOG_LEVEL_OFF /*7*/:
                    this.mTvHint.setText(R.string.del_web_hint);
                    this.mEtValue.setHint(R.string.web);
                    this.mSpinner.setVisibility(8);
                    break;
            }
            addEdittextListener(this.mEtValue);
            this.mBtnAdd.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    Log.d(ProfileAddListFragment.TAG, "action add click");
                    ProfileAddListFragment.this.mCountEt = ProfileAddListFragment.this.mCountEt + 1;
                    ProfileAddListFragment.this.mFieldCount = ProfileAddListFragment.this.mFieldCount + 1;
                    ProfileAddListFragment.this.mFirst = false;
                    ProfileAddListFragment.this.mBtnAdd.setVisibility(8);
                    View inflate = layoutInflater.inflate(R.layout.item_profile_add_field_row, null);
                    ImageView imageView = (ImageView) inflate.findViewById(R.id.iv_add_close);
                    imageView.setVisibility(0);
                    ProfileAddListFragment.this.mEtValueNew = (EditText) inflate.findViewById(R.id.et_add_value);
                    ProfileAddListFragment.this.mAddSpinner = (Spinner) inflate.findViewById(R.id.spinner_add_identifier);
                    switch (ProfileAddListFragment.this.mPosition) {
                        case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                            ProfileAddListFragment.this.mEtValueNew.setInputType(33);
                            ProfileAddListFragment.this.mEtValueNew.setHint(R.string.email_hint);
                            break;
                        case HttpRouteDirector.LAYER_PROTOCOL /*5*/:
                            ProfileAddListFragment.this.mEtValueNew.setRawInputType(3);
                            ProfileAddListFragment.this.mEtValueNew.setMaxLines(1);
                            ProfileAddListFragment.this.mEtValueNew.setHint(R.string.phone_numb);
                            break;
                        case SimpleLog.LOG_LEVEL_FATAL /*6*/:
                            ProfileAddListFragment.this.mEtValueNew.setHint(R.string.address);
                            ProfileAddListFragment.this.mEtValueNew.setInputType(1);
                            break;
                        case SimpleLog.LOG_LEVEL_OFF /*7*/:
                            ProfileAddListFragment.this.mEtValueNew.setHint(R.string.web);
                            ProfileAddListFragment.this.mAddSpinner.setVisibility(8);
                            ProfileAddListFragment.this.mEtValueNew.setInputType(1);
                            break;
                    }
                    ArrayList arrayList = new ArrayList(Arrays.asList(ProfileAddListFragment.this.getResources().getStringArray(R.array.profile_add_field)));
                    SpinnerAdapter arrayAdapter = new ArrayAdapter(ProfileAddListFragment.this.getActivity(), 17367048, ProfileAddListFragment.this.mFields);
                    arrayAdapter.setDropDownViewResource(17367049);
                    ProfileAddListFragment.this.mAddSpinner.setAdapter(arrayAdapter);
                    ProfileAddListFragment.this.mEtValueNew.requestFocus();
                    ProfileAddListFragment.this.mListEtNew.add(ProfileAddListFragment.this.mEtValueNew);
                    ProfileAddListFragment.this.mListSpinnerNew.add(ProfileAddListFragment.this.mAddSpinner);
                    ProfileAddListFragment.this.addEdittextListener(ProfileAddListFragment.this.mEtValueNew);
                    ProfileAddListFragment.this.addCloseBtnListener(imageView, inflate, ProfileAddListFragment.this.mEtValueNew, ProfileAddListFragment.this.mAddSpinner);
                    ProfileAddListFragment.this.setSpinnerClickListener(ProfileAddListFragment.this.mAddSpinner);
                    ProfileAddListFragment.this.mLlContainer.addView(inflate);
                }
            });
            this.mIvClose.setVisibility(4);
            this.mIvClose.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    if (ProfileAddListFragment.this.mCountEt == 1) {
                        ProfileAddListFragment.this.mEtValue.setText("");
                        ProfileAddListFragment.this.isGone();
                        return;
                    }
                    ProfileAddListFragment.this.mCountEt = ProfileAddListFragment.this.mCountEt - 1;
                    ProfileAddListFragment.this.mEtValue.setText("");
                    ProfileAddListFragment.this.mIvClose.setVisibility(4);
                    ProfileAddListFragment.this.mRlArea.setVisibility(8);
                }
            });
            setSpinnerClickListener(this.mSpinner);
            view = inflate2;
        }
        this.mLlCancel.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Log.d(ProfileAddListFragment.TAG, "didn't save the field");
                ProfileAddListFragment.this.BackToProfile();
            }
        });
        return view;
    }

    public void updateAddSpinner(String str) {
        this.mAdapter.remove(this.mAddSpinner.getSelectedItem().toString());
        this.mAdapter.insert(str, 4);
        this.mAdapter.notifyDataSetChanged();
    }

    public void updateSpinner(String str) {
        this.mSumSpinner++;
        this.mAdapter.remove(this.mSpinner.getSelectedItem().toString());
        this.mAdapter.insert(this.mCustomField, this.mSumSpinner);
        this.mAdapter.notifyDataSetChanged();
    }
}
