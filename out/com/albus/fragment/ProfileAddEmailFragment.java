package com.albus.fragment;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.util.AlbusUtils;
import com.albus.view.CustomActionbarView;
import com.albus.view.CustomActionbarView.OnActionbarButtonClicked;
import com.albus.view.CustomAddListItemView;
import com.albus.view.CustomAddListItemView.OnPrepareItemValue;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.UserFetchProfileCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.Email;
import com.catfiz.model.User;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.signal.Signal;
import com.catfiz.util.MimeTypeParser;
import java.util.ArrayList;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

public class ProfileAddEmailFragment extends Fragment implements ICatfiz {
    private static final String TAG = "ProfileAddEmailFragment";
    private CustomActionbarView mActionbar = null;
    private Catfiz mCatfiz = null;
    private CustomAddListItemView mListItem = null;
    private User mUser = null;

    public static ProfileAddEmailFragment newInstance() {
        return new ProfileAddEmailFragment();
    }

    public void SaveActivated() {
        this.mActionbar.setOnActionBtnActivated();
    }

    public void SaveDeactivated() {
        this.mActionbar.setOnActionBtnDeactivated();
    }

    public void onCatfizStarted() {
        this.mCatfiz.userFetchProfile(new UserFetchProfileCallback() {
            public void onData(User user) {
                ProfileAddEmailFragment.this.mUser = user;
                List emails = ProfileAddEmailFragment.this.mUser.getEmails();
                String[] strArr = new String[emails.size()];
                String[] strArr2 = new String[emails.size()];
                for (int i = 0; i < emails.size(); i++) {
                    strArr[i] = ((Email) emails.get(i)).getEmail();
                    strArr2[i] = ((Email) emails.get(i)).getType();
                }
                ProfileAddEmailFragment.this.mListItem.setItemValue(strArr, strArr2);
            }

            public void onError() {
            }

            public void onSuccess() {
            }
        });
    }

    public void onCatfizStopped() {
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_profile_add_field, viewGroup, false);
        this.mListItem = (CustomAddListItemView) inflate.findViewById(R.id.custom_list_item);
        this.mActionbar = (CustomActionbarView) inflate.findViewById(R.id.custom_actionbar);
        this.mActionbar.setButtonSave();
        this.mActionbar.setOnActionbarButtonClickListener(new OnActionbarButtonClicked() {
            public void onBtnActionActiveClicked() {
                String firstEmail = ProfileAddEmailFragment.this.mListItem.getFirstEmail();
                String firstType = ProfileAddEmailFragment.this.mListItem.getFirstType();
                List listOfEdittext = ProfileAddEmailFragment.this.mListItem.getListOfEdittext();
                List listOfSpinner = ProfileAddEmailFragment.this.mListItem.getListOfSpinner();
                List arrayList = new ArrayList();
                JSONObject jSONObject = new JSONObject();
                try {
                    jSONObject.put(CatfishRESTAPI.CFCOMPACT_EMAIL, firstEmail);
                    jSONObject.put(MimeTypeParser.TAG_TYPE, firstType);
                    arrayList.add(jSONObject.toString());
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                for (int i = 0; i < listOfEdittext.size(); i++) {
                    EditText editText = (EditText) listOfEdittext.get(i);
                    Spinner spinner = (Spinner) listOfSpinner.get(i);
                    JSONObject jSONObject2 = new JSONObject();
                    try {
                        String obj = editText.getText().toString();
                        if (!(obj.equals("") || obj.contains(" "))) {
                            jSONObject2.put(CatfishRESTAPI.CFCOMPACT_EMAIL, editText.getText().toString());
                            jSONObject2.put(MimeTypeParser.TAG_TYPE, spinner.getSelectedItem().toString());
                            arrayList.add(jSONObject2.toString());
                        }
                    } catch (JSONException e2) {
                        e2.printStackTrace();
                    }
                }
                ProfileAddEmailFragment.this.mCatfiz.userProfileEmailUpdate(ProfileAddEmailFragment.this.mUser, arrayList, new Callback() {
                    public void onError() {
                        AlbusUtils.setToastView(ProfileAddEmailFragment.this.getActivity(), ProfileAddEmailFragment.this.getString(R.string.email_update_failed));
                    }

                    public void onSuccess() {
                        AlbusUtils.setToastView(ProfileAddEmailFragment.this.getActivity(), ProfileAddEmailFragment.this.getString(R.string.email_update));
                        ((CustomActionBarPageActivity) ProfileAddEmailFragment.this.getActivity()).backToProfile();
                    }
                });
            }

            public void onBtnCloseClicked() {
                ((CustomActionBarPageActivity) ProfileAddEmailFragment.this.getActivity()).backToProfile();
            }
        });
        this.mListItem.setListForEmail(true);
        this.mListItem.setOnPrepareItemValue(new OnPrepareItemValue() {
            public void onSaveActive() {
                ProfileAddEmailFragment.this.SaveActivated();
            }

            public void onSaveUnactive() {
                ProfileAddEmailFragment.this.SaveDeactivated();
            }
        });
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }
}
