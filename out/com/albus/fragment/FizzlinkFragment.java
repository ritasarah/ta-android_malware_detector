package com.albus.fragment;

import android.app.Dialog;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.ListFragment;
import android.support.v4.content.LocalBroadcastManager;
import android.view.ActionMode;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AbsListView.MultiChoiceModeListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.activity.FizzlinkActivity;
import com.albus.activity.FizzlinkFileViewerActivity;
import com.albus.adapter.FizzlinkAdapter;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.dialog.AlbusDialog.OnFizzlinkUpload;
import com.albus.dialog.AlbusDialog.OnShareButtonListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.util.AlbusModelObject;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.base.Callback;
import com.catfiz.base.Callback.FizzlinkUploadedList;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz.ICatfizUploadDownloadProgress;
import com.catfiz.intents.BroadcastIntents;
import com.catfiz.model.Fizzlink;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.service.FriendListDataStorage;
import com.catfiz.service.ServerMessageDataStorage;
import com.catfiz.signal.Signal;
import com.catfiz.signal.SignalBinderGeneral;
import com.catfiz.svcpersistent.TaskDataStorage;
import com.catfiz.util.Log;
import com.catfiz.util.MediaFilePath;
import com.catfiz.util.Utils;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import org.apache.http.protocol.HTTP;
import org.json.JSONException;
import org.json.JSONObject;

public class FizzlinkFragment extends ListFragment implements OnClickListener, ICatfizUploadDownloadProgress {
    private static final String TAG = "FizzlinkFragment";
    private FizzlinkAdapter mAdapter;
    private Button mBtnUpload;
    private Catfiz mCatfiz;
    private MenuItem mClearItem = null;
    private MenuItem mDeleteItem = null;
    private Dialog mDialog;
    private List mFizzlink;
    private FizzlinkDialog mFizzlinkDialog;
    private LinearLayout mLlHeader;
    private LinearLayout mLlNoFizzlink;
    private String mPendingPathFileToUpload = "";
    private List mSelectedFizzlink;
    private HashMap mSelectedPosition;
    private int mTopItem = 0;
    private int mVisibleItem = 0;

    class FizzlinkActionMode implements MultiChoiceModeListener {
        private FizzlinkActionMode() {
        }

        private void changeToBlueStatusBar() {
            ((RelativeLayout) FizzlinkFragment.this.getActivity().findViewById(R.id.rl_background)).setBackgroundColor(FizzlinkFragment.this.getResources().getColor(R.color.red));
            if (Utils.hasLollipop()) {
                Window window = FizzlinkFragment.this.getActivity().getWindow();
                window.addFlags(RtlSpacingHelper.UNDEFINED);
                window.clearFlags(67108864);
                window.setStatusBarColor(FizzlinkFragment.this.getResources().getColor(R.color.red2));
            }
        }

        private void changeToWhiteStatusBar() {
            ((RelativeLayout) FizzlinkFragment.this.getActivity().findViewById(R.id.rl_background)).setBackgroundColor(FizzlinkFragment.this.getResources().getColor(R.color.white));
            if (Utils.hasLollipop()) {
                Window window = FizzlinkFragment.this.getActivity().getWindow();
                window.addFlags(RtlSpacingHelper.UNDEFINED);
                window.clearFlags(67108864);
                window.setStatusBarColor(FizzlinkFragment.this.getResources().getColor(R.color.black13));
            }
        }

        private void getSelectedDataFizzlink() {
            for (Entry key : FizzlinkFragment.this.mSelectedPosition.entrySet()) {
                FizzlinkFragment.this.mSelectedFizzlink.add(FizzlinkFragment.this.mFizzlink.get(((Integer) key.getKey()).intValue()));
            }
        }

        private void setTitle(ActionMode actionMode) {
            int checkedItemCount = FizzlinkFragment.this.getListView().getCheckedItemCount();
            switch (checkedItemCount) {
                case e.a /*0*/:
                    actionMode.setTitle("0");
                    return;
                case e.b /*1*/:
                    actionMode.setTitle("1");
                    return;
                default:
                    actionMode.setTitle("" + checkedItemCount);
                    return;
            }
        }

        public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem) {
            switch (menuItem.getItemId()) {
                case R.id.multi_item_delete:
                    getSelectedDataFizzlink();
                    FizzlinkFragment.this.showDeleteFizzlinkDialog();
                    actionMode.finish();
                    break;
            }
            return true;
        }

        public boolean onCreateActionMode(ActionMode actionMode, Menu menu) {
            changeToWhiteStatusBar();
            FizzlinkFragment.this.getActivity().getMenuInflater().inflate(R.menu.actionbar_multiple_select, menu);
            setTitle(actionMode);
            FizzlinkFragment.this.mLlHeader.setVisibility(8);
            FizzlinkFragment.this.mSelectedFizzlink.clear();
            FizzlinkFragment.this.mSelectedPosition.clear();
            FizzlinkFragment.this.mClearItem = menu.findItem(R.id.multi_item_clear);
            FizzlinkFragment.this.mClearItem.setVisible(false);
            FizzlinkFragment.this.mDeleteItem = menu.findItem(R.id.multi_item_delete);
            FizzlinkFragment.this.mDeleteItem.setVisible(true);
            return true;
        }

        public void onDestroyActionMode(ActionMode actionMode) {
            changeToBlueStatusBar();
            FizzlinkFragment.this.mLlHeader.setVisibility(0);
            Iterator it = new ArrayList(FizzlinkFragment.this.mSelectedPosition.keySet()).iterator();
            while (it.hasNext()) {
                ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(((Integer) it.next()).intValue())).setSelection(false);
            }
            FizzlinkFragment.this.mAdapter.notifyDataSetChanged();
        }

        public void onItemCheckedStateChanged(ActionMode actionMode, int i, long j, boolean z) {
            setTitle(actionMode);
            ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(i - 1)).setSelection(z);
            FizzlinkFragment.this.mAdapter.notifyDataSetChanged();
            if (z) {
                FizzlinkFragment.this.mSelectedPosition.put(Integer.valueOf(i - 1), Integer.valueOf(i - 1));
            } else {
                FizzlinkFragment.this.mSelectedPosition.remove(Integer.valueOf(i - 1));
            }
        }

        public boolean onPrepareActionMode(ActionMode actionMode, Menu menu) {
            return true;
        }
    }

    class FizzlinkDialog implements AlbusDialogInterface {
        private Dialog mDialog;
        private Fizzlink mFizz;
        private String mPath;

        public FizzlinkDialog(Fizzlink fizzlink) {
            this.mFizz = fizzlink;
        }

        public FizzlinkDialog(String str) {
            this.mPath = str;
        }

        private String getJSONText() {
            String link = this.mFizz.getLink();
            Log.d(FizzlinkFragment.TAG, "slink:" + link);
            if (link.compareTo("0") == 0 || link == null) {
                return "";
            }
            JSONObject jSONObject = new JSONObject();
            try {
                jSONObject.put(ServerMessageDataStorage.SLINK, "catfiz://fl.catfiz.com/" + link);
                jSONObject.put(ServerMessageDataStorage.MESSAGE, this.mFizz.getMessage());
                jSONObject.put(FriendListDataStorage.FILENAME, new File(this.mFizz.getFilePath()).getName());
                jSONObject.put("filesize", AlbusUtils.getFileSize(this.mFizz.getDataSize()));
                jSONObject.put(TaskDataStorage.FILE_PATH, this.mFizz.getFilePath());
                jSONObject.put(TaskDataStorage.TIMESTAMP, this.mFizz.getTimeStamp().toString());
                jSONObject.put("simplelink", this.mFizz.getLink());
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return jSONObject.toString();
        }

        public void closeDialog() {
            if (this.mDialog.isShowing()) {
                this.mDialog.dismiss();
            }
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            this.mDialog = dialogFragment.getDialog();
            switch (i) {
                case R.styleable.Theme_spinnerDropDownItemStyle /*47*/:
                    AlbusDialog.setOnShareButtonClicked(new OnShareButtonListener() {
                        public void onShareToFriendClicked() {
                            dialogFragment.dismiss();
                            Intent intent = new Intent(FizzlinkFragment.this.getActivity(), CustomActionBarPageActivity.class);
                            intent.putExtra(AlbusModelObject.PAGE, 49);
                            intent.putExtra(HTTP.IDENTITY_CODING, 49);
                            intent.putExtra("android.intent.extra.TEXT", FizzlinkDialog.this.getJSONText());
                            intent.putExtra(ServerMessageDataStorage.SLINK, true);
                            intent.putExtra("slinkuri", FizzlinkDialog.this.mFizz.getLink());
                            intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, FizzlinkDialog.this.mFizz.getSenderPin());
                            FizzlinkFragment.this.startActivity(intent);
                        }

                        public void onShareToMyStatusClicked() {
                            long j = CatfishService.getCatfishPreferences().getLong(CatfishService.USERSTATUS_SEQ_PREF, 0);
                            String link = FizzlinkDialog.this.mFizz.getLink();
                            String access$400 = FizzlinkDialog.this.getJSONText();
                            if (link == null || link.compareTo("") == 0) {
                                FizzlinkFragment.this.mCatfiz.shareAndSaveFizzlink(FizzlinkFragment.this.getActivity(), CatfishService.getUserPIN(), access$400, new Callback() {
                                    public void onError() {
                                    }

                                    public void onSuccess() {
                                        AlbusUtils.setToastView(FizzlinkFragment.this.getActivity(), "Success Share Fizzlink");
                                    }
                                });
                            } else {
                                Log.d(FizzlinkFragment.TAG, "Send fizzlink" + access$400 + " to :" + j);
                                FizzlinkFragment.this.mCatfiz.shareFizzlinkToMyStatus(new Callback() {
                                    public void onError() {
                                    }

                                    public void onSuccess() {
                                        AlbusUtils.setToastView(FizzlinkFragment.this.getActivity(), "Success Share Fizzlink");
                                    }
                                }, access$400, j);
                            }
                            dialogFragment.dismiss();
                        }

                        public void onShareToPoolClicked() {
                            dialogFragment.dismiss();
                            Intent intent = new Intent(FizzlinkFragment.this.getActivity(), CustomActionBarPageActivity.class);
                            intent.putExtra(AlbusModelObject.PAGE, 41);
                            intent.putExtra(HTTP.IDENTITY_CODING, 49);
                            intent.putExtra("android.intent.extra.TEXT", FizzlinkDialog.this.getJSONText());
                            intent.putExtra(ServerMessageDataStorage.SLINK, true);
                            intent.putExtra("slinkuri", FizzlinkDialog.this.mFizz.getLink());
                            FizzlinkFragment.this.startActivity(intent);
                        }
                    });
                    return;
                case R.styleable.Theme_selectableItemBackgroundBorderless /*53*/:
                    TextView textView = (TextView) view.findViewById(R.id.tv_fizz_text);
                    ((ImageView) view.findViewById(R.id.iv_fizz_image)).setImageResource(AlbusUtils.getIconFileThumb(this.mPath));
                    textView.setText(new File(this.mPath).getName());
                    AlbusDialog.setOnFizzlinkUploadListener(new OnFizzlinkUpload() {
                        public void onUploadFizzlink(String str) {
                            Log.d(FizzlinkFragment.TAG, "on button upload");
                            FizzlinkFragment.this.mCatfiz.uploadFizzlink(new Callback() {
                                public void onError() {
                                    Log.d(FizzlinkFragment.TAG, "on upload fizzlink error");
                                }

                                public void onSuccess() {
                                    Log.d(FizzlinkFragment.TAG, "on upload fizzlink success");
                                }
                            }, FizzlinkDialog.this.mPath, str);
                            FizzlinkFragment.this.getUploadedData();
                        }
                    });
                    return;
                case R.styleable.Theme_dividerHorizontal /*56*/:
                    this.mDialog.setCanceledOnTouchOutside(false);
                    AlbusDialog.setOnActionClickListener(56, new OnActionClickListener() {
                        public void onActionNoListener() {
                        }

                        public void onActionYesListener() {
                            Intent intent = new Intent(BroadcastIntents.ACTION_CANCEL_FIZZLINK_UPLOAD);
                            intent.putExtra(ServerMessageDataStorage.SEQUENCE, FizzlinkDialog.this.mFizz.getSequence());
                            LocalBroadcastManager.getInstance(FizzlinkFragment.this.getActivity()).sendBroadcast(intent);
                            FizzlinkFragment.this.mAdapter.notifyDataSetChanged();
                            FizzlinkFragment.this.mCatfiz.deleteSingleFizzlink(FizzlinkDialog.this.mFizz.getSequence(), new Callback() {
                                public void onError() {
                                }

                                public void onSuccess() {
                                    FizzlinkFragment.this.getUploadedData();
                                    AlbusUtils.setToastView(FizzlinkFragment.this.getActivity(), FizzlinkFragment.this.getResources().getString(R.string.cancel_fizz_upl_toast));
                                }
                            });
                        }
                    });
                    return;
                case R.styleable.Theme_activityChooserViewStyle /*57*/:
                    AlbusDialog.setOnActionClickListener(57, new OnActionClickListener() {
                        public void onActionNoListener() {
                        }

                        public void onActionYesListener() {
                            for (Entry key : FizzlinkFragment.this.mSelectedPosition.entrySet()) {
                                FizzlinkFragment.this.mCatfiz.deleteSingleFizzlink(((Fizzlink) FizzlinkFragment.this.mFizzlink.get(((Integer) key.getKey()).intValue())).getSequence(), new Callback() {
                                    public void onError() {
                                    }

                                    public void onSuccess() {
                                    }
                                });
                            }
                            FizzlinkFragment.this.getUploadedData();
                        }
                    });
                    return;
                default:
                    return;
            }
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    private void getUploadedData() {
        this.mCatfiz.getUploadedFizzlink(new FizzlinkUploadedList() {
            public void onData(List list) {
                FizzlinkFragment.this.mFizzlink.clear();
                FizzlinkFragment.this.mFizzlink.addAll(list);
                if (list.size() <= 0) {
                    FizzlinkFragment.this.mLlNoFizzlink.setVisibility(0);
                    FizzlinkFragment.this.getListView().setVisibility(4);
                } else {
                    FizzlinkFragment.this.mLlNoFizzlink.setVisibility(8);
                    FizzlinkFragment.this.getListView().setVisibility(0);
                }
                Log.d(FizzlinkFragment.TAG, "fizz=" + FizzlinkFragment.this.mFizzlink.size());
                FizzlinkFragment.this.mAdapter.notifyDataSetChanged();
                FizzlinkFragment.this.getListView().setSelection(FizzlinkFragment.this.mAdapter.getCount() - 1);
            }

            public void onError() {
            }

            public void onSuccess() {
            }
        });
    }

    public static FizzlinkFragment newInstance(Bundle bundle) {
        FizzlinkFragment fizzlinkFragment = new FizzlinkFragment();
        fizzlinkFragment.mPendingPathFileToUpload = bundle.getString(AlbusModelObject.INTENT_FLPATH, "");
        return fizzlinkFragment;
    }

    private void showDeleteFizzlinkDialog() {
        Bundle bundle = new Bundle();
        bundle.putInt(AlbusModelObject.DIALOG, 57);
        AlbusDialog.showDialog(57, new FizzlinkDialog(), getActivity(), bundle, ((FizzlinkActivity) getActivity()).getSupportFragmentManager());
    }

    private void showUploadDialog(String str) {
        Bundle bundle = new Bundle();
        bundle.putInt(AlbusModelObject.DIALOG, 53);
        AlbusDialog.showDialog(53, new FizzlinkDialog(str), getActivity(), bundle, ((FizzlinkActivity) getActivity()).getSupportFragmentManager());
    }

    public void dismissDialog() {
        if (this.mFizzlinkDialog != null) {
            this.mFizzlinkDialog.closeDialog();
        }
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        getListView().setChoiceMode(3);
        getListView().setMultiChoiceModeListener(new FizzlinkActionMode());
        this.mAdapter = new FizzlinkAdapter(getActivity(), this.mFizzlink);
        if (VERSION.SDK_INT >= 19) {
            setListAdapter(this.mAdapter);
        }
        View inflate = getActivity().getLayoutInflater().inflate(R.layout.item_header_fizzlink, null, false);
        inflate.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                try {
                    FizzlinkFragment.this.startActivityForResult(new Intent("android.intent.action.GET_CONTENT").setType("*/*"), 1);
                } catch (ActivityNotFoundException e) {
                    AlbusUtils.setToastView(FizzlinkFragment.this.getActivity(), FizzlinkFragment.this.getString(R.string.file_manager_check));
                }
            }
        });
        this.mLlHeader = (LinearLayout) inflate.findViewById(R.id.ll_header);
        getListView().addHeaderView(inflate);
        if (VERSION.SDK_INT < 19) {
            setListAdapter(this.mAdapter);
        }
        getListView().setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView adapterView, View view, int i, long j) {
                Intent intent = new Intent(FizzlinkFragment.this.getActivity(), FizzlinkFileViewerActivity.class);
                intent.putExtra(TaskDataStorage.FILE_PATH, ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(i - 1)).getFilePath());
                intent.putExtra(TaskDataStorage.TIMESTAMP, ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(i - 1)).getTimeStamp());
                intent.putExtra(ServerMessageDataStorage.SLINK, ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(i - 1)).getLink());
                intent.putExtra(ServerMessageDataStorage.SEQUENCE, ((Fizzlink) FizzlinkFragment.this.mFizzlink.get(i - 1)).getSequence());
                FizzlinkFragment.this.startActivity(intent);
            }
        });
    }

    public void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
        if (i2 == -1 && i == 1 && i2 == -1) {
            String path = MediaFilePath.getPath(getActivity(), intent.getData());
            Log.d(TAG, "File path:" + path);
            showUploadDialog(path);
        }
    }

    public void onCatfizStarted() {
        getUploadedData();
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.btn_upload:
                try {
                    startActivityForResult(new Intent("android.intent.action.GET_CONTENT").setType("*/*"), 1);
                    return;
                } catch (ActivityNotFoundException e) {
                    AlbusUtils.setToastView(getActivity(), getString(R.string.file_manager_check));
                    return;
                }
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        this.mCatfiz = new Catfiz(getActivity(), this, new SignalBinderGeneral());
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_fizzlink, viewGroup, false);
        this.mLlNoFizzlink = (LinearLayout) inflate.findViewById(R.id.ll_no_fizzlink);
        this.mBtnUpload = (Button) inflate.findViewById(R.id.btn_upload);
        this.mBtnUpload.setOnClickListener(this);
        this.mFizzlink = new ArrayList();
        this.mSelectedFizzlink = new ArrayList();
        this.mSelectedPosition = new HashMap();
        if (!this.mPendingPathFileToUpload.isEmpty()) {
            showUploadDialog(this.mPendingPathFileToUpload);
            this.mPendingPathFileToUpload = "";
        }
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mCatfiz.destroy();
    }

    public boolean onHasProgressUploadDownNUpload(Map map, Map map2) {
        Log.d(TAG, "progress=" + map + " fail=" + map2);
        return false;
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        this.mCatfiz.start();
        if (this.mCatfiz.isCatfizStarted()) {
            getUploadedData();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
    }

    public boolean onUpdateProgressDownloadNUpload(String str, int i, int i2) {
        Log.d(TAG, "id=" + str + " progress=" + i + " fail=" + i2);
        for (Fizzlink fizzlink : this.mFizzlink) {
            if (("" + fizzlink.getSequence()).equals(str)) {
                Log.d(TAG, "sequence=" + fizzlink.getSequence());
                fizzlink.setProgress(i);
            }
        }
        if (i > 100) {
            dismissDialog();
            getUploadedData();
        } else {
            this.mAdapter.notifyDataSetChanged();
        }
        return false;
    }

    public void showCancelDialog(Fizzlink fizzlink) {
        this.mFizzlinkDialog = new FizzlinkDialog(fizzlink);
        Bundle bundle = new Bundle();
        bundle.putInt(AlbusModelObject.DIALOG, 56);
        AlbusDialog.showDialog(56, this.mFizzlinkDialog, getActivity(), bundle, ((FizzlinkActivity) getActivity()).getSupportFragmentManager());
    }

    public void showShareDialog(Fizzlink fizzlink) {
        Bundle bundle = new Bundle();
        bundle.putInt(AlbusModelObject.DIALOG, 47);
        AlbusDialog.showDialog(47, new FizzlinkDialog(fizzlink), getActivity(), bundle, ((FizzlinkActivity) getActivity()).getSupportFragmentManager());
    }
}
