package com.albus.fragment;

import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.adapter.NewChatAdapter;
import com.albus.media.ImageCache.ImageCacheParams;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.base.Callback.UserFetchFriendsCallback;
import com.catfiz.base.Catfiz;
import com.catfiz.base.ICatfiz;
import com.catfiz.model.User;
import com.catfiz.service.CatfishService;
import com.catfiz.signal.Signal;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Locale;

public class NewChatFragment extends ListFragment implements OnClickListener, ICatfiz {
    private static final String TAG = "NewChatFragment";
    private NewChatAdapter mAdapter = null;
    private Catfiz mCatfiz = null;
    private EditText mEtSearch = null;
    private List mFriends = null;
    private List mFriendsSearchHelper = null;
    private View mHeader = null;
    private ImageButton mIbBack = null;
    private ImageButton mIbClear = null;
    private RelativeLayout mRlDfView = null;
    private TextView mTvSumFriend = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    public class FetchFriendCb implements UserFetchFriendsCallback {
        private WeakReference mThisFragmentRef;

        public FetchFriendCb(ListFragment listFragment) {
            this.mThisFragmentRef = new WeakReference(listFragment);
        }

        public void onData(List list) {
            NewChatFragment newChatFragment = (NewChatFragment) this.mThisFragmentRef.get();
            if (newChatFragment != null) {
                newChatFragment.mFriends.clear();
                newChatFragment.mFriends.addAll(list);
                newChatFragment.mFriendsSearchHelper.clear();
                newChatFragment.mFriendsSearchHelper.addAll(list);
                newChatFragment.mAdapter.notifyDataSetChanged();
                Log.d(NewChatFragment.TAG, "data friends = " + newChatFragment.mFriends.size());
                newChatFragment.mTvSumFriend.setText("" + newChatFragment.mFriends.size());
                if (newChatFragment.mFriends.size() <= 0) {
                    newChatFragment.setDfView(true);
                } else {
                    newChatFragment.setDfView(false);
                }
            }
        }

        public void onError() {
        }

        public void onSuccess() {
        }
    }

    public static NewChatFragment newInstance() {
        return new NewChatFragment();
    }

    public void getAllData() {
        this.mCatfiz.userFetchFriends(new FetchFriendCb(this));
    }

    public void limitListView(String str, boolean z) {
        if (str.length() > 0) {
            if (z) {
                this.mFriends.clear();
                this.mFriends.addAll(this.mFriendsSearchHelper);
            }
            Collection arrayList = new ArrayList();
            for (User user : this.mFriends) {
                if (user != null) {
                    String name = user.getName();
                    if (!(name == null || name.isEmpty() || !name.toLowerCase().contains(str.toLowerCase(Locale.US)))) {
                        arrayList.add(user);
                    }
                }
            }
            this.mFriends.clear();
            this.mFriends.addAll(arrayList);
            this.mAdapter.notifyDataSetChanged();
            return;
        }
        getAllData();
    }

    public void onActivityCreated(Bundle bundle) {
        super.onActivityCreated(bundle);
        this.mAdapter = new NewChatAdapter(getActivity(), this.mFriends, this.mUserPhotoLoader);
        setListAdapter(null);
        this.mHeader = getActivity().getLayoutInflater().inflate(R.layout.header_new_chat, null, false);
        LinearLayout linearLayout = (LinearLayout) this.mHeader.findViewById(R.id.ll_broadcast);
        this.mTvSumFriend = (TextView) this.mHeader.findViewById(R.id.tv_sum);
        getListView().addHeaderView(this.mHeader, null, false);
        linearLayout.setOnClickListener(this);
        setListAdapter(this.mAdapter);
    }

    public void onCatfizStarted() {
        Log.d(TAG, "onCatfizStarted FriendsFragment, nic = " + CatfishService.getUserPIN());
        getAllData();
    }

    public void onCatfizStopped() {
    }

    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.ib_back:
                getActivity().finish();
                return;
            case R.id.ib_clear:
                this.mEtSearch.setText("");
                this.mEtSearch.clearFocus();
                return;
            case R.id.ll_broadcast:
                Intent intent = new Intent(getActivity(), CustomActionBarPageActivity.class);
                intent.putExtra(AlbusModelObject.PAGE, 30);
                startActivityForResult(intent, 11);
                return;
            default:
                return;
        }
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Log.d(TAG, "onCreate NewChatFragment");
        this.mCatfiz = new Catfiz(getActivity(), this);
        ImageCacheParams imageCacheParams = new ImageCacheParams("");
        imageCacheParams.memCacheSize = (AccessibilityNodeInfoCompat.ACTION_DISMISS * Utils.getMemoryClass(getActivity())) / 3;
        imageCacheParams.diskCacheEnabled = false;
        this.mUserPhotoLoader = new UserPhotoLoader(getActivity(), imageCacheParams);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        View inflate = layoutInflater.inflate(R.layout.fragment_new_chat, viewGroup, false);
        this.mIbBack = (ImageButton) inflate.findViewById(R.id.ib_back);
        Configuration configuration = getResources().getConfiguration();
        if (Utils.hasJellyBeanMR1() && configuration.getLayoutDirection() == 1) {
            this.mIbBack.setImageResource(R.drawable.ic_back_dark_reverse);
        }
        this.mIbClear = (ImageButton) inflate.findViewById(R.id.ib_clear);
        this.mEtSearch = (EditText) inflate.findViewById(R.id.et_search);
        this.mRlDfView = (RelativeLayout) inflate.findViewById(R.id.rl_df_content);
        this.mIbClear.setOnClickListener(this);
        this.mIbBack.setOnClickListener(this);
        this.mEtSearch.requestFocus();
        this.mEtSearch.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                String obj = NewChatFragment.this.mEtSearch.getText().toString();
                boolean z = i3 == 0 || i2 > i3;
                NewChatFragment.this.limitListView(obj, z);
            }
        });
        this.mEtSearch.setOnEditorActionListener(new OnEditorActionListener() {
            public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                if (keyEvent != null && keyEvent.getAction() != 0) {
                    return false;
                }
                if ((keyEvent != null && i != 6 && keyEvent.getKeyCode() != 66) || keyEvent == null || keyEvent.isShiftPressed()) {
                    return false;
                }
                NewChatFragment.this.mEtSearch.clearFocus();
                return true;
            }
        });
        this.mFriends = new ArrayList();
        this.mFriendsSearchHelper = new ArrayList();
        return inflate;
    }

    public void onDestroy() {
        super.onDestroy();
        this.mFriends = null;
        this.mFriendsSearchHelper = null;
        this.mCatfiz.destroy();
    }

    public void onRegisterProgress() {
    }

    public void onResume() {
        super.onResume();
        if (this.mCatfiz.isCatfizStarted()) {
            limitListView(this.mEtSearch.getText().toString(), false);
        } else {
            this.mCatfiz.start();
        }
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.start();
        }
    }

    public boolean onSignalEvent(Signal signal) {
        return false;
    }

    public void onStop() {
        super.onStop();
        this.mCatfiz.finish();
        if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.stop();
        }
    }

    public void setDfView(boolean z) {
        if (z) {
            this.mRlDfView.setVisibility(0);
            this.mHeader.setVisibility(4);
            return;
        }
        this.mRlDfView.setVisibility(8);
        this.mHeader.setVisibility(0);
    }
}
