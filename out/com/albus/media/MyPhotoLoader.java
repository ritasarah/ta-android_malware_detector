package com.albus.media;

import android.content.Context;
import android.graphics.Bitmap;
import com.catfiz.R;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.util.Log;
import java.lang.ref.WeakReference;

public class MyPhotoLoader extends ImageWorker {
    public static final float DEFAULT_PROFILEPHOTO_SIZE = 75.0f;
    public static final float DEFAULT_THUMBNAIL_SIZE = 48.0f;
    private static final String TAG = "MyPhotoLoader";
    private int mBitmapSize = 0;
    private WeakReference mLocalCache = null;

    public MyPhotoLoader(Context context) {
        super(context);
        setLoadingImage((int) R.drawable.df_pict);
        setDefaultBitmap((int) R.drawable.df_pict);
        init();
    }

    private void init() {
        this.mBitmapSize = (int) ((this.mContext.getResources().getDisplayMetrics().density * DEFAULT_THUMBNAIL_SIZE) + 0.5f);
    }

    private Bitmap processBitmap(String str) {
        Bitmap userProfilePhotoBitmapOnly;
        try {
            userProfilePhotoBitmapOnly = CatfishPhotoStorage.getUserProfilePhotoBitmapOnly(this.mContext, (float) this.mBitmapSize);
        } catch (Exception e) {
            e.printStackTrace();
            userProfilePhotoBitmapOnly = null;
        }
        if (userProfilePhotoBitmapOnly != null) {
            return userProfilePhotoBitmapOnly;
        }
        Log.e(TAG, "fail to get My Photo Profile");
        return null;
    }

    public void clearLocalCache() {
        this.mLocalCache = null;
    }

    protected Bitmap getBitmapFromLocalCache(Object obj) {
        if (isInLocalCache(String.valueOf(obj))) {
            return this.mLocalCache != null ? (Bitmap) this.mLocalCache.get() : null;
        } else {
            clearLocalCache();
            return null;
        }
    }

    protected Bitmap processBitmap(Object obj) {
        return processBitmap(String.valueOf(obj));
    }

    protected Bitmap processBitmap(Object obj, boolean z) {
        return null;
    }

    protected void putBitmapInLocalCache(Object obj, Bitmap bitmap) {
        super.putBitmapInLocalCache(obj, bitmap);
        this.mLocalCache = new WeakReference(bitmap);
    }

    public void setBitmapSize(float f) {
        this.mBitmapSize = (int) ((this.mContext.getResources().getDisplayMetrics().density * f) + 0.5f);
    }
}
