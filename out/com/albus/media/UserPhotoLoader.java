package com.albus.media;

import android.content.Context;
import android.support.v4.app.FragmentActivity;
import android.widget.ImageView;
import com.albus.media.ImageCache.ImageCacheParams;
import com.catfiz.R;
import com.catfiz.model.User;
import com.catfiz.util.Log;

public class UserPhotoLoader {
    private static final String TAG = "UserPhotoLoader";
    private FriendPhotoLoader mFriendPhotoLoader = null;
    private MyPhotoLoader mMyPhotoLoader = null;

    public UserPhotoLoader(Context context, ImageCacheParams imageCacheParams) {
        this.mFriendPhotoLoader = new FriendPhotoLoader(context);
        this.mMyPhotoLoader = new MyPhotoLoader(context);
        if (context instanceof FragmentActivity) {
            this.mFriendPhotoLoader.setImageCache(ImageCache.findOrCreateCache((FragmentActivity) context, imageCacheParams));
            this.mMyPhotoLoader.setImageCache(ImageCache.findOrCreateCache((FragmentActivity) context, imageCacheParams));
        }
        this.mFriendPhotoLoader.setLoadingImage((int) R.drawable.none);
        this.mMyPhotoLoader.setLoadingImage((int) R.drawable.none);
    }

    public void clearCache() {
        Log.d(TAG, "clearCache");
        this.mFriendPhotoLoader.getImageCache().clearCaches();
        this.mMyPhotoLoader.clearLocalCache();
    }

    public int loadFriendPhoto(User user, ImageView imageView) {
        return (user == null || user.getId() == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mFriendPhotoLoader.loadImage((Object) user.getId(), imageView);
    }

    public int loadFriendPhoto(User user, ImageView imageView, boolean z) {
        return (user == null || user.getId() == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mFriendPhotoLoader.loadImage((Object) user.getId(), imageView, z);
    }

    public int loadFriendPhoto(String str, ImageView imageView) {
        return (str == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mFriendPhotoLoader.loadImage((Object) str, imageView);
    }

    public int loadFriendPhoto(String str, ImageView imageView, boolean z) {
        return (str == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mFriendPhotoLoader.loadImage((Object) str, imageView, z);
    }

    public int loadUserPhoto(User user, ImageView imageView) {
        Log.d(TAG, "loadUserPhoto1");
        return (user == null || user.getId() == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mMyPhotoLoader.loadImage((Object) user.getId(), imageView);
    }

    public int loadUserPhoto(User user, ImageView imageView, boolean z) {
        Log.d(TAG, "loadUserPhoto2");
        return (user == null || user.getId() == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mMyPhotoLoader.loadImage((Object) user.getId(), imageView, z);
    }

    public int loadUserPhoto(String str, ImageView imageView) {
        Log.d(TAG, "loadUserPhoto3");
        return (str == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mMyPhotoLoader.loadImage((Object) str, imageView);
    }

    public int loadUserPhoto(String str, ImageView imageView, boolean z) {
        Log.d(TAG, "loadUserPhoto4");
        return (str == null || imageView == null) ? ImageWorker.IMAGELOAD_DONE : this.mMyPhotoLoader.loadImage((Object) str, imageView, z);
    }

    public void removeCache(String str) {
        if (str != null && !str.isEmpty()) {
            this.mFriendPhotoLoader.getImageCache().removeCache(str);
            this.mMyPhotoLoader.getImageCache().removeCache(str);
        }
    }

    public void removeCacheFriendPhoto(String str) {
        this.mFriendPhotoLoader.getImageCache().removeCache(str);
    }

    public void setImageFadeIn(boolean z, int i) {
        this.mFriendPhotoLoader.setImageFadeIn(z, i);
    }

    public void setLoadingImage(int i) {
        this.mFriendPhotoLoader.setLoadingImage(i);
        this.mMyPhotoLoader.setLoadingImage(i);
    }

    public void start() {
        this.mFriendPhotoLoader.setExitTasksEarly(false);
        this.mMyPhotoLoader.setExitTasksEarly(false);
    }

    public void stop() {
        this.mFriendPhotoLoader.setExitTasksEarly(true);
        this.mMyPhotoLoader.setExitTasksEarly(true);
    }
}
