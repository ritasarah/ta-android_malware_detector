package com.albus.media.videoplayer.internal;

import android.content.Context;
import android.view.Window;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.reflect.Method;

public class PolicyManager {
    private static final String PHONEWINDOW_CLASS_NAME = "com.android.internal.policy.PhoneWindow";
    private static final String POLICYMANAGER_CLASS_NAME = "com.android.internal.policy.PolicyManager";
    private static final String TAG = "catfiz.android.internals.PolicyManager";

    private static Window makePhoneWindowInstead(Context context) {
        return (Window) Class.forName(PHONEWINDOW_CLASS_NAME).getConstructor(new Class[]{Context.class}).newInstance(new Object[]{context});
    }

    public static Window makenewwindow(Context context) {
        if (Utils.hasM()) {
            return makePhoneWindowInstead(context);
        }
        Class cls = Class.forName(POLICYMANAGER_CLASS_NAME);
        Log.i(TAG, cls.toString());
        Method[] methods = cls.getMethods();
        int i = 0;
        Method method = null;
        while (i < methods.length) {
            if (methods[i].getName().endsWith("makeNewWindow") && methods[i].getParameterTypes().length == 1) {
                method = methods[i];
            }
            i++;
        }
        Log.i(TAG, method.toString());
        return (Window) method.invoke(null, new Object[]{context});
    }
}
