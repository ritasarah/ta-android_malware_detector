package com.albus.media;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import com.catfiz.R;
import com.catfiz.media.CatfishPhotoStorage;
import org.apache.http.HttpStatus;

public class ThumbnailLoader extends ImageWorker {
    private static final String TAG = "ThumbnailLoader";

    public ThumbnailLoader(Context context) {
        super(context);
        setImageFadeIn(true, HttpStatus.SC_INTERNAL_SERVER_ERROR);
        Bitmap decodeResource = BitmapFactory.decodeResource(context.getResources(), R.drawable.df_img_holder);
        setLoadingImage(decodeResource);
        setDefaultBitmap(decodeResource);
    }

    public ThumbnailLoader(Context context, int i) {
        super(context);
        setImageFadeIn(true, HttpStatus.SC_INTERNAL_SERVER_ERROR);
        setLoadingImage(i);
        setDefaultBitmap(i);
    }

    public ThumbnailLoader(Context context, Bitmap bitmap) {
        super(context);
        setImageFadeIn(true, HttpStatus.SC_INTERNAL_SERVER_ERROR);
        setLoadingImage(bitmap);
        setDefaultBitmap(bitmap);
    }

    private Bitmap processBitmap(String str) {
        return CatfishPhotoStorage.getDownloadThumbBitmapOnly(this.mContext, str);
    }

    private Bitmap processGroupPPBitmap(String str) {
        return CatfishPhotoStorage.getDownloadThumbBitmapInPool(this.mContext, str);
    }

    public void clearCache() {
        getImageCache().clearCaches();
    }

    protected Bitmap processBitmap(Object obj) {
        return processBitmap(String.valueOf(obj));
    }

    protected Bitmap processBitmap(Object obj, boolean z) {
        return processGroupPPBitmap(String.valueOf(obj));
    }

    public void removeCache(String str) {
        getImageCache().removeCache(str);
    }
}
