package com.albus.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.FrameLayout;
import android.widget.ImageView;
import com.catfiz.R;
import com.catfiz.util.Log;
import java.util.HashMap;

public class SharedExpandAdapter extends BaseAdapter {
    private static final String TAG = "GalleryExpandAdapter";
    private Context mContext = null;
    private int[] mGallery = null;
    private HashMap mSelection = null;

    class ViewHolder {
        private FrameLayout flImgContainer;
        private ImageView ivImage;

        private ViewHolder() {
        }
    }

    public SharedExpandAdapter(int[] iArr, Context context) {
        this.mContext = context;
        this.mGallery = iArr;
        this.mSelection = new HashMap();
    }

    public void clearSelection() {
        this.mSelection.clear();
        notifyDataSetChanged();
    }

    public int getCount() {
        return this.mGallery.length;
    }

    public Object getItem(int i) {
        return null;
    }

    public long getItemId(int i) {
        return 0;
    }

    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        LayoutInflater layoutInflater = (LayoutInflater) this.mContext.getSystemService("layout_inflater");
        if (view == null) {
            view = layoutInflater.inflate(R.layout.item_grid_gallery, null);
            ViewHolder viewHolder2 = new ViewHolder();
            viewHolder2.ivImage = (ImageView) view.findViewById(R.id.grid_image);
            viewHolder2.flImgContainer = (FrameLayout) view.findViewById(R.id.grid_img_container);
            view.setTag(viewHolder2);
            viewHolder = viewHolder2;
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        Log.d(TAG, "mGallery - 0= " + this.mGallery[0]);
        viewHolder.ivImage.setImageResource(this.mGallery[i]);
        viewHolder.flImgContainer.setTag(Integer.valueOf(i));
        if (this.mSelection.get(Integer.valueOf(i)) != null) {
            viewHolder.flImgContainer.setBackgroundResource(R.drawable.bg_selected);
        } else {
            viewHolder.flImgContainer.setBackgroundColor(this.mContext.getResources().getColor(R.color.light_grey));
        }
        return view;
    }

    public boolean isPositionChecked(int i) {
        Boolean bool = (Boolean) this.mSelection.get(Integer.valueOf(i));
        Log.v("checked", i + " result = " + bool);
        return bool == null ? false : bool.booleanValue();
    }

    public void removeSelection(int i) {
        this.mSelection.remove(Integer.valueOf(i));
        notifyDataSetChanged();
    }

    public void setNewSelection(int i, boolean z) {
        this.mSelection.put(Integer.valueOf(i), Boolean.valueOf(z));
        notifyDataSetChanged();
    }
}
