package com.albus.adapter;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.os.AsyncTask;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.RelativeLayout;
import com.albus.activity.ProfilesImageViewerActivity;
import com.albus.media.ScaleImageView;
import com.catfiz.R;
import com.catfiz.media.ImageReScaler;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.lang.ref.WeakReference;

public class ProfileImageViewerAdapter extends PagerAdapter {
    private static final String TAG = "ProfileImageViewerAdapter";
    private LayoutInflater inflater;
    private Activity mActivity;
    private Uri mImageUri;
    private ScaleImageView mImgDisplay;

    class AsyncLoadScaledBitmap extends ImageReScaler {
        private WeakReference mImageView;

        public AsyncLoadScaledBitmap(Context context, int i) {
            super(context, i);
        }

        public AsyncLoadScaledBitmap(Context context, ScaleImageView scaleImageView, int i) {
            super(context, i);
            this.mImageView = new WeakReference(scaleImageView);
        }

        protected void onPostExecute(Bitmap bitmap) {
            if (bitmap != null && !bitmap.isRecycled() && !isCancelled()) {
                ScaleImageView scaleImageView = (ScaleImageView) this.mImageView.get();
                Log.d(ProfileImageViewerAdapter.TAG, "bitmap=" + bitmap);
                if (scaleImageView != null) {
                    scaleImageView.setImageBitmap(bitmap);
                } else {
                    bitmap.recycle();
                }
            }
        }
    }

    public ProfileImageViewerAdapter(Activity activity, Uri uri) {
        this.mActivity = activity;
        this.mImageUri = uri;
        Log.d(TAG, "image id set on viewer : " + this.mImageUri);
    }

    public void changeValueImg(Uri uri) {
        Log.d(TAG, "changeValueImg: " + uri);
        this.mImageUri = uri;
        notifyDataSetChanged();
    }

    public void destroyItem(ViewGroup viewGroup, int i, Object obj) {
        ((ViewPager) viewGroup).removeView((RelativeLayout) obj);
    }

    public int getCount() {
        return 1;
    }

    public Bitmap getImageBitmap() {
        BitmapDrawable bitmapDrawable = (BitmapDrawable) this.mImgDisplay.getDrawable();
        return bitmapDrawable != null ? bitmapDrawable.getBitmap() : null;
    }

    public Object instantiateItem(ViewGroup viewGroup, int i) {
        this.inflater = (LayoutInflater) this.mActivity.getSystemService("layout_inflater");
        View inflate = this.inflater.inflate(R.layout.image_viewer, viewGroup, false);
        this.mImgDisplay = (ScaleImageView) inflate.findViewById(R.id.imgDisplay);
        Display defaultDisplay = ((WindowManager) this.mActivity.getSystemService("window")).getDefaultDisplay();
        int height = (defaultDisplay.getWidth() < defaultDisplay.getHeight() ? defaultDisplay.getHeight() : defaultDisplay.getWidth()) / 2;
        Uri parse = Uri.parse("file://" + this.mImageUri);
        if (Utils.hasHoneycomb()) {
            new AsyncLoadScaledBitmap(this.mActivity, this.mImgDisplay, height).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new Uri[]{parse});
        } else {
            new AsyncLoadScaledBitmap(this.mActivity, this.mImgDisplay, height).execute(new Uri[]{parse});
        }
        ((ViewPager) viewGroup).addView(inflate);
        this.mImgDisplay.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                ((ProfilesImageViewerActivity) ProfileImageViewerAdapter.this.mActivity).picClickHandle();
            }
        });
        return inflate;
    }

    public boolean isViewFromObject(View view, Object obj) {
        return view == ((RelativeLayout) obj);
    }

    public void playGif() {
        ((ProfilesImageViewerActivity) this.mActivity).animateGif(this.mImgDisplay);
    }
}
