package com.albus.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.albus.activity.FizzlinkActivity;
import com.albus.util.AlbusUtils;
import com.catfiz.R;
import com.catfiz.model.Fizzlink;
import com.catfiz.util.Log;
import java.io.File;
import java.util.List;

public class FizzlinkAdapter extends BaseAdapter {
    private static final String TAG = "FizzlinkAdapter";
    private Context mContext;
    private List mFizzlink;

    class ViewHolder {
        TextView mFileDesc;
        TextView mFileTitle;
        ImageView mIvCancel;
        ImageView mIvPic;
        ImageView mIvShare;
        ProgressBar mProgress;
        public RelativeLayout mRlUploadContainer;
        public TextView mTvUploadProgress;

        private ViewHolder() {
        }
    }

    public FizzlinkAdapter(Context context, List list) {
        this.mContext = context;
        this.mFizzlink = list;
        Log.d(TAG, "fizz=" + this.mFizzlink.size());
    }

    public int getCount() {
        return this.mFizzlink.size();
    }

    public Object getItem(int i) {
        return this.mFizzlink.get(i);
    }

    public long getItemId(int i) {
        return (long) this.mFizzlink.indexOf(getItem(i));
    }

    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        if (view == null) {
            view = ((LayoutInflater) this.mContext.getSystemService("layout_inflater")).inflate(R.layout.item_fizzlink_list_upload, null);
            viewHolder = new ViewHolder();
            viewHolder.mIvPic = (ImageView) view.findViewById(R.id.iv_pic);
            viewHolder.mIvShare = (ImageView) view.findViewById(R.id.iv_share);
            viewHolder.mIvCancel = (ImageView) view.findViewById(R.id.iv_cancel);
            viewHolder.mFileTitle = (TextView) view.findViewById(R.id.tv_file_title);
            viewHolder.mFileDesc = (TextView) view.findViewById(R.id.tv_file_desc);
            viewHolder.mProgress = (ProgressBar) view.findViewById(R.id.pb_fizz);
            viewHolder.mRlUploadContainer = (RelativeLayout) view.findViewById(R.id.rl_upload_container);
            viewHolder.mTvUploadProgress = (TextView) view.findViewById(R.id.tv_upload_desc);
            viewHolder.mIvShare.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    ((FizzlinkActivity) FizzlinkAdapter.this.mContext).shareFizzlink((Fizzlink) view.getTag());
                }
            });
            viewHolder.mIvCancel.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    ((FizzlinkActivity) FizzlinkAdapter.this.mContext).cancelUploadFizzlink((Fizzlink) view.getTag());
                }
            });
            view.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        Fizzlink fizzlink = (Fizzlink) this.mFizzlink.get(i);
        Log.d(TAG, i + "-" + fizzlink.getLink());
        viewHolder.mIvPic.setImageResource(AlbusUtils.getIconFileThumb(fizzlink.getFilePath()));
        viewHolder.mFileTitle.setText(new File(fizzlink.getFilePath()).getName());
        int progress = fizzlink.getProgress();
        String fileSize = AlbusUtils.getFileSize(fizzlink.getDataSize());
        Log.d(TAG, "progress=" + progress);
        if (progress > 0 && progress <= 100) {
            viewHolder.mRlUploadContainer.setVisibility(0);
            viewHolder.mFileDesc.setVisibility(8);
            viewHolder.mProgress.setProgress(progress);
            viewHolder.mIvShare.setVisibility(4);
            if (viewHolder.mIvCancel.getVisibility() == 8) {
                viewHolder.mIvCancel.setVisibility(0);
            }
            viewHolder.mIvCancel.setTag(fizzlink);
            viewHolder.mTvUploadProgress.setText(progress + "% " + fileSize);
        } else if (fizzlink.getLink().equals("0") || fizzlink.getLink().equals("") || fizzlink.getLink() == null) {
            viewHolder.mRlUploadContainer.setVisibility(8);
            viewHolder.mFileDesc.setVisibility(0);
            viewHolder.mIvShare.setVisibility(8);
            viewHolder.mFileDesc.setText(this.mContext.getString(R.string.uploading));
        } else {
            viewHolder.mRlUploadContainer.setVisibility(8);
            viewHolder.mFileDesc.setVisibility(0);
            viewHolder.mIvShare.setVisibility(0);
            viewHolder.mFileDesc.setText(fileSize + " " + AlbusUtils.getLastChatTimeActivities("" + fizzlink.getTimeStamp(), this.mContext, false));
            if (viewHolder.mIvCancel.getVisibility() == 0) {
                viewHolder.mIvCancel.setVisibility(8);
            }
            viewHolder.mIvShare.setTag(fizzlink);
        }
        if (fizzlink.isSelected()) {
            view.setBackgroundResource(R.drawable.bg_selected);
        } else {
            view.setBackgroundResource(R.color.transparent);
        }
        return view;
    }

    public boolean isEnabled(int i) {
        Fizzlink fizzlink = (Fizzlink) this.mFizzlink.get(i);
        return (fizzlink.getProgress() <= 0 || fizzlink.getProgress() > 100) ? (fizzlink.getLink().equals("0") || fizzlink.getLink().equals("") || fizzlink.getLink() == null) ? false : super.isEnabled(i) : false;
    }
}
