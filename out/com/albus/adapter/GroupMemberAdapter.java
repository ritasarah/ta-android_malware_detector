package com.albus.adapter;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.ChatGroupConvActivity;
import com.albus.activity.MenuActivity;
import com.albus.activity.ProfilesFriendActivity;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.imagespan.SmiledText;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.albus.view.CircleImageView;
import com.catfiz.R;
import com.catfiz.base.Catfiz;
import com.catfiz.model.Group;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.util.Log;
import java.util.List;
import org.apache.http.protocol.HTTP;

public class GroupMemberAdapter extends BaseAdapter {
    private static final String TAG = "GroupMemberAdapter";
    private Activity mActivity = null;
    private List mData = null;
    private String mGroupId = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    class ProfileGroupDialog implements AlbusDialogInterface {
        private User mMenu;

        public ProfileGroupDialog(User user) {
            this.mMenu = user;
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            TextView textView = (TextView) view.findViewById(R.id.tv_menu_title);
            TextView textView2 = (TextView) view.findViewById(R.id.tv_menu_profile);
            TextView textView3 = (TextView) view.findViewById(R.id.tv_menu_chat);
            TextView textView4 = (TextView) view.findViewById(R.id.tv_menu_remove_member);
            TextView textView5 = (TextView) view.findViewById(R.id.tv_menu_set_admin);
            Log.d(GroupMemberAdapter.TAG, this.mMenu.getId() + " isfriend = " + this.mMenu.isMyFriend());
            textView.setText(this.mMenu.getName());
            if (GroupMemberAdapter.this.mGroupId.split(":")[0].equals(CatfishService.getUserPIN())) {
                textView4.setVisibility(0);
            } else {
                textView4.setVisibility(8);
            }
            textView5.setVisibility(8);
            if (this.mMenu.isMyFriend()) {
                textView2.setText(context.getResources().getString(R.string.menu_profile));
                textView3.setVisibility(0);
                textView2.setOnClickListener(new OnClickListener() {
                    public void onClick(View view) {
                        dialogFragment.dismiss();
                        User matchFriendData = Catfiz.matchFriendData(ProfileGroupDialog.this.mMenu.getId());
                        Log.d(GroupMemberAdapter.TAG, "goToProfile:" + matchFriendData.getName() + "," + matchFriendData.getStatusSequence() + "," + matchFriendData.getStatusdate());
                        Intent intent = new Intent(GroupMemberAdapter.this.mActivity, ProfilesFriendActivity.class);
                        intent.putExtra(CatfishRESTAPI.CFCOMPACT_STICKERID, matchFriendData.getId());
                        intent.putExtra(CatfishDataStorage.NIC_NAME, matchFriendData.getName());
                        intent.putExtra(AlbusModelObject.STATUS_SEQUENCE, matchFriendData.getStatusSequence());
                        intent.putExtra(AlbusModelObject.STATUS_LIKE, matchFriendData.getStatusLike());
                        intent.putExtra(AlbusModelObject.ME_LIKE_STATUS, matchFriendData.isMeLikeThisStatus());
                        intent.putExtra(HTTP.IDENTITY_CODING, 12);
                        GroupMemberAdapter.this.mActivity.startActivity(intent);
                    }
                });
                textView3.setOnClickListener(new OnClickListener() {
                    public void onClick(View view) {
                        dialogFragment.dismiss();
                        Intent intent = new Intent(GroupMemberAdapter.this.mActivity, ChatGroupConvActivity.class);
                        intent.putExtra(AlbusModelObject.PAGE, 1);
                        intent.putExtra(HTTP.IDENTITY_CODING, 14);
                        intent.putExtra(CatfishDataStorage.NIC_NAME, ProfileGroupDialog.this.mMenu.getName());
                        intent.putExtra(AlbusModelObject.FRIEND_ID, ProfileGroupDialog.this.mMenu.getId());
                        GroupMemberAdapter.this.mActivity.startActivity(intent);
                    }
                });
            } else {
                textView2.setText(context.getResources().getString(R.string.menu_add_friend));
                textView3.setVisibility(8);
                textView2.setOnClickListener(new OnClickListener() {
                    public void onClick(View view) {
                        dialogFragment.dismiss();
                        ((MenuActivity) GroupMemberAdapter.this.mActivity).addFriend(ProfileGroupDialog.this.mMenu.getId());
                    }
                });
            }
            textView4.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    dialogFragment.dismiss();
                    ((MenuActivity) GroupMemberAdapter.this.mActivity).removeGroupMember(new Group(GroupMemberAdapter.this.mGroupId), ProfileGroupDialog.this.mMenu);
                }
            });
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    class ViewHolder {
        private LinearLayout ibMenu;
        private CircleImageView rivIcon;
        private TextView tvName;
        private TextView tvStatus;

        private ViewHolder() {
        }
    }

    public GroupMemberAdapter(Activity activity, List list, UserPhotoLoader userPhotoLoader, String str) {
        this.mActivity = activity;
        this.mData = list;
        this.mUserPhotoLoader = userPhotoLoader;
        this.mGroupId = str;
    }

    public int getCount() {
        return this.mData.size();
    }

    public Object getItem(int i) {
        return Integer.valueOf(i);
    }

    public long getItemId(int i) {
        return (long) i;
    }

    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        if (view == null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.mActivity.getSystemService("layout_inflater");
            viewHolder = new ViewHolder();
            view = layoutInflater.inflate(R.layout.item_member_menu, null);
            viewHolder.rivIcon = (CircleImageView) view.findViewById(R.id.riv_img);
            viewHolder.tvName = (TextView) view.findViewById(R.id.tv_name);
            viewHolder.tvStatus = (TextView) view.findViewById(R.id.tv_status);
            viewHolder.ibMenu = (LinearLayout) view.findViewById(R.id.ll_menu);
            viewHolder.ibMenu.setVisibility(0);
            viewHolder.ibMenu.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    User user = (User) view.getTag();
                    Bundle bundle = new Bundle();
                    bundle.putInt(AlbusModelObject.DIALOG, 33);
                    AlbusDialog.showDialog(33, new ProfileGroupDialog(user), GroupMemberAdapter.this.mActivity, bundle, ((MenuActivity) GroupMemberAdapter.this.mActivity).getSupportFragmentManager());
                }
            });
            view.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        if (this.mData.size() <= 0) {
            Log.d(TAG, "No data");
        } else {
            User user = (User) this.mData.get(i);
            if (user.getId().equals(this.mGroupId.split(":")[0])) {
                viewHolder.tvStatus.setVisibility(0);
            } else {
                viewHolder.tvStatus.setVisibility(8);
            }
            if (user.getId().equals(CatfishService.getUserPIN())) {
                if (this.mUserPhotoLoader != null) {
                    this.mUserPhotoLoader.loadUserPhoto(user.getId(), viewHolder.rivIcon);
                }
                viewHolder.ibMenu.setVisibility(8);
            } else {
                if (this.mUserPhotoLoader != null) {
                    this.mUserPhotoLoader.loadFriendPhoto(user.getId(), viewHolder.rivIcon);
                }
                viewHolder.ibMenu.setTag(user);
                viewHolder.ibMenu.setVisibility(0);
            }
            viewHolder.tvName.setText(SmiledText.getSmiledText(this.mActivity, user.getName(), viewHolder.tvName));
        }
        return view;
    }

    public int getViewTypeCount() {
        return 2;
    }
}
