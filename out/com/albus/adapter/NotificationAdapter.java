package com.albus.adapter;

import android.app.Activity;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.MenuActivity;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.DialogUI;
import com.albus.imagespan.SmiledText;
import com.albus.util.AlbusModelObject;
import com.albus.view.CircleImageView;
import com.catfiz.R;
import com.catfiz.base.Constant;
import com.catfiz.base.Constant.FriendsType;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.model.Group;
import com.catfiz.model.Notification;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.FriendListDataStorage;
import com.catfiz.service.ServerMessageDataStorage;
import com.catfiz.util.Log;
import java.util.List;

public class NotificationAdapter extends BaseAdapter {
    private static final String TAG = "NotificationAdapter";
    private Activity mActivity = null;
    private List mData = null;
    private Notification mUser = null;

    class ViewHolder {
        private Button btnAction;
        private LinearLayout llItem;
        private CircleImageView rivIcon;
        private TextView tvName;
        private TextView tvStatus;

        private ViewHolder() {
        }
    }

    public NotificationAdapter(Activity activity, List list) {
        this.mActivity = activity;
        this.mData = list;
    }

    public int getCount() {
        return this.mData.size();
    }

    public Object getItem(int i) {
        return Integer.valueOf(i);
    }

    public long getItemId(int i) {
        return (long) i;
    }

    public View getView(final int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        this.mUser = (Notification) this.mData.get(i);
        getItemViewType(i);
        if (view == null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.mActivity.getSystemService("layout_inflater");
            viewHolder = new ViewHolder();
            view = layoutInflater.inflate(R.layout.item_member_button, null);
            viewHolder.rivIcon = (CircleImageView) view.findViewById(R.id.riv_img);
            viewHolder.tvName = (TextView) view.findViewById(R.id.tv_name);
            viewHolder.tvStatus = (TextView) view.findViewById(R.id.tv_value);
            viewHolder.llItem = (LinearLayout) view.findViewById(R.id.ll_container);
            viewHolder.btnAction = (Button) view.findViewById(R.id.btn_action);
            viewHolder.llItem.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    Notification notification = (Notification) view.getTag(R.id.ll_container);
                    Bundle bundle;
                    if (notification.getType() == FriendsType.GROUP) {
                        bundle = new Bundle();
                        bundle.putString(CatfishDataStorage.NIC_NAME, notification.getName());
                        bundle.putString(AlbusModelObject.FRIEND_ID, notification.getID());
                        bundle.putInt(AlbusModelObject.DIALOG, 30);
                        if (notification.getParams().containsKey(Constant.INVITOR)) {
                            bundle.putString(AlbusModelObject.USER, (String) notification.getParams().get(Constant.INVITOR));
                        }
                        AlbusDialog.showDialog(30, new DialogUI().getDialogInterface(), NotificationAdapter.this.mActivity, bundle, ((MenuActivity) NotificationAdapter.this.mActivity).getSupportFragmentManager());
                    } else if (notification.getType() == FriendsType.FRIEND) {
                        bundle = new Bundle();
                        bundle.putString(CatfishDataStorage.NIC_NAME, notification.getName());
                        bundle.putString(AlbusModelObject.FRIEND_ID, notification.getID());
                        bundle.putLong(ServerMessageDataStorage.SEQUENCE, Long.valueOf(0).longValue());
                        bundle.putInt(AlbusModelObject.DIALOG, 10);
                        bundle.putInt(AlbusModelObject.POSITION, i);
                        if (notification.getParams().containsKey(FriendListDataStorage.STATUS)) {
                            bundle.putString(FriendListDataStorage.STATUS, '\"' + ((String) notification.getParams().get(FriendListDataStorage.STATUS)) + '\"');
                        }
                        AlbusDialog.showDialog(10, new DialogUI().getDialogInterface(), NotificationAdapter.this.mActivity, bundle, ((MenuActivity) NotificationAdapter.this.mActivity).getSupportFragmentManager());
                    }
                }
            });
            viewHolder.btnAction.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    Notification notification = (Notification) view.getTag();
                    if (notification.getType() == FriendsType.GROUP) {
                        ((MenuActivity) NotificationAdapter.this.mActivity).acceptGroup(new Group(notification.getID()), i);
                    } else if (notification.getType() == FriendsType.FRIEND) {
                        ((MenuActivity) NotificationAdapter.this.mActivity).acceptFriend(notification.getID(), notification.getName(), Long.valueOf(0), i);
                    }
                }
            });
            view.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        if (this.mData.size() <= 0) {
            Log.d(TAG, "No data");
        } else {
            Bitmap friendProfilePhotoBitmap = CatfishPhotoStorage.getFriendProfilePhotoBitmap(this.mActivity, this.mUser.getID());
            if (this.mUser.getType() == FriendsType.FRIEND) {
                viewHolder.btnAction.setText(this.mActivity.getString(R.string.btn_accept));
                viewHolder.tvStatus.setText(this.mActivity.getString(R.string.incoming_friend));
                viewHolder.tvName.setText(SmiledText.getSmiledText(this.mActivity, this.mUser.getName(), viewHolder.tvName));
                if (friendProfilePhotoBitmap == null) {
                    viewHolder.rivIcon.setBackgroundResource(R.drawable.df_pict);
                } else {
                    viewHolder.rivIcon.setImageBitmap(friendProfilePhotoBitmap);
                }
            } else if (this.mUser.getType() == FriendsType.GROUP) {
                viewHolder.rivIcon.setBackgroundResource(R.drawable.df_pictgroup);
                viewHolder.btnAction.setText(this.mActivity.getString(R.string.btn_join));
                String str = "";
                viewHolder.tvStatus.setText(this.mUser.getParams().containsKey(AlbusModelObject.OWNER) ? this.mActivity.getString(R.string.incoming_group_from) + " " + ((String) this.mUser.getParams().get(AlbusModelObject.OWNER)) : this.mActivity.getString(R.string.incoming_group));
                viewHolder.tvName.setText(SmiledText.getSmiledText(this.mActivity, this.mUser.getName(), viewHolder.tvName));
            }
            viewHolder.llItem.setTag(R.id.ll_container, this.mUser);
            viewHolder.btnAction.setTag(this.mUser);
        }
        return view;
    }

    public int getViewTypeCount() {
        return 2;
    }
}
