package com.albus.adapter;

import android.app.Activity;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.activity.ChatGroupConvActivity;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.imagespan.SmiledText;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusModelObject;
import com.albus.view.CircleImageView;
import com.catfiz.R;
import com.catfiz.model.User;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.util.Log;
import java.util.List;
import org.apache.http.protocol.HTTP;

public class NewChatAdapter extends BaseAdapter {
    private static final String TAG = "NewChatAdapter";
    private Activity mActivity = null;
    private List mData = null;
    private UserPhotoLoader mUserPhotoLoader = null;

    class ViewHolder {
        private Button btnAction;
        private LinearLayout llItem;
        private User mUser;
        private CircleImageView rivIcon;
        private TextView tvName;
        private TextView tvStatus;

        private ViewHolder() {
        }
    }

    public NewChatAdapter(Activity activity, List list, UserPhotoLoader userPhotoLoader) {
        this.mActivity = activity;
        this.mData = list;
        this.mUserPhotoLoader = userPhotoLoader;
    }

    public int getCount() {
        return this.mData.size();
    }

    public Object getItem(int i) {
        return Integer.valueOf(i);
    }

    public long getItemId(int i) {
        return (long) i;
    }

    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        if (view == null) {
            view = ((LayoutInflater) this.mActivity.getSystemService("layout_inflater")).inflate(R.layout.item_member_button, null);
            viewHolder = new ViewHolder();
            viewHolder.rivIcon = (CircleImageView) view.findViewById(R.id.riv_img);
            viewHolder.tvName = (TextView) view.findViewById(R.id.tv_name);
            viewHolder.tvStatus = (TextView) view.findViewById(R.id.tv_value);
            viewHolder.llItem = (LinearLayout) view.findViewById(R.id.ll_container);
            viewHolder.btnAction = (Button) view.findViewById(R.id.btn_action);
            viewHolder.btnAction.setVisibility(8);
            this.mUserPhotoLoader.setLoadingImage(R.drawable.df_pict);
            viewHolder.llItem.setOnClickListener(new OnClickListener() {
                public void onClick(View view) {
                    ViewHolder viewHolder = (ViewHolder) view.getTag();
                    if (viewHolder == null) {
                        Log.e(NewChatAdapter.TAG, "fail to get holder object from view");
                    } else if (viewHolder.mUser != null) {
                        Intent intent = new Intent(NewChatAdapter.this.mActivity, ChatGroupConvActivity.class);
                        intent.putExtra(AlbusModelObject.PAGE, 1);
                        intent.putExtra(HTTP.IDENTITY_CODING, 14);
                        intent.putExtra(CatfishDataStorage.NIC_NAME, viewHolder.mUser.getName());
                        intent.putExtra(AlbusModelObject.FRIEND_ID, viewHolder.mUser.getId());
                        NewChatAdapter.this.mActivity.startActivity(intent);
                        ((CustomActionBarPageActivity) NewChatAdapter.this.mActivity).endActivity();
                    }
                }
            });
            view.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) view.getTag();
        }
        if (this.mData.size() <= 0) {
            Log.v(TAG, "No data");
        } else {
            User user = (User) this.mData.get(i);
            viewHolder.mUser = user;
            if (this.mUserPhotoLoader != null) {
                this.mUserPhotoLoader.loadFriendPhoto(user.getId(), viewHolder.rivIcon);
            }
            viewHolder.tvName.setText(SmiledText.getSmiledText(this.mActivity, user.getName(), viewHolder.tvName));
            viewHolder.tvStatus.setText(SmiledText.getSmiledText(this.mActivity, user.getStatus(), viewHolder.tvStatus));
        }
        return view;
    }
}
