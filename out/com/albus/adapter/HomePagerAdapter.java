package com.albus.adapter;

import android.content.Context;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.albus.fragment.ChatListFragment;
import com.albus.fragment.GroupListFragment;
import com.albus.fragment.UpdatesFragment;
import com.catfiz.R;
import com.catfiz.adapter.CatfizBaseAdapter;
import com.catfiz.adapter.IAnchorableAdapter;
import com.catfiz.util.Log;

public class HomePagerAdapter extends FragmentPagerAdapter implements IAnchorableAdapter {
    private static final String TAG = HomePagerAdapter.class.getSimpleName();
    private Context mContext = null;
    private int mCurrentPage = -1;
    private ChatListFragment mFragmentChat = null;
    private GroupListFragment mFragmentGroup = null;
    private FragmentManager mFragmentManager;
    private UpdatesFragment mFragmentUpdate = null;
    private boolean mIsSwitchFlow = true;

    public HomePagerAdapter(FragmentManager fragmentManager, Context context) {
        super(fragmentManager);
        this.mFragmentManager = fragmentManager;
        this.mContext = context;
    }

    public void enterSearchMode() {
        if (this.mCurrentPage == 1) {
            this.mFragmentChat.enterSearchMode();
        } else if (this.mCurrentPage == 2) {
            this.mFragmentGroup.enterSearchMode();
        }
    }

    public int getCount() {
        return 3;
    }

    public ChatListFragment getFragmentChat() {
        return this.mFragmentChat;
    }

    public GroupListFragment getFragmentGroup() {
        return this.mFragmentGroup;
    }

    public UpdatesFragment getFragmentUpdate() {
        return this.mFragmentUpdate;
    }

    public Fragment getItem(int i) {
        Log.d(TAG, " --- getItem --- ");
        if (i == 0) {
            if (this.mFragmentUpdate == null) {
                this.mFragmentUpdate = UpdatesFragment.newInstance();
            }
            return this.mFragmentUpdate;
        } else if (i == 1) {
            if (this.mFragmentChat == null) {
                this.mFragmentChat = ChatListFragment.newInstance(null);
            }
            return this.mFragmentChat;
        } else {
            if (this.mFragmentGroup == null) {
                this.mFragmentGroup = GroupListFragment.newInstance(null);
            }
            return this.mFragmentGroup;
        }
    }

    public int getItemPosition(Object obj) {
        Log.d(TAG, " --- getItemPosition --- ");
        return (this.mFragmentUpdate == null || obj != this.mFragmentUpdate) ? (this.mFragmentChat == null || obj != this.mFragmentChat) ? (this.mFragmentGroup == null || obj != this.mFragmentGroup) ? -2 : -1 : -1 : -1;
    }

    public CharSequence getPageTitle(int i) {
        return this.mContext == null ? "" : i == 0 ? this.mContext.getString(R.string.btn_updates) : i == 1 ? this.mContext.getString(R.string.btn_chat_title) : this.mContext.getString(R.string.groups);
    }

    public View getTabView(int i, int i2) {
        if (this.mContext == null) {
            return null;
        }
        View inflate = LayoutInflater.from(this.mContext).inflate(R.layout.custom_tab, null, true);
        LinearLayout linearLayout = (LinearLayout) inflate.findViewById(R.id.ll_notif_chatTab);
        TextView textView = (TextView) inflate.findViewById(R.id.tv_notif_chatTab);
        ((TextView) inflate.findViewById(R.id.text1)).setText(getPageTitle(i));
        if (i2 > 0) {
            textView.setText(i2 > 99 ? "99+" : "" + i2);
            linearLayout.setVisibility(0);
        } else {
            linearLayout.setVisibility(8);
        }
        return inflate;
    }

    public void leaveSearchMode() {
        if (this.mCurrentPage == 1) {
            this.mFragmentChat.leaveSearchMode();
        } else if (this.mCurrentPage == 2) {
            this.mFragmentGroup.leaveSearchMode();
        }
    }

    public void limitListView(String str, boolean z) {
        if (this.mCurrentPage == 1) {
            this.mFragmentChat.limitListView(str, z);
        } else if (this.mCurrentPage == 2) {
            this.mFragmentGroup.limitListView(str, z);
        }
    }

    public void notifyChildPageChanged() {
        if (this.mCurrentPage == 1) {
            getFragmentChat().realignToolbar();
        } else if (this.mCurrentPage == 2) {
            getFragmentGroup().realignToolbar();
        } else {
            getFragmentUpdate().realignToolbar();
        }
    }

    public void putAnchorAtCurrentPage() {
        CatfizBaseAdapter catfizBaseAdapter = this.mFragmentUpdate != null ? (CatfizBaseAdapter) this.mFragmentUpdate.getListAdapter() : null;
        CatfizBaseAdapter catfizBaseAdapter2 = this.mFragmentChat != null ? (CatfizBaseAdapter) this.mFragmentChat.getListAdapter() : null;
        CatfizBaseAdapter catfizBaseAdapter3 = this.mFragmentGroup != null ? (CatfizBaseAdapter) this.mFragmentGroup.getListAdapter() : null;
        if (catfizBaseAdapter != null) {
            catfizBaseAdapter.setAdapterVisibility(false);
        }
        if (catfizBaseAdapter2 != null) {
            catfizBaseAdapter2.setAdapterVisibility(false);
        }
        if (catfizBaseAdapter3 != null) {
            catfizBaseAdapter3.setAdapterVisibility(false);
        }
        switch (this.mCurrentPage) {
            case e.a /*0*/:
                if (catfizBaseAdapter != null) {
                    catfizBaseAdapter.setAdapterVisibility(true);
                    return;
                }
                return;
            case e.b /*1*/:
                if (catfizBaseAdapter2 != null) {
                    catfizBaseAdapter2.setAdapterVisibility(true);
                    return;
                }
                return;
            case e.c /*2*/:
                if (catfizBaseAdapter3 != null) {
                    catfizBaseAdapter3.setAdapterVisibility(true);
                    return;
                }
                return;
            default:
                return;
        }
    }

    public void refreshAllFriendsPhoto(String str) {
        if (this.mFragmentUpdate != null) {
            Log.d(TAG, "ppf download refresh list update");
            this.mFragmentUpdate.refreshPP(str);
            this.mFragmentUpdate.refreshAdapter();
        }
    }

    public void releaseAnchorAtCurrentPage() {
        CatfizBaseAdapter catfizBaseAdapter = this.mFragmentUpdate != null ? (CatfizBaseAdapter) this.mFragmentUpdate.getListAdapter() : null;
        CatfizBaseAdapter catfizBaseAdapter2 = this.mFragmentChat != null ? (CatfizBaseAdapter) this.mFragmentChat.getListAdapter() : null;
        CatfizBaseAdapter catfizBaseAdapter3 = this.mFragmentGroup != null ? (CatfizBaseAdapter) this.mFragmentGroup.getListAdapter() : null;
        if (catfizBaseAdapter != null) {
            catfizBaseAdapter.setAdapterVisibility(true);
        }
        if (catfizBaseAdapter2 != null) {
            catfizBaseAdapter2.setAdapterVisibility(true);
        }
        if (catfizBaseAdapter3 != null) {
            catfizBaseAdapter3.setAdapterVisibility(true);
        }
    }

    public void setCurrentPage(int i) {
        Log.d(TAG, " --- setCurrentPage: " + i);
        this.mCurrentPage = i;
        releaseAnchorAtCurrentPage();
    }
}
