package com.albus.dialog;

import android.content.Context;
import android.content.DialogInterface;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import com.albus.dialog.AlbusDialog.OnAddButtonListener;
import com.albus.imagespan.SmiledText;
import com.albus.util.AlbusModelObject;
import com.albus.view.CustomImageView;
import com.catfiz.R;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.PinManagerV2;
import com.catfiz.util.Log;
import org.apache.http.protocol.HTTP;

public class ProfileDialogFragment extends DialogFragment {
    private static final String TAG = "ProfileDialogFragment";
    private OnAddButtonListener mAddBtnListener = null;
    private Context mContext = null;
    private int mDialogId = -1;
    private AlbusDialogInterface mIDialog = null;
    private String mId = null;
    private String mName = null;
    private View mView = null;

    public static ProfileDialogFragment newInstance(Bundle bundle) {
        ProfileDialogFragment profileDialogFragment = new ProfileDialogFragment();
        profileDialogFragment.setArguments(bundle);
        profileDialogFragment.mName = bundle.getString(CatfishDataStorage.NIC_NAME);
        profileDialogFragment.mId = bundle.getString(CatfishRESTAPI.CFCOMPACT_STICKERID);
        return profileDialogFragment;
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setStyle(1, 16973942);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        this.mView = layoutInflater.inflate(R.layout.dialog_profile, viewGroup, false);
        this.mDialogId = getArguments().getInt(AlbusModelObject.DIALOG);
        Log.d(TAG, "onCreateView:" + this.mDialogId);
        switch (this.mDialogId) {
            case HTTP.HT /*9*/:
                this.mIDialog.onCreateDialog(9, this, this.mView, getArguments(), this.mContext);
                CustomImageView customImageView = (CustomImageView) this.mView.findViewById(R.id.civ_img);
                TextView textView = (TextView) this.mView.findViewById(R.id.tv_notif);
                TextView textView2 = (TextView) this.mView.findViewById(R.id.tv_name);
                Button button = (Button) this.mView.findViewById(R.id.btn_positive);
                Button button2 = (Button) this.mView.findViewById(R.id.btn_negative);
                ImageView imageView = (ImageView) this.mView.findViewById(R.id.iv_img_dummy);
                ((Button) this.mView.findViewById(R.id.btn_conditional)).setVisibility(4);
                Bitmap promotedFriendProfilePhotoBitmapInPool = CatfishPhotoStorage.getPromotedFriendProfilePhotoBitmapInPool(this.mContext, this.mId);
                if (promotedFriendProfilePhotoBitmapInPool != null) {
                    customImageView.setImageBitmap(promotedFriendProfilePhotoBitmapInPool);
                    imageView.setVisibility(8);
                }
                button.setText(this.mContext.getResources().getString(R.string.btn_add));
                button2.setText(this.mContext.getResources().getString(R.string.btn_cancel));
                textView2.setText(SmiledText.getSmiledText(this.mContext, this.mName, textView2));
                textView.setText(this.mContext.getResources().getString(R.string.df_add_friend));
                button2.setOnClickListener(new OnClickListener() {
                    public void onClick(View view) {
                        ProfileDialogFragment.this.dismiss();
                    }
                });
                button.setOnClickListener(new OnClickListener() {
                    public void onClick(View view) {
                        ProfileDialogFragment.this.mAddBtnListener.onAddButtonClicked(ProfileDialogFragment.this.mId);
                        ProfileDialogFragment.this.dismiss();
                    }
                });
                break;
            case HTTP.LF /*10*/:
                this.mIDialog.onCreateDialog(10, this, this.mView, getArguments(), this.mContext);
                break;
            case PinManagerV2.REGCODE_HASOLDACC /*11*/:
                this.mIDialog.onCreateDialog(11, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_actionMenuTextColor /*26*/:
                this.mIDialog.onCreateDialog(26, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_actionModeSplitBackground /*30*/:
                this.mIDialog.onCreateDialog(30, this, this.mView, getArguments(), this.mContext);
                break;
        }
        return this.mView;
    }

    public void onDismiss(DialogInterface dialogInterface) {
        if (this.mDialogId == 9) {
            this.mIDialog.onDismissDialog(9, this, this.mView, getArguments());
        } else if (this.mDialogId == 10) {
            this.mIDialog.onDismissDialog(10, this, this.mView, getArguments());
        } else if (this.mDialogId == 11) {
            this.mIDialog.onDismissDialog(11, this, this.mView, getArguments());
        } else if (this.mDialogId == 26) {
            this.mIDialog.onDismissDialog(26, this, this.mView, getArguments());
        } else if (this.mDialogId == 30) {
            this.mIDialog.onDismissDialog(30, this, this.mView, getArguments());
        }
        super.onDismiss(dialogInterface);
    }

    public void onStart() {
        if (this.mDialogId == 9) {
            this.mIDialog.onDismissDialog(9, this, this.mView, getArguments());
        } else if (this.mDialogId == 10) {
            this.mIDialog.onDismissDialog(10, this, this.mView, getArguments());
        } else if (this.mDialogId == 11) {
            this.mIDialog.onDismissDialog(11, this, this.mView, getArguments());
        } else if (this.mDialogId == 26) {
            this.mIDialog.onDismissDialog(11, this, this.mView, getArguments());
        } else if (this.mDialogId == 30) {
            this.mIDialog.onDismissDialog(30, this, this.mView, getArguments());
        }
        super.onStart();
    }

    public void setAddClickListener(OnAddButtonListener onAddButtonListener) {
        this.mAddBtnListener = onAddButtonListener;
    }

    public void setContext(Context context) {
        this.mContext = context;
    }

    public void setInterface(AlbusDialogInterface albusDialogInterface) {
        this.mIDialog = albusDialogInterface;
    }
}
