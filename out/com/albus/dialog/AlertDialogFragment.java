package com.albus.dialog;

import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.imagespan.SmiledText;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.service.CatfishDataStorage;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.PinManagerV2;
import com.catfiz.util.FizzlinkUtil;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import org.apache.commons.logging.impl.SimpleLog;
import org.apache.http.conn.routing.HttpRouteDirector;
import org.apache.http.protocol.HTTP;

public class AlertDialogFragment extends DialogFragment {
    private static final String TAG = AlertDialogFragment.class.getSimpleName();
    private OnActionClickListener mActionListener = null;
    private Button mBtnAction = null;
    private Button mBtnCancel = null;
    private Context mContext = null;
    private int mDialogId = -1;
    private AlbusDialogInterface mIDialog = null;
    private String mName = null;
    private TextView mTvAlert = null;
    private TextView mTvTitle = null;
    private View mView = null;

    public static AlertDialogFragment newInstance(Bundle bundle) {
        AlertDialogFragment alertDialogFragment = new AlertDialogFragment();
        alertDialogFragment.mName = bundle.getString(CatfishDataStorage.NIC_NAME);
        alertDialogFragment.setArguments(bundle);
        return alertDialogFragment;
    }

    public void btnActionListener() {
        this.mBtnCancel.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (AlertDialogFragment.this.mActionListener != null) {
                    AlertDialogFragment.this.mActionListener.onActionNoListener();
                }
                AlertDialogFragment.this.dismiss();
            }
        });
        this.mBtnAction.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (AlertDialogFragment.this.mActionListener != null) {
                    AlertDialogFragment.this.mActionListener.onActionYesListener();
                }
                AlertDialogFragment.this.dismiss();
            }
        });
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setStyle(1, 16973942);
    }

    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        this.mView = layoutInflater.inflate(R.layout.dialog_alert, viewGroup, false);
        Log.d(TAG, "onCreateView:" + TAG);
        this.mBtnCancel = (Button) this.mView.findViewById(R.id.btn_cancel);
        this.mBtnAction = (Button) this.mView.findViewById(R.id.btn_action);
        this.mTvAlert = (TextView) this.mView.findViewById(R.id.tv_notif);
        this.mTvTitle = (TextView) this.mView.findViewById(R.id.tv_title);
        this.mDialogId = getArguments().getInt(AlbusModelObject.DIALOG);
        String string;
        CharSequence string2;
        CharSequence replaceAll;
        CharSequence string3;
        switch (this.mDialogId) {
            case e.a /*0*/:
                this.mIDialog.onCreateDialog(0, this, this.mView, getArguments(), this.mContext);
                break;
            case e.b /*1*/:
                this.mIDialog.onCreateDialog(1, this, this.mView, getArguments(), this.mContext);
                break;
            case e.c /*2*/:
                this.mIDialog.onCreateDialog(2, this, this.mView, getArguments(), this.mContext);
                break;
            case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                this.mIDialog.onCreateDialog(4, this, this.mView, getArguments(), this.mContext);
                break;
            case HttpRouteDirector.LAYER_PROTOCOL /*5*/:
                this.mIDialog.onCreateDialog(5, this, this.mView, getArguments(), this.mContext);
                break;
            case SimpleLog.LOG_LEVEL_OFF /*7*/:
                this.mIDialog.onCreateDialog(7, this, this.mView, getArguments(), this.mContext);
                break;
            case Utils.FILE_TYPE_INSTALLER /*8*/:
                this.mIDialog.onCreateDialog(8, this, this.mView, getArguments(), this.mContext);
                break;
            case PinManagerV2.REGCODE_MAX /*12*/:
                this.mIDialog.onCreateDialog(12, this, this.mView, getArguments(), this.mContext);
                break;
            case HTTP.CR /*13*/:
                this.mIDialog.onCreateDialog(13, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Toolbar_titleMarginTop /*15*/:
                this.mIDialog.onCreateDialog(15, this, this.mView, getArguments(), this.mContext);
                break;
            case FizzlinkUtil.S_FLAC /*19*/:
                this.mIDialog.onCreateDialog(19, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_actionModeStyle /*27*/:
                this.mIDialog.onCreateDialog(27, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_actionModeCloseButtonStyle /*28*/:
                this.mIDialog.onCreateDialog(28, this, this.mView, getArguments(), this.mContext);
                Log.d(TAG, "unfriend view");
                string = getArguments().getString(CatfishDataStorage.NIC_NAME);
                string2 = this.mContext.getResources().getString(R.string.unfried_msg_notif);
                string = this.mContext.getResources().getString(R.string.unfried_title).replaceAll("\\[friend_name\\]", string);
                Log.d(TAG, string2);
                this.mTvAlert.setText(string2);
                this.mTvTitle.setText(SmiledText.getSmiledText(this.mContext, string, this.mTvTitle));
                this.mTvTitle.setVisibility(0);
                this.mBtnAction.setText(this.mContext.getResources().getString(R.string.unfriend));
                this.mBtnAction.setAllCaps(true);
                btnActionListener();
                break;
            case R.styleable.Theme_actionModeBackground /*29*/:
                this.mIDialog.onCreateDialog(29, this, this.mView, getArguments(), this.mContext);
                string = getArguments().getString(CatfishDataStorage.NIC_NAME);
                string2 = this.mContext.getResources().getString(R.string.block_friend_msg_notif);
                replaceAll = this.mContext.getResources().getString(R.string.block_friend_title).replaceAll("\\[friend_name\\]", string);
                Log.d(TAG, string2);
                this.mTvAlert.setText(string2);
                this.mTvTitle.setText(replaceAll);
                this.mTvTitle.setVisibility(0);
                this.mBtnAction.setText(this.mContext.getResources().getString(R.string.block));
                this.mBtnAction.setAllCaps(true);
                btnActionListener();
                break;
            case R.styleable.Theme_actionModeCloseDrawable /*31*/:
                this.mIDialog.onCreateDialog(31, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_actionModeWebSearchDrawable /*38*/:
                this.mIDialog.onCreateDialog(38, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_textAppearanceLargePopupMenu /*40*/:
                this.mIDialog.onCreateDialog(40, this, this.mView, getArguments(), this.mContext);
                this.mTvAlert.setText(getString(R.string.deleted_pool_msg).replace("[pool_name]", getArguments().getString(AlbusModelObject.GROUP)));
                this.mBtnCancel.setText(getString(R.string.btn_save_conversation));
                this.mBtnAction.setText(getString(R.string.btn_del_group));
                btnActionListener();
                break;
            case R.styleable.Theme_textAppearanceSmallPopupMenu /*41*/:
                this.mIDialog.onCreateDialog(41, this, this.mView, getArguments(), this.mContext);
                string2 = getArguments().getString(CatfishRESTAPI.CFCOMPACT_EMAIL);
                CharSequence string4 = getString(R.string.verify_email_reg);
                CharSequence string5 = getString(R.string.btn_edit_email);
                CharSequence string6 = getString(R.string.btn_continue);
                TextView textView = (TextView) this.mView.findViewById(R.id.tv_title);
                textView.setVisibility(0);
                textView.setText(string2);
                this.mTvAlert.setText(string4);
                this.mBtnCancel.setText(string5);
                this.mBtnAction.setText(string6);
                btnActionListener();
                break;
            case R.styleable.Theme_actionButtonStyle /*49*/:
                this.mIDialog.onCreateDialog(49, this, this.mView, getArguments(), this.mContext);
                replaceAll = getString(R.string.no_upercase);
                string3 = getString(R.string.yes_upercase);
                this.mTvAlert.setText(getString(R.string.delete) + " " + this.mName + "? " + getString(R.string.delete_category_hint));
                this.mBtnCancel.setText(replaceAll);
                this.mBtnAction.setText(string3);
                btnActionListener();
                break;
            case R.styleable.Theme_buttonBarStyle /*50*/:
                this.mIDialog.onCreateDialog(50, this, this.mView, getArguments(), this.mContext);
                break;
            case R.styleable.Theme_dividerHorizontal /*56*/:
                this.mIDialog.onCreateDialog(56, this, this.mView, getArguments(), this.mContext);
                replaceAll = getString(R.string.no_upercase);
                string3 = getString(R.string.yes_upercase);
                this.mTvAlert.setText(getString(R.string.cancel_fizz_upl_notif));
                this.mBtnCancel.setText(replaceAll);
                this.mBtnAction.setText(string3);
                btnActionListener();
                break;
            case R.styleable.Theme_activityChooserViewStyle /*57*/:
                this.mIDialog.onCreateDialog(57, this, this.mView, getArguments(), this.mContext);
                this.mTvAlert.setText(getString(R.string.delete_fizz_notif));
                this.mTvTitle.setText(getString(R.string.delete_fizz_title));
                this.mTvTitle.setVisibility(0);
                btnActionListener();
                break;
            case R.styleable.Theme_toolbarStyle /*58*/:
                this.mIDialog.onCreateDialog(58, this, this.mView, getArguments(), this.mContext);
                String[] stringArray = getResources().getStringArray(R.array.contributors_list);
                replaceAll = "";
                int length = stringArray.length;
                int i = 0;
                while (i < length) {
                    replaceAll = i < length ? replaceAll + "- " + stringArray[i] + "\n" : replaceAll + "- " + stringArray[i];
                    i++;
                }
                this.mTvAlert.setText(replaceAll);
                this.mTvTitle.setText(getString(R.string.Contributors));
                this.mTvTitle.setVisibility(0);
                this.mBtnAction.setVisibility(8);
                this.mBtnCancel.setText(getString(R.string.btn_close));
                btnActionListener();
                break;
            case R.styleable.Theme_toolbarNavigationButtonStyle /*59*/:
                this.mIDialog.onCreateDialog(59, this, this.mView, getArguments(), this.mContext);
                this.mTvAlert.setText(getString(R.string.file_not_exist_desc));
                this.mTvTitle.setText(getString(R.string.file_doesnt_exist));
                this.mTvTitle.setVisibility(0);
                this.mBtnCancel.setVisibility(8);
                this.mBtnAction.setText(getString(R.string.btn_ok));
                btnActionListener();
                break;
        }
        return this.mView;
    }

    public void onDismiss(DialogInterface dialogInterface) {
        if (this.mDialogId == 0) {
            this.mIDialog.onDismissDialog(0, this, this.mView, getArguments());
        } else if (this.mDialogId == 1) {
            this.mIDialog.onDismissDialog(1, this, this.mView, getArguments());
        } else if (this.mDialogId == 2) {
            this.mIDialog.onDismissDialog(2, this, this.mView, getArguments());
        } else if (this.mDialogId == 4) {
            this.mIDialog.onDismissDialog(4, this, this.mView, getArguments());
        } else if (this.mDialogId == 5) {
            this.mIDialog.onDismissDialog(5, this, this.mView, getArguments());
        } else if (this.mDialogId == 12) {
            this.mIDialog.onDismissDialog(12, this, this.mView, getArguments());
        } else if (this.mDialogId == 13) {
            this.mIDialog.onDismissDialog(13, this, this.mView, getArguments());
        } else if (this.mDialogId == 15) {
            this.mIDialog.onDismissDialog(15, this, this.mView, getArguments());
        } else if (this.mDialogId == 7) {
            this.mIDialog.onDismissDialog(7, this, this.mView, getArguments());
        } else if (this.mDialogId == 8) {
            this.mIDialog.onDismissDialog(8, this, this.mView, getArguments());
        } else if (this.mDialogId == 27) {
            this.mIDialog.onDismissDialog(27, this, this.mView, getArguments());
        } else if (this.mDialogId == 28) {
            this.mIDialog.onDismissDialog(28, this, this.mView, getArguments());
        } else if (this.mDialogId == 31) {
            this.mIDialog.onDismissDialog(31, this, this.mView, getArguments());
        } else if (this.mDialogId == 40) {
            this.mIDialog.onDismissDialog(40, this, this.mView, getArguments());
        } else if (this.mDialogId == 41) {
            this.mIDialog.onDismissDialog(41, this, this.mView, getArguments());
        } else if (this.mDialogId == 19) {
            this.mIDialog.onDismissDialog(19, this, this.mView, getArguments());
        } else if (this.mDialogId == 49) {
            this.mIDialog.onDismissDialog(49, this, this.mView, getArguments());
        } else if (this.mDialogId == 50) {
            this.mIDialog.onDismissDialog(50, this, this.mView, getArguments());
        } else if (this.mDialogId == 58) {
            this.mIDialog.onDismissDialog(58, this, this.mView, getArguments());
        } else if (this.mDialogId == 59) {
            this.mIDialog.onDismissDialog(59, this, this.mView, getArguments());
        }
        super.onDismiss(dialogInterface);
    }

    public void onStart() {
        if (this.mDialogId == 0) {
            this.mIDialog.onShowDialog(0, this, this.mView, getArguments());
        } else if (this.mDialogId == 1) {
            this.mIDialog.onShowDialog(1, this, this.mView, getArguments());
        } else if (this.mDialogId == 2) {
            this.mIDialog.onShowDialog(2, this, this.mView, getArguments());
        } else if (this.mDialogId == 4) {
            this.mIDialog.onShowDialog(4, this, this.mView, getArguments());
        } else if (this.mDialogId == 5) {
            this.mIDialog.onShowDialog(5, this, this.mView, getArguments());
        } else if (this.mDialogId == 12) {
            this.mIDialog.onShowDialog(12, this, this.mView, getArguments());
        } else if (this.mDialogId == 13) {
            this.mIDialog.onShowDialog(13, this, this.mView, getArguments());
        } else if (this.mDialogId == 15) {
            this.mIDialog.onShowDialog(15, this, this.mView, getArguments());
        } else if (this.mDialogId == 7) {
            this.mIDialog.onShowDialog(7, this, this.mView, getArguments());
        } else if (this.mDialogId == 8) {
            this.mIDialog.onShowDialog(8, this, this.mView, getArguments());
        } else if (this.mDialogId == 27) {
            this.mIDialog.onShowDialog(27, this, this.mView, getArguments());
        } else if (this.mDialogId == 28) {
            this.mIDialog.onShowDialog(28, this, this.mView, getArguments());
        } else if (this.mDialogId == 31) {
            this.mIDialog.onShowDialog(31, this, this.mView, getArguments());
        } else if (this.mDialogId == 40) {
            this.mIDialog.onShowDialog(40, this, this.mView, getArguments());
        } else if (this.mDialogId == 41) {
            this.mIDialog.onShowDialog(41, this, this.mView, getArguments());
        } else if (this.mDialogId == 19) {
            this.mIDialog.onShowDialog(19, this, this.mView, getArguments());
        } else if (this.mDialogId == 49) {
            this.mIDialog.onShowDialog(49, this, this.mView, getArguments());
        } else if (this.mDialogId == 50) {
            this.mIDialog.onShowDialog(50, this, this.mView, getArguments());
        } else if (this.mDialogId == 58) {
            this.mIDialog.onShowDialog(58, this, this.mView, getArguments());
        } else if (this.mDialogId == 59) {
            this.mIDialog.onShowDialog(59, this, this.mView, getArguments());
        }
        super.onStart();
    }

    public void setClickListener(OnActionClickListener onActionClickListener) {
        this.mActionListener = onActionClickListener;
    }

    public void setContext(Context context) {
        this.mContext = context;
    }

    public void setInterface(AlbusDialogInterface albusDialogInterface) {
        this.mIDialog = albusDialogInterface;
    }
}
