package com.albus.view;

import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;
import android.widget.TextView;
import com.albus.activity.CustomActionBarPageActivity;
import com.albus.dialog.AlbusDialog;
import com.albus.dialog.AlbusDialog.OnActionClickListener;
import com.albus.dialog.AlbusDialogInterface;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.util.Log;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class CustomAddListItemView extends ScrollView {
    private static final String TAG = "CustomAddListItemView";
    private Button mBtnAddItem = null;
    private Context mContext = null;
    private int mCountEt = 1;
    private EditText mEtItemValue = null;
    private boolean mIsAddress = false;
    private boolean mIsEmail = false;
    private boolean mIsPhone = false;
    private boolean mIsWeb = false;
    private ImageView mIvClose = null;
    private List mListEtNew = new ArrayList();
    private List mListSpinnerNew = new ArrayList();
    private LinearLayout mLlAddItemContainer = null;
    private RelativeLayout mRlItemContainer = null;
    private Spinner mSpinner = null;
    private ScrollView mSvRoot = null;
    private TextView mTvHint = null;
    private TextView mTvTitle = null;
    private OnPrepareItemValue prepareItemValue = null;

    public interface OnPrepareItemValue {
        void onSaveActive();

        void onSaveUnactive();
    }

    class AddField implements OnClickListener {
        private AddField() {
        }

        public void onClick(View view) {
            Log.d(CustomAddListItemView.TAG, "action add click");
            CustomAddListItemView.this.mCountEt = CustomAddListItemView.this.mCountEt + 1;
            CustomAddListItemView.this.mBtnAddItem.setVisibility(8);
            View inflate = ((CustomActionBarPageActivity) CustomAddListItemView.this.mContext).getLayoutInflater().inflate(R.layout.item_profile_add_field_row, null);
            ImageView imageView = (ImageView) inflate.findViewById(R.id.iv_add_close);
            imageView.setVisibility(0);
            EditText editText = (EditText) inflate.findViewById(R.id.et_add_value);
            Spinner spinner = (Spinner) inflate.findViewById(R.id.spinner_add_identifier);
            editText.setInputType(33);
            if (CustomAddListItemView.this.mIsPhone) {
                editText.setHint(R.string.phone_numb);
            } else if (CustomAddListItemView.this.mIsEmail) {
                editText.setHint(R.string.email_hint);
            } else if (CustomAddListItemView.this.mIsAddress) {
                editText.setHint(R.string.address);
            } else if (CustomAddListItemView.this.mIsWeb) {
                editText.setHint(R.string.web);
            }
            SpinnerAdapter arrayAdapter = new ArrayAdapter(CustomAddListItemView.this.mContext, 17367048, new ArrayList(Arrays.asList(CustomAddListItemView.this.getResources().getStringArray(R.array.profile_add_field))));
            arrayAdapter.setDropDownViewResource(17367049);
            spinner.setAdapter(arrayAdapter);
            editText.requestFocus();
            CustomAddListItemView.this.mListEtNew.add(editText);
            CustomAddListItemView.this.mListSpinnerNew.add(spinner);
            CustomAddListItemView.this.addEdittextListener(editText);
            CustomAddListItemView.this.addCloseBtnListener(imageView, inflate, editText, spinner);
            CustomAddListItemView.this.setSpinnerClickListener(spinner);
            CustomAddListItemView.this.mLlAddItemContainer.addView(inflate);
        }
    }

    class ProfileAddDialog implements AlbusDialogInterface {
        private Spinner mSpinner;

        public ProfileAddDialog(Spinner spinner) {
            this.mSpinner = spinner;
        }

        public void onCancelDialog(int i, DialogInterface dialogInterface, Context context) {
        }

        public void onCreateDialog(int i, final DialogFragment dialogFragment, View view, Bundle bundle, Context context) {
            final EditText editText = (EditText) view.findViewById(R.id.et_custom_name);
            AlbusDialog.setOnActionClickListener(21, new OnActionClickListener() {
                public void onActionNoListener() {
                    dialogFragment.dismiss();
                }

                public void onActionYesListener() {
                    String obj = editText.getText().toString();
                    Log.d(CustomAddListItemView.TAG, "selected=" + ProfileAddDialog.this.mSpinner.getSelectedItem().toString());
                    Log.d(CustomAddListItemView.TAG, "type=" + obj + " spinner count=" + ProfileAddDialog.this.mSpinner.getCount());
                    CustomAddListItemView.this.changeSpinnerList(ProfileAddDialog.this.mSpinner, obj);
                    dialogFragment.dismiss();
                }
            });
        }

        public void onDismissDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }

        public void onShowDialog(int i, DialogFragment dialogFragment, View view, Bundle bundle) {
        }
    }

    public CustomAddListItemView(Context context) {
        super(context);
    }

    public CustomAddListItemView(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.mContext = context;
        this.mSvRoot = (ScrollView) ((LayoutInflater) context.getSystemService("layout_inflater")).inflate(R.layout.custom_add_list_item_view, this);
        this.mTvTitle = (TextView) this.mSvRoot.findViewById(R.id.tv_title);
        this.mRlItemContainer = (RelativeLayout) this.mSvRoot.findViewById(R.id.rl_value_area);
        this.mEtItemValue = (EditText) this.mSvRoot.findViewById(R.id.et_custom_value);
        this.mSpinner = (Spinner) this.mSvRoot.findViewById(R.id.spinner_val_identifier);
        this.mIvClose = (ImageView) this.mSvRoot.findViewById(R.id.iv_close);
        this.mLlAddItemContainer = (LinearLayout) this.mSvRoot.findViewById(R.id.ll_container);
        this.mBtnAddItem = (Button) this.mSvRoot.findViewById(R.id.btn_new);
        this.mTvHint = (TextView) this.mSvRoot.findViewById(R.id.tv_hint);
        SpinnerAdapter arrayAdapter = new ArrayAdapter(context, 17367048, new ArrayList(Arrays.asList(getResources().getStringArray(R.array.profile_add_field))));
        arrayAdapter.setDropDownViewResource(17367049);
        this.mSpinner.setAdapter(arrayAdapter);
        this.mTvHint.setVisibility(0);
        this.mEtItemValue.setInputType(33);
        isShow();
        addEdittextListener(this.mEtItemValue);
        this.mBtnAddItem.setOnClickListener(new AddField());
        this.mIvClose.setVisibility(4);
        this.mIvClose.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (CustomAddListItemView.this.mCountEt == 1) {
                    CustomAddListItemView.this.mEtItemValue.setText("");
                    CustomAddListItemView.this.isGone();
                    return;
                }
                CustomAddListItemView.this.mCountEt = CustomAddListItemView.this.mCountEt - 1;
                CustomAddListItemView.this.mEtItemValue.setText("");
                CustomAddListItemView.this.mIvClose.setVisibility(4);
                CustomAddListItemView.this.mRlItemContainer.setVisibility(8);
            }
        });
        setSpinnerClickListener(this.mSpinner);
    }

    private void addCloseBtnListener(ImageView imageView, final View view, final EditText editText, final Spinner spinner) {
        imageView.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                CustomAddListItemView.this.prepareItemValue.onSaveActive();
                if (CustomAddListItemView.this.mCountEt == 1) {
                    CustomAddListItemView.this.mEtItemValue.setText("");
                    CustomAddListItemView.this.isGone();
                    return;
                }
                int indexOf = CustomAddListItemView.this.mListEtNew.indexOf(editText);
                int indexOf2 = CustomAddListItemView.this.mListSpinnerNew.indexOf(spinner);
                CustomAddListItemView.this.mListEtNew.remove(indexOf);
                CustomAddListItemView.this.mListSpinnerNew.remove(indexOf2);
                ((LinearLayout) view.getParent()).removeView(view);
                CustomAddListItemView.this.mCountEt = CustomAddListItemView.this.mCountEt - 1;
                CustomAddListItemView.this.isShow();
            }
        });
    }

    private void addEdittextListener(final EditText editText) {
        editText.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                if (editText.getText().toString().equals("")) {
                    CustomAddListItemView.this.isGone();
                    if (CustomAddListItemView.this.prepareItemValue != null) {
                        CustomAddListItemView.this.prepareItemValue.onSaveUnactive();
                    }
                    Log.d(CustomAddListItemView.TAG, "add new edittext, close and add must hide");
                    return;
                }
                CustomAddListItemView.this.isShow();
                if (CustomAddListItemView.this.prepareItemValue != null) {
                    CustomAddListItemView.this.prepareItemValue.onSaveActive();
                }
            }
        });
    }

    private void changeSpinnerList(Spinner spinner, String str) {
        ArrayAdapter arrayAdapter = (ArrayAdapter) spinner.getAdapter();
        String string = this.mContext.getResources().getString(R.string.custom);
        arrayAdapter.remove((String) spinner.getSelectedItem());
        arrayAdapter.add(str);
        arrayAdapter.add(string);
    }

    private void isGone() {
        this.mBtnAddItem.setVisibility(8);
        this.mIvClose.setVisibility(4);
        this.prepareItemValue.onSaveUnactive();
    }

    private void isShow() {
        this.mBtnAddItem.setVisibility(0);
        this.mIvClose.setVisibility(0);
    }

    private void setSpinnerClickListener(final Spinner spinner) {
        spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
            public void onItemSelected(AdapterView adapterView, View view, int i, long j) {
                CustomAddListItemView.this.prepareItemValue.onSaveActive();
                if (adapterView.getSelectedItem().toString().equals("Custom")) {
                    Log.d(CustomAddListItemView.TAG, "create dialog");
                    Bundle bundle = new Bundle();
                    bundle.putInt(AlbusModelObject.DIALOG, 21);
                    AlbusDialog.showDialog(21, new ProfileAddDialog(spinner), CustomAddListItemView.this.mContext, bundle, ((CustomActionBarPageActivity) CustomAddListItemView.this.mContext).getSupportFragmentManager());
                }
            }

            public void onNothingSelected(AdapterView adapterView) {
            }
        });
    }

    public String getFirstEmail() {
        return this.mEtItemValue.getText().toString();
    }

    public String getFirstType() {
        return this.mSpinner.getSelectedItem().toString();
    }

    public List getListOfEdittext() {
        return this.mListEtNew;
    }

    public List getListOfSpinner() {
        return this.mListSpinnerNew;
    }

    public void setItemValue(String[] strArr, String[] strArr2) {
        List asList = Arrays.asList(this.mContext.getResources().getStringArray(R.array.profile_add_field));
        Log.d(TAG, "setitemvalue");
        for (int i = 0; i < strArr.length; i++) {
            int indexOf = asList.indexOf(strArr2[i]);
            if (i == 0) {
                this.mEtItemValue.setText(strArr[i]);
                this.mSpinner.setSelection(this.mSpinner.getCount() - 1);
                if (indexOf == -1) {
                    changeSpinnerList(this.mSpinner, strArr2[i]);
                    this.mSpinner.setSelection(this.mSpinner.getCount() - 2);
                } else {
                    this.mSpinner.setSelection(indexOf);
                }
            } else {
                this.mCountEt++;
                View inflate = ((CustomActionBarPageActivity) this.mContext).getLayoutInflater().inflate(R.layout.item_profile_add_field_row, null);
                ImageView imageView = (ImageView) inflate.findViewById(R.id.iv_add_close);
                EditText editText = (EditText) inflate.findViewById(R.id.et_add_value);
                Spinner spinner = (Spinner) inflate.findViewById(R.id.spinner_add_identifier);
                SpinnerAdapter arrayAdapter = new ArrayAdapter(this.mContext, 17367048, new ArrayList(Arrays.asList(getResources().getStringArray(R.array.profile_add_field))));
                arrayAdapter.setDropDownViewResource(17367049);
                spinner.setAdapter(arrayAdapter);
                spinner.setSelection(spinner.getCount() - 1);
                if (indexOf == -1) {
                    changeSpinnerList(spinner, strArr2[i]);
                    spinner.setSelection(spinner.getCount() - 2);
                } else {
                    spinner.setSelection(indexOf);
                }
                editText.setText(strArr[i]);
                imageView.setVisibility(0);
                this.mListEtNew.add(editText);
                this.mListSpinnerNew.add(spinner);
                addEdittextListener(editText);
                addCloseBtnListener(imageView, inflate, editText, spinner);
                setSpinnerClickListener(spinner);
                this.mLlAddItemContainer.addView(inflate);
            }
        }
    }

    public void setListForAddress(boolean z) {
        this.mIsAddress = z;
        this.mEtItemValue.setHint(R.string.address);
        this.mTvHint.setText(R.string.del_address_hint);
        this.mTvTitle.setText(R.string.address);
    }

    public void setListForEmail(boolean z) {
        this.mIsEmail = z;
        this.mEtItemValue.setHint(R.string.email_hint);
        this.mEtItemValue.setInputType(33);
        this.mTvHint.setText(R.string.del_email_hint);
        this.mTvTitle.setText(R.string.email);
    }

    public void setListForPhone(boolean z) {
        this.mIsPhone = z;
        this.mEtItemValue.setHint(R.string.phone_numb);
        this.mEtItemValue.setRawInputType(3);
        this.mEtItemValue.setMaxLines(1);
        this.mTvHint.setText(R.string.del_phone_hint);
        this.mTvTitle.setText(R.string.phone);
    }

    public void setListForWeb(boolean z) {
        this.mIsWeb = z;
        this.mEtItemValue.setHint(R.string.web);
        this.mTvHint.setText(R.string.del_web_hint);
        this.mTvTitle.setText(R.string.web);
        this.mSpinner.setVisibility(8);
    }

    public void setOnPrepareItemValue(OnPrepareItemValue onPrepareItemValue) {
        this.prepareItemValue = onPrepareItemValue;
    }
}
