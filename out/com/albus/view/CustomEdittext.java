package com.albus.view;

import android.content.Context;
import android.text.Editable;
import android.text.InputFilter;
import android.text.InputFilter.AllCaps;
import android.text.TextWatcher;
import android.text.method.HideReturnsTransformationMethod;
import android.text.method.PasswordTransformationMethod;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.catfiz.R;

public class CustomEdittext extends LinearLayout {
    private OnActionEdittextChange actionEdittextChange = null;
    private Context mContext = null;
    private EditText mEtValue = null;
    private EditText mEtValueEmail = null;
    private EditText mEtValueNumber = null;
    private EditText mEtValuePass = null;
    private boolean mIsChecked = false;
    private ImageView mIvEye = null;
    private LinearLayout mLlEtPanel = null;
    private int mText = 0;
    private TextView mTvError = null;
    private TextView mTvForgot = null;
    private TextView mTvTitle = null;

    public interface OnActionEdittextChange {
        void onTextChanged(EditText editText);
    }

    public CustomEdittext(Context context) {
        super(context);
    }

    public CustomEdittext(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.mContext = context;
        this.mLlEtPanel = (LinearLayout) ((LayoutInflater) context.getSystemService("layout_inflater")).inflate(R.layout.custom_edittext, this);
        this.mTvTitle = (TextView) this.mLlEtPanel.findViewById(R.id.tv_title);
        this.mTvError = (TextView) this.mLlEtPanel.findViewById(R.id.tv_error);
        this.mTvForgot = (TextView) this.mLlEtPanel.findViewById(R.id.tv_forgot);
        this.mEtValue = (EditText) this.mLlEtPanel.findViewById(R.id.et_value);
        this.mEtValuePass = (EditText) this.mLlEtPanel.findViewById(R.id.et_value_pass);
        this.mEtValueEmail = (EditText) this.mLlEtPanel.findViewById(R.id.et_value_email);
        this.mEtValueNumber = (EditText) this.mLlEtPanel.findViewById(R.id.et_value_number);
        this.mIvEye = (ImageView) this.mLlEtPanel.findViewById(R.id.iv_eye);
    }

    private void setTitleHide(String str) {
        if (str.equals("")) {
            this.mTvTitle.setVisibility(4);
        } else {
            this.mTvTitle.setVisibility(0);
        }
    }

    public String getEmailText() {
        return this.mEtValueEmail.getText().toString();
    }

    public void hideErrorView() {
        this.mTvError.setVisibility(8);
    }

    public void setEmailInput(String str) {
        this.mTvTitle.setText(str);
        this.mEtValueEmail.setHint(str);
        this.mEtValueEmail.setVisibility(0);
        this.mEtValueEmail.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
                CustomEdittext.this.setTitleHide(CustomEdittext.this.mEtValueEmail.getText().toString());
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                CustomEdittext.this.actionEdittextChange.onTextChanged(CustomEdittext.this.mEtValueEmail);
                CustomEdittext.this.mTvTitle.setVisibility(0);
            }
        });
    }

    public void setErrorView(String str) {
        if (this.mTvError.getVisibility() != 0) {
            this.mTvError.setVisibility(0);
            this.mTvError.setText(str);
        }
    }

    public void setNormalInput(String str, final boolean z, boolean z2) {
        this.mText = 1;
        this.mTvTitle.setText(str);
        this.mEtValue.setHint(str);
        this.mEtValue.setVisibility(0);
        if (!z) {
            this.mEtValue.setGravity(17);
        }
        if (z2) {
            this.mEtValue.setFilters(new InputFilter[]{new AllCaps()});
        }
        this.mEtValue.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
                if (z) {
                    CustomEdittext.this.setTitleHide(CustomEdittext.this.mEtValue.getText().toString());
                }
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                CustomEdittext.this.actionEdittextChange.onTextChanged(CustomEdittext.this.mEtValue);
                if (z) {
                    CustomEdittext.this.mTvTitle.setVisibility(0);
                } else {
                    CustomEdittext.this.mTvTitle.setVisibility(4);
                }
            }
        });
    }

    public void setNumberInput(String str) {
        this.mTvTitle.setText(str);
        this.mEtValueNumber.setHint(str);
        this.mEtValueNumber.setVisibility(0);
        this.mEtValueNumber.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
                CustomEdittext.this.setTitleHide(CustomEdittext.this.mEtValueNumber.getText().toString());
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                CustomEdittext.this.actionEdittextChange.onTextChanged(CustomEdittext.this.mEtValueNumber);
                CustomEdittext.this.mTvTitle.setVisibility(0);
            }
        });
    }

    public void setOnActionEdittextChangeClickListener(OnActionEdittextChange onActionEdittextChange) {
        this.actionEdittextChange = onActionEdittextChange;
    }

    public void setPassInput(String str) {
        this.mTvTitle.setText(str);
        this.mEtValuePass.setHint(str);
        this.mEtValuePass.setVisibility(0);
        this.mIvEye.setVisibility(0);
        this.mEtValuePass.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable editable) {
                CustomEdittext.this.setTitleHide(CustomEdittext.this.mEtValuePass.getText().toString());
            }

            public void beforeTextChanged(CharSequence charSequence, int i, int i2, int i3) {
            }

            public void onTextChanged(CharSequence charSequence, int i, int i2, int i3) {
                CustomEdittext.this.actionEdittextChange.onTextChanged(CustomEdittext.this.mEtValuePass);
                CustomEdittext.this.mTvTitle.setVisibility(0);
            }
        });
        this.mIvEye.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (CustomEdittext.this.mIsChecked) {
                    CustomEdittext.this.mIvEye.setImageResource(R.drawable.ic_psw_show);
                    CustomEdittext.this.mEtValuePass.setTransformationMethod(PasswordTransformationMethod.getInstance());
                    CustomEdittext.this.mEtValuePass.setSelection(CustomEdittext.this.mEtValuePass.getText().length());
                } else {
                    CustomEdittext.this.mIvEye.setImageResource(R.drawable.ic_psw_hide);
                    CustomEdittext.this.mEtValuePass.setTransformationMethod(HideReturnsTransformationMethod.getInstance());
                    CustomEdittext.this.mEtValuePass.setSelection(CustomEdittext.this.mEtValuePass.getText().length());
                }
                CustomEdittext.this.mIsChecked = !CustomEdittext.this.mIsChecked;
            }
        });
    }

    public void setText(String str) {
        this.mText = 1;
        this.mEtValue.setText(str);
    }
}
