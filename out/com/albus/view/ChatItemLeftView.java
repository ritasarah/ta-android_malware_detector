package com.albus.view;

import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import com.albus.activity.ChatGroupConvActivity;
import com.albus.cfspan.CFLinkify;
import com.albus.imagespan.SmiledText;
import com.albus.keys.CacheKeys;
import com.albus.media.ThumbnailLoader;
import com.albus.media.UserPhotoLoader;
import com.albus.util.AlbusAudioPlayer;
import com.albus.util.AlbusAudioPlayer.onAudioStateChange;
import com.albus.util.AlbusUtils;
import com.albus.util.LongMessageWorker;
import com.albus.util.QuoteUtils;
import com.catfiz.R;
import com.catfiz.base.Catfiz;
import com.catfiz.gif.AnimationListener;
import com.catfiz.gif.GifDrawable;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.model.FileMetaInfo;
import com.catfiz.model.Fizzlink;
import com.catfiz.model.Message;
import com.catfiz.model.Quote;
import com.catfiz.model.User;
import com.catfiz.pool.PoolDataUploadExecutor;
import com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus;
import com.catfiz.service.CatfishRESTAPI.MessageType;
import com.catfiz.service.CatfishService;
import com.catfiz.service.FriendListDataStorage;
import com.catfiz.service.ServerMessageDataStorage;
import com.catfiz.svcpersistent.TaskDataStorage;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.List;
import org.apache.commons.logging.impl.SimpleLog;
import org.apache.http.conn.routing.HttpRouteDirector;
import org.apache.http.protocol.HTTP;

public class ChatItemLeftView extends LinearLayout implements OnClickListener {
    private static int BUBBLE_IMAGE_HEIGHT_LANDSCAPE = 0;
    private static int BUBBLE_IMAGE_HEIGHT_PORTRAIT = 0;
    private static int BUBBLE_IMAGE_WIDTH_NORMAL = 0;
    private static final String TAG = "ChatItemLeftView";
    private ImageView mCancelDownloadHelper = null;
    private int mChatViewType = 1;
    private Context mContext = null;
    private ImageView mFileCancel = null;
    private ImageView mFileDownload = null;
    private FrameLayout mFmPicLayer = null;
    private ImageButton mIbVoiceCancelDownload = null;
    private ImageButton mIbVoiceDownload = null;
    private ImageButton mIbVoicePlayer = null;
    private boolean mIsOfficial = false;
    private OnItemLeftClickListener mItemClickListener = null;
    private LinearLayout mItemLeft = null;
    private OnItemLeftLongClickListener mItemLongClickListener = null;
    private ImageView mIvFizzIcon;
    private ImageView mIvPlayVideoPic = null;
    private ImageView mIvStatus = null;
    private ImageView mIvStatusTyping = null;
    private ImageView mIvThumbFile = null;
    private ImageView mIvThumbPic = null;
    private LinearLayout mLlAttachContact = null;
    private LinearLayout mLlAttachContainer = null;
    private LinearLayout mLlAttachFile = null;
    private LinearLayout mLlAttachPic = null;
    private LinearLayout mLlBgItemMsg = null;
    private LinearLayout mLlFizzlinkContainer;
    private LinearLayout mLlLike = null;
    private LinearLayout mLlNewUnreadMsg = null;
    private LinearLayout mLlPicDownload = null;
    private LinearLayout mLlQuote = null;
    private LinearLayout mLlSticker = null;
    private LinearLayout mLlVoiceStreamButton = null;
    private LongMessageWorker mLongMessageWorker = null;
    private String mMessageKey = null;
    private Message mMsg = null;
    private String mNameKey = null;
    OnLongClickListener mOnLongClick = new OnLongClickListener() {
        public boolean onLongClick(View view) {
            ChatItemLeftView.this.mItemLongClickListener.onItemLongClicked(view);
            return false;
        }
    };
    private TextView mPicCancel = null;
    private ProgressBar mProgressBarFile = null;
    private ProgressBar mProgressBarPic = null;
    private ProgressBar mProgressBarVoice = null;
    private CircleImageView mRivContactPicBottomLeft = null;
    private CircleImageView mRivContactPicBottomRight = null;
    private CircleImageView mRivContactPicTopLeft = null;
    private CircleImageView mRivContactPicTopRight = null;
    private CircleImageView mRivProfPic = null;
    private CircleImageView mRivSingleContactPic = null;
    private RelativeLayout mRlAttachMultiContact = null;
    private RelativeLayout mRlAttachPic = null;
    private RelativeLayout mRlAttachVoice = null;
    private String mRoomName = null;
    private SeekBar mSbPlayback = null;
    private ThumbnailLoader mThumbnailLoader = null;
    private TextView mTvChat = null;
    private TextView mTvContactMsg = null;
    private TextView mTvContactName = null;
    private TextView mTvDay = null;
    private TextView mTvDuration = null;
    private TextView mTvFileName = null;
    private TextView mTvFileSize = null;
    private TextView mTvFizzDesc;
    private TextView mTvFizzTitle;
    private TextView mTvLikeCount = null;
    private TextView mTvName = null;
    private TextView mTvNewUnreadMsg = null;
    private TextView mTvProgressFile = null;
    private TextView mTvProgressPic = null;
    private TextView mTvQuote = null;
    private TextView mTvQuoteName = null;
    private TextView mTvReadMore = null;
    private TextView mTvVoiceStream = null;
    private UserPhotoLoader mUserPhotoLoader = null;
    private ChatItemStreamView mVideoPlayer = null;
    private boolean mbFitChatToThumbnail = false;

    public interface OnItemLeftLongClickListener {
        void onItemLongClicked(View view);
    }

    public interface OnItemLeftClickListener {
        void onAttachCancelClicked(Message message, int i);

        void onAttachDownloadClicked(Message message);

        void onAttachFileClicked(Message message);

        void onAttachPicClicked(Message message);

        void onFizzlinkClicked(Message message);

        void onItemChatClicked(Message message);

        void onProfilePicClicked(Message message);
    }

    /* synthetic */ class AnonymousClass3 {
        static final /* synthetic */ int[] $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType = new int[MessageType.values().length];

        static {
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTMESSAGE.ordinal()] = 1;
            } catch (NoSuchFieldError e) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTVOICE.ordinal()] = 2;
            } catch (NoSuchFieldError e2) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTCONFERENCE_LONGMESSAGE.ordinal()] = 3;
            } catch (NoSuchFieldError e3) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.LONG_MESSAGE.ordinal()] = 4;
            } catch (NoSuchFieldError e4) {
            }
        }
    }

    class AnimateGifListener implements AnimationListener {
        private WeakReference mGifDrawableRef = null;
        private int mGifLoopCount = 0;

        public AnimateGifListener(GifDrawable gifDrawable) {
            this.mGifDrawableRef = new WeakReference(gifDrawable);
        }

        public void onAnimationCompleted(int i) {
            Log.d(ChatItemLeftView.TAG, "Gif Loop count:" + this.mGifLoopCount);
            this.mGifLoopCount++;
            if (this.mGifLoopCount >= 2 && this.mGifDrawableRef != null) {
                GifDrawable gifDrawable = (GifDrawable) this.mGifDrawableRef.get();
                if (gifDrawable != null) {
                    gifDrawable.stop();
                }
            }
        }
    }

    public ChatItemLeftView(Context context) {
        super(context);
        if (!isInEditMode()) {
        }
    }

    public ChatItemLeftView(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.mContext = context;
        this.mItemLeft = (LinearLayout) ((LayoutInflater) context.getSystemService("layout_inflater")).inflate(R.layout.item_chat_view_left, this);
        this.mRivProfPic = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_img_l);
        this.mLlBgItemMsg = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_bg_msg_l);
        this.mTvName = (TextView) this.mItemLeft.findViewById(R.id.tv_name_l);
        this.mIvStatus = (ImageView) this.mItemLeft.findViewById(R.id.iv_status_l);
        this.mIvStatusTyping = (ImageView) this.mItemLeft.findViewById(R.id.iv_status_typing_l);
        this.mLlSticker = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_sticker_l);
        this.mTvDay = (TextView) this.mItemLeft.findViewById(R.id.tv_day_l);
        this.mTvChat = (TextView) this.mItemLeft.findViewById(R.id.tv_chat_l);
        this.mTvReadMore = (TextView) this.mItemLeft.findViewById(R.id.tv_read_more_l);
        this.mLlNewUnreadMsg = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_new_message_l);
        this.mTvNewUnreadMsg = (TextView) this.mItemLeft.findViewById(R.id.tv_new_message);
        this.mLlLike = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_like_container_l);
        this.mTvLikeCount = (TextView) this.mItemLeft.findViewById(R.id.tv_sum_like_l);
        this.mLlAttachContact = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_attach_contact_l);
        this.mRivSingleContactPic = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_attach_contact_single_l);
        this.mRlAttachMultiContact = (RelativeLayout) this.mItemLeft.findViewById(R.id.ll_attach_multi_contact_l);
        this.mTvContactName = (TextView) this.mItemLeft.findViewById(R.id.tv_attached_contact_name_l);
        this.mTvContactMsg = (TextView) this.mItemLeft.findViewById(R.id.tv_attached_contact_msg_l);
        this.mRivContactPicTopLeft = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_attach_multi_contact_top_left_l);
        this.mRivContactPicTopRight = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_attach_multi_contact_top_right_l);
        this.mRivContactPicBottomLeft = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_attach_multi_contact_bottom_left_l);
        this.mRivContactPicBottomRight = (CircleImageView) this.mItemLeft.findViewById(R.id.riv_attach_multi_contact_bottom_right_l);
        this.mLlAttachContainer = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_attach_l);
        this.mVideoPlayer = (ChatItemStreamView) this.mItemLeft.findViewById(R.id.vp_attach_video);
        this.mLlAttachFile = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_attach_file_l);
        this.mIvThumbFile = (ImageView) this.mItemLeft.findViewById(R.id.iv_thumb_attach_file_l);
        this.mTvFileName = (TextView) this.mItemLeft.findViewById(R.id.tv_file_attach_name_l);
        this.mTvFileSize = (TextView) this.mItemLeft.findViewById(R.id.tv_file_attach_size_l);
        this.mFileCancel = (ImageView) this.mItemLeft.findViewById(R.id.iv_attach_file_cancel_l);
        this.mCancelDownloadHelper = (ImageView) this.mItemLeft.findViewById(R.id.iv_attach_download_cancel_helper_l);
        this.mFileDownload = (ImageView) this.mItemLeft.findViewById(R.id.iv_attach_file_download_l);
        this.mProgressBarFile = (ProgressBar) this.mItemLeft.findViewById(R.id.pb_attach_file_l);
        this.mTvProgressFile = (TextView) this.mItemLeft.findViewById(R.id.tv_progress_persen);
        this.mLlAttachPic = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_attach_pic_l);
        this.mRlAttachPic = (RelativeLayout) this.mItemLeft.findViewById(R.id.rl_attach_pic_l);
        this.mIvThumbPic = (ImageView) this.mItemLeft.findViewById(R.id.iv_thumb_attach_pic_l);
        this.mPicCancel = (TextView) this.mItemLeft.findViewById(R.id.tv_attach_pic_cancel_l);
        this.mLlPicDownload = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_pic_download_l);
        this.mProgressBarPic = (ProgressBar) this.mItemLeft.findViewById(R.id.pb_attach_pic_l);
        this.mFmPicLayer = (FrameLayout) this.mItemLeft.findViewById(R.id.fm_thumb_attach_pic_l);
        this.mIvPlayVideoPic = (ImageView) this.mItemLeft.findViewById(R.id.ib_attach_pic_video_play_l);
        this.mTvProgressPic = (TextView) this.mItemLeft.findViewById(R.id.tv_progress_pic_l);
        this.mRlAttachVoice = (RelativeLayout) this.mItemLeft.findViewById(R.id.rl_attach_voice_l);
        this.mIbVoicePlayer = (ImageButton) this.mItemLeft.findViewById(R.id.ib_play_l);
        this.mTvDuration = (TextView) this.mItemLeft.findViewById(R.id.tv_duration_l);
        this.mSbPlayback = (SeekBar) this.mItemLeft.findViewById(R.id.sb_playback_l);
        this.mProgressBarVoice = (ProgressBar) this.mItemLeft.findViewById(R.id.pb_voice_l);
        this.mIbVoiceDownload = (ImageButton) this.mItemLeft.findViewById(R.id.iv_voice_download_l);
        this.mIbVoiceCancelDownload = (ImageButton) this.mItemLeft.findViewById(R.id.iv_voice_cancel_l);
        this.mTvVoiceStream = (TextView) this.mItemLeft.findViewById(R.id.tv_stream_voice);
        this.mLlVoiceStreamButton = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_left_flank_l);
        this.mLlQuote = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_quote_l);
        this.mTvQuoteName = (TextView) this.mItemLeft.findViewById(R.id.tv_quote_name_l);
        this.mTvQuote = (TextView) this.mItemLeft.findViewById(R.id.tv_quote_l);
        this.mLlFizzlinkContainer = (LinearLayout) this.mItemLeft.findViewById(R.id.ll_fizzlink);
        this.mIvFizzIcon = (ImageView) this.mItemLeft.findViewById(R.id.iv_fizz_icon);
        this.mTvFizzTitle = (TextView) this.mItemLeft.findViewById(R.id.tv_fizz_title);
        this.mTvFizzDesc = (TextView) this.mItemLeft.findViewById(R.id.tv_fizz_desc);
        this.mTvName.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mSbPlayback.setClickable(false);
        setOnClickListener(this);
        setOnLongClickListener(this.mOnLongClick);
        this.mIvThumbPic.setOnLongClickListener(this.mOnLongClick);
        this.mLlAttachFile.setOnLongClickListener(this.mOnLongClick);
        this.mLlFizzlinkContainer.setOnLongClickListener(this.mOnLongClick);
        this.mIbVoicePlayer.setOnClickListener(this);
        this.mIvThumbPic.setOnClickListener(this);
        this.mSbPlayback.setClickable(false);
        this.mPicCancel.setOnClickListener(this);
        this.mLlPicDownload.setOnClickListener(this);
        this.mLlAttachFile.setOnClickListener(this);
        this.mFileCancel.setOnClickListener(this);
        this.mFileDownload.setOnClickListener(this);
        this.mIbVoiceDownload.setOnClickListener(this);
        this.mIbVoiceCancelDownload.setOnClickListener(this);
        this.mIvPlayVideoPic.setOnClickListener(this);
        this.mTvReadMore.setOnClickListener(this);
        this.mRivProfPic.setOnClickListener(this);
        this.mLlFizzlinkContainer.setOnClickListener(this);
        this.mLlVoiceStreamButton.setOnClickListener(this);
        BUBBLE_IMAGE_WIDTH_NORMAL = (int) context.getResources().getDimension(R.dimen.bubble_thumbnail_dimen_normal);
        BUBBLE_IMAGE_HEIGHT_PORTRAIT = (int) context.getResources().getDimension(R.dimen.bubble_image_height_portrait);
        BUBBLE_IMAGE_HEIGHT_LANDSCAPE = (int) context.getResources().getDimension(R.dimen.bubble_image_height_lansdcape);
    }

    private boolean getPendingDownloadState() {
        return this.mMsg.getDeliveryStatus() == MessageDeliveryStatus.CONFRCPENDINGDOWNLOAD.ordinal() || this.mMsg.getDeliveryStatus() == MessageDeliveryStatus.CONFRCFAILDOWNLOAD.ordinal() || this.mMsg.getDeliveryStatus() == MessageDeliveryStatus.CONFRCDOWNLOADING.ordinal();
    }

    private void hideShowTvChat(String str) {
        FileMetaInfo metaInfoBuilder = FileMetaInfo.metaInfoBuilder(str);
        if (metaInfoBuilder != null) {
            str = metaInfoBuilder.getCaption();
        }
        if (str.equals("") || str.isEmpty() || str.equals("\n") || str.equals(" ")) {
            this.mTvChat.setVisibility(8);
        } else {
            this.mTvChat.setVisibility(0);
            Log.d(TAG, "hideShowTvChat: Message Key: " + this.mMessageKey + ", text: " + str);
            this.mTvChat.setText(SmiledText.getSmiledText(this.mContext, this.mMessageKey, str, this.mTvChat));
            CFLinkify.addLinks(this.mTvChat, CFLinkify.NIC | 7);
            if (this.mbFitChatToThumbnail) {
                this.mTvChat.setLayoutParams(new LayoutParams(-1, -2));
            } else {
                this.mTvChat.setLayoutParams(new LayoutParams(-2, -2));
            }
        }
        this.mTvDay.setVisibility(0);
    }

    private void parseUndownloadedMessageCaption() {
        if (this.mMsg.getDeliveryStatus() != MessageDeliveryStatus.BCASTRECEIVED.ordinal()) {
            try {
                String dataFilePath = this.mMsg.getDataFilePath();
                dataFilePath = dataFilePath.substring(dataFilePath.lastIndexOf(":") + 1);
                if (dataFilePath != null) {
                    try {
                        dataFilePath = dataFilePath.replace(new String(PoolDataUploadExecutor.messageCharSubstitute, HTTP.UTF_8), ":");
                    } catch (UnsupportedEncodingException e) {
                    }
                }
                hideShowTvChat(dataFilePath);
            } catch (StringIndexOutOfBoundsException e2) {
                this.mTvChat.setVisibility(8);
            }
        }
    }

    private void processAttachedMessage(int i, String str) {
        Log.d(TAG, "processAttachedMessage:" + i + "_" + str);
        int deliveryStatus = this.mMsg.getDeliveryStatus();
        boolean pendingDownloadState = getPendingDownloadState();
        int progressUploaded = this.mMsg.getProgressUploaded();
        Log.d(TAG, "processAttachedMessage progress:" + deliveryStatus + "_" + progressUploaded);
        String str2;
        switch (i) {
            case e.c /*2*/:
                setViewAttachPhoto(str);
                str2 = "";
                str2 = (str.contains("file://") ? str : "file://" + str).replaceAll(" ", "%20");
                if (!(this.mThumbnailLoader == null || str.isEmpty())) {
                    this.mThumbnailLoader.loadImage((Object) str2, this.mIvThumbPic, true);
                }
                if (this.mChatViewType == 2) {
                    Log.d(TAG, "downloadInProgress : " + pendingDownloadState + "progress : " + progressUploaded);
                    if (pendingDownloadState && progressUploaded <= 0) {
                        this.mFmPicLayer.setForeground(new ColorDrawable(R.color.transparent));
                        this.mLlPicDownload.setVisibility(0);
                        this.mPicCancel.setVisibility(8);
                        this.mProgressBarPic.setVisibility(8);
                        this.mTvProgressPic.setVisibility(8);
                        this.mTvProgressPic.setText("0%");
                    } else if (pendingDownloadState && progressUploaded == 1) {
                        this.mProgressBarPic.setVisibility(0);
                        this.mProgressBarPic.setIndeterminate(true);
                        this.mTvProgressPic.setVisibility(0);
                        this.mPicCancel.setVisibility(0);
                        this.mLlPicDownload.setVisibility(8);
                        this.mFmPicLayer.setForeground(new ColorDrawable(R.color.transparent));
                    } else if (!pendingDownloadState || progressUploaded > 100 || progressUploaded <= 1) {
                        this.mProgressBarPic.setVisibility(8);
                        this.mTvProgressPic.setVisibility(8);
                        this.mLlPicDownload.setVisibility(8);
                        this.mPicCancel.setVisibility(8);
                        this.mFmPicLayer.setForeground(null);
                    } else {
                        this.mProgressBarPic.setVisibility(0);
                        this.mTvProgressPic.setVisibility(0);
                        this.mTvProgressPic.setText(progressUploaded + "%");
                        this.mProgressBarPic.setIndeterminate(false);
                        this.mProgressBarPic.setProgress(progressUploaded);
                        this.mPicCancel.setVisibility(0);
                        this.mLlPicDownload.setVisibility(8);
                        this.mFmPicLayer.setForeground(new ColorDrawable(R.color.transparent));
                    }
                }
                str2 = "";
                if (this.mChatViewType == 1) {
                    str2 = this.mMsg.getImageFilePath();
                    this.mLlPicDownload.setVisibility(8);
                } else {
                    str2 = this.mMsg.getDataFilePath();
                }
                switch (Utils.getFileTypeFromPath(str2)) {
                    case SimpleLog.LOG_LEVEL_FATAL /*6*/:
                        this.mIvPlayVideoPic.setVisibility(0);
                        return;
                    default:
                        this.mIvPlayVideoPic.setVisibility(8);
                        return;
                }
            case HttpRouteDirector.TUNNEL_TARGET /*3*/:
            case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                setViewAttachFileOrVideo();
                updateIconFileThumb(str);
                String text = this.mMsg.getText();
                CharSequence string = this.mContext.getString(R.string.file_processed);
                str2 = this.mContext.getString(R.string.three_dot);
                if (FileMetaInfo.isFileMetaInfoValid(text)) {
                    FileMetaInfo metaInfoBuilder = FileMetaInfo.metaInfoBuilder(text);
                    string = metaInfoBuilder.getFileName();
                    str2 = metaInfoBuilder.getFileSize();
                }
                this.mTvFileName.setText(string);
                boolean z = deliveryStatus == MessageDeliveryStatus.BCASTRECEIVED.ordinal() || deliveryStatus == MessageDeliveryStatus.RECEIVED.ordinal();
                if (z) {
                    this.mTvFileSize.setText(str2 + " " + this.mContext.getResources().getString(R.string.tap_openfile));
                } else {
                    this.mTvFileSize.setText(this.mContext.getResources().getString(R.string.tap_download));
                }
                if (this.mChatViewType == 2) {
                    if (pendingDownloadState && progressUploaded <= 0) {
                        this.mProgressBarFile.setVisibility(8);
                        this.mTvProgressFile.setVisibility(8);
                        this.mFileDownload.setVisibility(0);
                        this.mFileCancel.setVisibility(8);
                        this.mCancelDownloadHelper.setVisibility(4);
                    } else if (pendingDownloadState && progressUploaded == 1) {
                        this.mProgressBarFile.setVisibility(0);
                        this.mProgressBarFile.setIndeterminate(true);
                        this.mTvProgressFile.setVisibility(0);
                        this.mTvProgressFile.setText("0%");
                        this.mFileCancel.setVisibility(0);
                        this.mFileDownload.setVisibility(8);
                        this.mCancelDownloadHelper.setVisibility(4);
                    } else if (!pendingDownloadState || progressUploaded > 100 || progressUploaded <= 1) {
                        this.mProgressBarFile.setVisibility(8);
                        this.mTvProgressFile.setVisibility(8);
                        this.mFileCancel.setVisibility(8);
                        if (z) {
                            this.mFileDownload.setVisibility(8);
                            this.mCancelDownloadHelper.setVisibility(8);
                        } else {
                            this.mFileDownload.setVisibility(0);
                            this.mCancelDownloadHelper.setVisibility(4);
                        }
                    } else {
                        this.mProgressBarFile.setVisibility(0);
                        this.mProgressBarFile.setIndeterminate(false);
                        this.mProgressBarFile.setProgress(progressUploaded);
                        this.mTvProgressFile.setVisibility(0);
                        this.mTvProgressFile.setText(progressUploaded + "%");
                        this.mFileCancel.setVisibility(0);
                        this.mFileDownload.setVisibility(8);
                        this.mCancelDownloadHelper.setVisibility(4);
                    }
                    if (deliveryStatus != MessageDeliveryStatus.BCASTRECEIVED.ordinal()) {
                        this.mTvFileName.setText(this.mMsg.getText());
                        updateIconFileThumb(this.mMsg.getText());
                        parseUndownloadedMessageCaption();
                        return;
                    }
                    return;
                }
                return;
            case HttpRouteDirector.LAYER_PROTOCOL /*5*/:
                setViewAttachVoice();
                if (this.mChatViewType != 2) {
                    this.mSbPlayback.setVisibility(0);
                    this.mIbVoicePlayer.setVisibility(0);
                    this.mProgressBarVoice.setVisibility(8);
                    this.mIbVoiceDownload.setVisibility(8);
                    this.mIbVoiceCancelDownload.setVisibility(8);
                    this.mTvDuration.setVisibility(0);
                    this.mTvDuration.setText(AlbusAudioPlayer.getDurationFromAudioFile(this.mContext, str));
                    this.mIbVoicePlayer.setImageResource(R.drawable.ic_play_dark);
                    this.mSbPlayback.setProgress(0);
                    return;
                } else if (pendingDownloadState && progressUploaded <= 0) {
                    this.mSbPlayback.setVisibility(8);
                    this.mIbVoicePlayer.setVisibility(0);
                    this.mProgressBarVoice.setVisibility(8);
                    this.mTvVoiceStream.setVisibility(0);
                    this.mIbVoiceDownload.setVisibility(0);
                    this.mIbVoiceCancelDownload.setVisibility(8);
                    this.mTvDuration.setVisibility(8);
                    this.mIbVoicePlayer.setImageResource(R.drawable.ic_play_dark);
                    return;
                } else if (pendingDownloadState && progressUploaded == 1) {
                    this.mSbPlayback.setVisibility(8);
                    this.mIbVoicePlayer.setVisibility(8);
                    this.mProgressBarVoice.setVisibility(0);
                    this.mProgressBarVoice.setIndeterminate(true);
                    this.mTvVoiceStream.setVisibility(8);
                    this.mIbVoiceDownload.setVisibility(8);
                    this.mIbVoiceCancelDownload.setVisibility(0);
                    this.mTvDuration.setVisibility(0);
                    this.mTvDuration.setText("0%");
                    return;
                } else if (!pendingDownloadState || progressUploaded > 100 || progressUploaded <= 1) {
                    this.mSbPlayback.setVisibility(0);
                    this.mIbVoicePlayer.setVisibility(0);
                    this.mProgressBarVoice.setVisibility(8);
                    this.mTvVoiceStream.setVisibility(8);
                    this.mIbVoiceDownload.setVisibility(8);
                    this.mIbVoiceCancelDownload.setVisibility(8);
                    this.mTvDuration.setVisibility(0);
                    this.mTvDuration.setText(AlbusAudioPlayer.getDurationFromAudioFile(this.mContext, str));
                    this.mIbVoicePlayer.setImageResource(R.drawable.ic_play_dark);
                    this.mSbPlayback.setProgress(0);
                    return;
                } else {
                    this.mSbPlayback.setVisibility(8);
                    this.mIbVoicePlayer.setVisibility(8);
                    this.mProgressBarVoice.setVisibility(0);
                    this.mProgressBarVoice.setIndeterminate(false);
                    this.mProgressBarVoice.setProgress(progressUploaded);
                    this.mTvVoiceStream.setVisibility(8);
                    this.mIbVoiceDownload.setVisibility(8);
                    this.mIbVoiceCancelDownload.setVisibility(0);
                    this.mTvDuration.setVisibility(0);
                    this.mTvDuration.setText(progressUploaded + "%");
                    return;
                }
            default:
                return;
        }
    }

    private void updateIconFileThumb(String str) {
        this.mIvThumbFile.setImageResource(AlbusUtils.getIconFileThumb(str));
    }

    public void additionalProcess() {
        if (this.mChatViewType == 2) {
            int likeCount = this.mMsg.getLikeCount();
            if (likeCount > 0) {
                this.mLlLike.setVisibility(0);
                this.mTvLikeCount.setText("" + likeCount);
            } else {
                this.mLlLike.setVisibility(8);
            }
            if (this.mMsg.isUnread()) {
                this.mTvNewUnreadMsg.setText(this.mMsg.getUnreadMsgCount() + " " + this.mContext.getResources().getString(R.string.unread_messages));
                this.mLlNewUnreadMsg.setVisibility(0);
            }
        }
        switch (AnonymousClass3.$SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.values()[this.mMsg.getType()].ordinal()]) {
            case HttpRouteDirector.TUNNEL_TARGET /*3*/:
            case HttpRouteDirector.TUNNEL_PROXY /*4*/:
                this.mTvChat.setMaxLines(8);
                return;
            default:
                this.mTvChat.setMaxLines(ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED);
                LongMessageWorker.cancelPotentialWork(null, this.mTvChat);
                return;
        }
    }

    public void animateGif(View view) {
        if (view instanceof ImageView) {
            String dataFilePath = this.mMsg.getDataFilePath();
            if (dataFilePath != null && !dataFilePath.isEmpty() && Utils.getFileTypeFromPath(dataFilePath) == 1 && Utils.getExtension(dataFilePath).equals(".gif")) {
                try {
                    Drawable drawable = ((ImageView) view).getDrawable();
                    if (drawable != null && (drawable instanceof GifDrawable)) {
                        GifDrawable gifDrawable = (GifDrawable) ((ImageView) view).getDrawable();
                        if (gifDrawable.isRunning()) {
                            gifDrawable.stop();
                        }
                        gifDrawable.recycle();
                    }
                    drawable = new GifDrawable(dataFilePath);
                    ((ImageView) view).setImageDrawable(drawable);
                    drawable.reset();
                    drawable.start();
                    drawable.addAnimationListener(new AnimateGifListener(drawable));
                } catch (OutOfMemoryError e) {
                } catch (IOException e2) {
                    e2.printStackTrace();
                }
            }
        }
    }

    public void hideAllViewAttach() {
        this.mLlAttachPic.setVisibility(8);
        this.mLlAttachContact.setVisibility(8);
        this.mLlAttachFile.setVisibility(8);
        this.mRlAttachVoice.setVisibility(8);
    }

    public void onAttachImage() {
        File thumbStream;
        Log.d(TAG, "onAttachImage(), text:" + this.mMsg.getText());
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mVideoPlayer.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mbFitChatToThumbnail = true;
        String str = "";
        Log.d(TAG, "on attach image chat: " + this.mMsg.getSlink());
        if (this.mMsg.getStreamThumbnailStatus() == 1) {
            thumbStream = CatfishPhotoStorage.getThumbStream(this.mContext, this.mMsg.getSlink());
        } else {
            if (this.mMsg.getStreamThumbnailStatus() == 0) {
                ((ChatGroupConvActivity) this.mContext).streamThumbnailDownload(this.mMsg.getSlink());
            }
            thumbStream = null;
        }
        String text = this.mChatViewType != 1 ? this.mMsg.getText() : str;
        if (thumbStream != null) {
            processAttachedMessage(2, thumbStream.getAbsolutePath());
            if (this.mChatViewType == 2) {
                hideShowTvChat(text.split("\n")[0]);
            } else {
                hideShowTvChat(this.mMsg.getText());
            }
        }
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
    }

    public void onAttachMsg() {
        int i = 0;
        Log.d(TAG, "onAttachMsg(), text:" + this.mMsg.getText() + ", slink: " + this.mMsg.getSlink());
        Log.d(TAG, "onAttachMsg(), datafilepath:" + this.mMsg.getDataFilePath());
        Log.d(TAG, "onAttachMsg(), delivery status:" + MessageDeliveryStatus.values()[this.mMsg.getDeliveryStatus()]);
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mVideoPlayer.setVisibility(8);
        this.mTvDay.setVisibility(0);
        String str = "";
        String str2 = null;
        int poolDataType = this.mMsg.getPoolDataType();
        str = this.mChatViewType == 1 ? this.mMsg.getDataFilePath() : this.mMsg.getText();
        FileMetaInfo metaInfoBuilder = FileMetaInfo.metaInfoBuilder(str);
        if (metaInfoBuilder != null) {
            str2 = Utils.getExtension(metaInfoBuilder.getFileName());
        }
        if (str2 == null) {
            str2 = Utils.getExtension(this.mMsg.getVoiceFilePath());
        }
        if (str2 == null) {
            str2 = Utils.getExtension(this.mMsg.getDataFilePath());
        }
        if (str2 == null) {
            str2 = Utils.getExtension(this.mMsg.getImageFilePath());
        }
        if (str2 == null && this.mChatViewType == 2) {
            str2 = Utils.getExtension(str);
        }
        if (str2 == null) {
            str2 = "";
        }
        Log.d(TAG, "Datatype: " + poolDataType + ", ext: " + str2);
        if (this.mChatViewType == 1 && !this.mMsg.getSlink().isEmpty()) {
            i = 1;
        }
        if (i == 0 && this.mChatViewType == 2 && this.mMsg.getDeliveryStatus() == MessageDeliveryStatus.BCASTRECEIVED.ordinal()) {
            i = 1;
        }
        if (i != 0) {
            if (!this.mMsg.getVoiceFilePath().isEmpty() || str2.contains(".amr") || poolDataType == 5) {
                Log.d(TAG, "on attach voice chat");
                str = this.mMsg.getVoiceFilePath();
                if (str.isEmpty()) {
                    str = this.mMsg.getDataFilePath();
                }
                if (!str.isEmpty()) {
                    processAttachedMessage(5, str);
                    this.mTvChat.setVisibility(8);
                }
            } else if (!(this.mMsg.getImageFilePath().isEmpty() && this.mMsg.getImageThumbURI().isEmpty() && this.mMsg.getDataFilePath().isEmpty()) && Utils.getFileTypeFromExtension(str2) == 1) {
                Log.d(TAG, "on attach image chat");
                str2 = this.mMsg.getImageThumbURI();
                if (str2.isEmpty()) {
                    str2 = this.mMsg.getDataFilePath();
                }
                if (!str2.isEmpty()) {
                    processAttachedMessage(2, str2);
                    if (this.mChatViewType == 2) {
                        hideShowTvChat(str);
                    } else {
                        hideShowTvChat(this.mMsg.getText());
                    }
                }
            } else if (this.mMsg.getDataFilePath().isEmpty() || Utils.getFileTypeFromExtension(str2) != 6) {
                Log.d(TAG, "on attach file chat");
                str2 = this.mMsg.getDataFilePath();
                if (!str2.isEmpty()) {
                    processAttachedMessage(4, str2);
                }
                if (this.mChatViewType == 2) {
                    hideShowTvChat(str);
                } else {
                    hideShowTvChat(this.mMsg.getText());
                }
            } else {
                Log.d(TAG, "on attach video chat");
                str2 = this.mMsg.getDataFilePath();
                if (!str2.isEmpty()) {
                    processAttachedMessage(3, str2);
                    if (this.mChatViewType == 2) {
                        hideShowTvChat(str);
                    } else {
                        hideShowTvChat(this.mMsg.getText());
                    }
                }
            }
        } else if (!(this.mMsg.getImageFilePath().isEmpty() && this.mMsg.getImageThumbURI().isEmpty() && this.mMsg.getDataFilePath().isEmpty()) && Utils.getFileTypeFromExtension(str2) == 1) {
            Log.d(TAG, "undisplayed: Image Attach");
            processAttachedMessage(2, CatfishPhotoStorage.mPoolThumbnailPath + this.mMsg.getSequence());
            parseUndownloadedMessageCaption();
        } else if (!this.mMsg.getVoiceFilePath().isEmpty() || str2.contains(".amr") || poolDataType == 5) {
            Log.d(TAG, "undisplayed: Image Attach");
            str = this.mMsg.getDataFilePath();
            if (!str.isEmpty()) {
                processAttachedMessage(5, str);
                this.mTvChat.setVisibility(8);
            }
        } else if (this.mMsg.getDataFilePath().isEmpty() || Utils.getFileTypeFromExtension(str2) != 6) {
            str = this.mMsg.getDataFilePath();
            if (!str.isEmpty()) {
                processAttachedMessage(4, str);
            }
        } else {
            str = this.mMsg.getDataFilePath();
            if (!str.isEmpty()) {
                processAttachedMessage(3, str);
            }
        }
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
    }

    public void onAttachVideo() {
        Log.d(TAG, "onAttachVideo(), text:" + this.mMsg.getText());
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mVideoPlayer.setVisibility(0);
        this.mLlFizzlinkContainer.setVisibility(8);
        this.mbFitChatToThumbnail = true;
        Log.d(TAG, "call again but not refresh thumbnail");
        Fizzlink fizzlink = this.mMsg.getFizzlink();
        boolean z = false;
        try {
            z = new File(fizzlink.getFilePath()).exists();
        } catch (NullPointerException e) {
        }
        if (fizzlink.isDownloaded() && r0) {
            this.mVideoPlayer.setParams(fizzlink.getFilePath(), this.mMsg.getSequence(), this.mRoomName, fizzlink.getSenderName(), fizzlink.getDescription(), false);
        } else {
            this.mVideoPlayer.setParamsStream(this.mMsg, this.mMsg.getSlink(), this.mMsg.getSequence(), this.mRoomName, fizzlink.getSenderName(), fizzlink.getDescription(), false);
            int progressUploadDownloadState = this.mMsg.getProgressUploadDownloadState();
            int progressUploaded = this.mMsg.getProgressUploaded();
            Log.d(TAG, "progresss : " + this.mMsg.getSequence() + "state" + progressUploadDownloadState + "progresss : " + progressUploaded);
            if (progressUploadDownloadState == 1) {
                this.mVideoPlayer.setProgress(progressUploaded, progressUploadDownloadState);
            } else if (progressUploadDownloadState == 2) {
                Log.d(TAG, "progresss : downloaded " + progressUploadDownloadState + " " + this.mMsg.getSequence() + "progresss : " + progressUploaded);
                this.mVideoPlayer.setProgress(progressUploaded, progressUploadDownloadState);
                this.mVideoPlayer.setFilePath(fizzlink.getFilePath());
            } else if (progressUploadDownloadState == 3 || progressUploadDownloadState == 4) {
                this.mVideoPlayer.setUnDownloaded(false);
            }
        }
        Log.d(TAG, "slink video :" + this.mMsg.getSlink());
        Log.d(TAG, "slink video thumbnail status :" + this.mMsg.getStreamThumbnailStatus());
        if (this.mMsg.getStreamThumbnailStatus() == 1) {
            File thumbStream = CatfishPhotoStorage.getThumbStream(this.mContext, this.mMsg.getSlink());
            if (thumbStream != null) {
                this.mVideoPlayer.setThumbnail(thumbStream.getAbsolutePath());
            } else {
                this.mVideoPlayer.setThumbnail(null);
            }
        } else if (this.mMsg.getStreamThumbnailStatus() == 0) {
            this.mVideoPlayer.setThumbnail(null);
            ((ChatGroupConvActivity) this.mContext).streamThumbnailDownload(this.mMsg.getSlink());
        }
        if (getPendingDownloadState()) {
            try {
                String dataFilePath = this.mMsg.getDataFilePath();
                String[] split = dataFilePath.split(":");
                Log.d(TAG, "Not downloaded " + dataFilePath + " " + split.length);
                if (split.length < 5) {
                    this.mTvChat.setVisibility(8);
                } else {
                    parseUndownloadedMessageCaption();
                }
            } catch (StringIndexOutOfBoundsException e2) {
            }
        } else {
            hideShowTvChat(this.mMsg.getText());
        }
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
    }

    public void onBroadcastMsg() {
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(0);
        this.mIvStatus.setImageResource(R.drawable.ic_broadcast);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mbFitChatToThumbnail = false;
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.white_opaque));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.white_opaque));
        hideShowTvChat(this.mMsg.getText());
    }

    public void onBroadcastVoiceMsg() {
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(0);
        this.mIvStatus.setImageResource(R.drawable.ic_broadcast);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mVideoPlayer.setVisibility(8);
        this.mbFitChatToThumbnail = false;
        if (this.mMsg.getVoiceFilePath().isEmpty()) {
            Log.d(TAG, "No Voice");
            hideAllViewAttach();
        } else {
            Log.d(TAG, "Has Voice=" + this.mMsg.getVoiceFilePath());
            processAttachedMessage(5, this.mMsg.getVoiceFilePath());
        }
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.white_opaque));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.white_opaque));
        hideShowTvChat(this.mMsg.getText());
    }

    public void onClick(View view) {
        Log.d(TAG, "onClick:" + view.getId());
        if (getId() != view.getId() || getId() == 0) {
            String dataFilePath;
            switch (view.getId()) {
                case R.id.riv_img_l:
                    if (!this.mIsOfficial) {
                        this.mItemClickListener.onProfilePicClicked(this.mMsg);
                        return;
                    }
                    return;
                case R.id.ll_attach_file_l:
                    if (getPendingDownloadState()) {
                        this.mItemClickListener.onAttachDownloadClicked(this.mMsg);
                        return;
                    } else {
                        this.mItemClickListener.onAttachFileClicked(this.mMsg);
                        return;
                    }
                case R.id.iv_attach_file_download_l:
                    this.mItemClickListener.onAttachDownloadClicked(this.mMsg);
                    return;
                case R.id.iv_attach_file_cancel_l:
                    Log.d(TAG, "on file cancel download");
                    this.mItemClickListener.onAttachCancelClicked(this.mMsg, 2);
                    this.mFileDownload.setVisibility(0);
                    this.mFileCancel.setVisibility(8);
                    this.mProgressBarFile.setVisibility(8);
                    this.mTvProgressFile.setVisibility(8);
                    return;
                case R.id.iv_thumb_attach_pic_l:
                case R.id.ib_attach_pic_video_play_l:
                    if (this.mChatViewType == 1) {
                        if (this.mMsg.getType() == MessageType.FIZZLINK_IMAGE.ordinal()) {
                            Log.d(TAG, "url of image is : " + this.mMsg.getFizzlink().getFilePath());
                            this.mItemClickListener.onAttachPicClicked(this.mMsg);
                            return;
                        }
                        dataFilePath = this.mMsg.getDataFilePath();
                        if (dataFilePath == null || dataFilePath.isEmpty()) {
                            this.mMsg.getImageFilePath();
                        }
                        this.mItemClickListener.onAttachPicClicked(this.mMsg);
                        return;
                    } else if (getPendingDownloadState()) {
                        this.mItemClickListener.onAttachDownloadClicked(this.mMsg);
                        return;
                    } else {
                        this.mItemClickListener.onAttachFileClicked(this.mMsg);
                        return;
                    }
                case R.id.tv_attach_pic_cancel_l:
                    this.mItemClickListener.onAttachCancelClicked(this.mMsg, 2);
                    return;
                case R.id.ll_pic_download_l:
                case R.id.iv_voice_download_l:
                    if (getPendingDownloadState()) {
                        this.mItemClickListener.onAttachDownloadClicked(this.mMsg);
                        return;
                    } else {
                        Log.w(TAG, "Download in progess");
                        return;
                    }
                case R.id.ll_fizzlink:
                    Log.d(TAG, "call onFizzlinkClicked: slink: " + this.mMsg.getSlink());
                    this.mItemClickListener.onFizzlinkClicked(this.mMsg);
                    return;
                case R.id.tv_read_more_l:
                    this.mTvReadMore.setVisibility(8);
                    if (this.mLongMessageWorker != null) {
                        this.mLongMessageWorker.loadMessage(String.valueOf(this.mMsg.getSequence()), this.mTvChat, true);
                        this.mTvChat.setMaxLines(ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED);
                        return;
                    }
                    return;
                case R.id.ll_left_flank_l:
                case R.id.ib_play_l:
                    final AlbusAudioPlayer audioPlayer = ((ChatGroupConvActivity) this.mContext).getAudioPlayer();
                    String slink = this.mMsg.getSlink();
                    dataFilePath = this.mMsg.getVoiceFilePath();
                    if (dataFilePath.isEmpty()) {
                        dataFilePath = this.mMsg.getDataFilePath();
                    }
                    Log.d(TAG, "Source Path=" + dataFilePath + ", slink: " + slink);
                    audioPlayer.setOnAudioStateChange(new onAudioStateChange() {
                        public void onAudioFinished(int i) {
                            audioPlayer.getDurationHandler().post(new Runnable() {
                                public void run() {
                                    ((ChatGroupConvActivity) ChatItemLeftView.this.mContext).refreshData();
                                }
                            });
                        }

                        public void onAudioPaused(int i) {
                            Log.d(ChatItemLeftView.TAG, "onAudioPaused:" + i);
                        }

                        public void onAudioPlaying(final int i, final int i2) {
                            audioPlayer.getDurationHandler().post(new Runnable() {
                                public void run() {
                                    ChatItemLeftView.this.mSbPlayback.setProgress(i2);
                                    ChatItemLeftView.this.mTvDuration.setText(AlbusUtils.milliSecondsToTimer((long) (i - i2)));
                                    if (ChatItemLeftView.this.getPendingDownloadState()) {
                                        ChatItemLeftView.this.mTvDuration.setVisibility(0);
                                        ChatItemLeftView.this.mProgressBarVoice.setVisibility(8);
                                        ChatItemLeftView.this.mSbPlayback.setVisibility(0);
                                        ChatItemLeftView.this.mIbVoiceDownload.setVisibility(8);
                                    }
                                }
                            });
                        }

                        public void onAudioPrepared(final int i) {
                            audioPlayer.getDurationHandler().post(new Runnable() {
                                public void run() {
                                    ChatItemLeftView.this.mIbVoicePlayer.setImageResource(R.drawable.ic_stop_dark);
                                    ChatItemLeftView.this.mSbPlayback.setMax(i);
                                    if (ChatItemLeftView.this.getPendingDownloadState()) {
                                        ChatItemLeftView.this.mTvDuration.setVisibility(8);
                                        ChatItemLeftView.this.mTvVoiceStream.setVisibility(8);
                                        ChatItemLeftView.this.mProgressBarVoice.setVisibility(0);
                                        ChatItemLeftView.this.mProgressBarVoice.setIndeterminate(true);
                                        ChatItemLeftView.this.mSbPlayback.setVisibility(8);
                                        ChatItemLeftView.this.mIbVoiceDownload.setVisibility(8);
                                    }
                                }
                            });
                        }

                        public void onAudioStoped(int i, int i2) {
                            audioPlayer.getDurationHandler().post(new Runnable() {
                                public void run() {
                                    ((ChatGroupConvActivity) ChatItemLeftView.this.mContext).refreshData();
                                }
                            });
                        }
                    });
                    if (audioPlayer.getPlaying()) {
                        audioPlayer.Stop();
                        if (audioPlayer.getLastPlayedID() != this.mMsg.getSequence()) {
                            audioPlayer.setLastPlayedID(this.mMsg.getSequence());
                            audioPlayer.setDataSouce(dataFilePath);
                            audioPlayer.setFizzlink(slink);
                            audioPlayer.Play();
                            return;
                        }
                        return;
                    }
                    audioPlayer.setLastPlayedID(this.mMsg.getSequence());
                    audioPlayer.setDataSouce(dataFilePath);
                    audioPlayer.setFizzlink(slink);
                    audioPlayer.Play();
                    return;
                case R.id.iv_voice_cancel_l:
                    this.mItemClickListener.onAttachCancelClicked(this.mMsg, 1);
                    return;
                default:
                    return;
            }
        }
        this.mItemClickListener.onItemChatClicked(this.mMsg);
    }

    public void onContactMsg() {
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mVideoPlayer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mLlAttachContact.setVisibility(0);
        this.mTvDay.setVisibility(0);
        this.mbFitChatToThumbnail = false;
        List listUsersFromJSON = AlbusUtils.getListUsersFromJSON(this.mMsg.getText());
        if (this.mUserPhotoLoader == null) {
            Log.d(TAG, "onContactMsg(), mUserPhotoLoader = null");
        } else if (listUsersFromJSON.size() >= 4) {
            this.mRivSingleContactPic.setVisibility(8);
            this.mRlAttachMultiContact.setVisibility(0);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(0)).getId(), this.mRivContactPicTopLeft);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(1)).getId(), this.mRivContactPicTopRight);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(2)).getId(), this.mRivContactPicBottomLeft);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(3)).getId(), this.mRivContactPicBottomRight);
        } else if (listUsersFromJSON.size() == 3) {
            this.mRivSingleContactPic.setVisibility(8);
            this.mRlAttachMultiContact.setVisibility(0);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(0)).getId(), this.mRivContactPicTopLeft);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(1)).getId(), this.mRivContactPicTopRight);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(2)).getId(), this.mRivContactPicBottomLeft);
        } else if (listUsersFromJSON.size() == 2) {
            this.mRivSingleContactPic.setVisibility(8);
            this.mRlAttachMultiContact.setVisibility(0);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(0)).getId(), this.mRivContactPicTopLeft);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(1)).getId(), this.mRivContactPicTopRight);
        } else if (listUsersFromJSON.size() == 1) {
            this.mRivSingleContactPic.setVisibility(0);
            this.mRlAttachMultiContact.setVisibility(8);
            this.mUserPhotoLoader.loadFriendPhoto(((User) listUsersFromJSON.get(0)).getId(), this.mRivSingleContactPic);
        } else {
            Log.d(TAG, "onContactMsg(), users size = 0");
        }
        this.mTvContactName.setText(this.mContext.getResources().getString(R.string.msg_attach_contact_recv));
        this.mTvContactMsg.setText(this.mContext.getResources().getString(R.string.msg_attach_view_multi_contact));
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
        this.mTvChat.setVisibility(8);
    }

    public void onFizzlinkMsg() {
        String slinkFromJson;
        this.mLlAttachContainer.setVisibility(0);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mLlFizzlinkContainer.setVisibility(0);
        this.mVideoPlayer.setVisibility(8);
        this.mTvReadMore.setVisibility(8);
        this.mbFitChatToThumbnail = true;
        Log.d(TAG, "onFizzlinkMsg: slink: " + this.mMsg.getSlink() + ", message: " + this.mMsg.getText());
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
        this.mTvChat.setVisibility(0);
        this.mTvReadMore.setVisibility(8);
        if (AlbusUtils.getSlinkFromJson(this.mMsg.getText(), ServerMessageDataStorage.SLINK) == null) {
            hideShowTvChat(this.mContext.getString(R.string.upload_fizzlink));
        } else {
            slinkFromJson = AlbusUtils.getSlinkFromJson(this.mMsg.getText(), ServerMessageDataStorage.MESSAGE);
            if (slinkFromJson == null || slinkFromJson.compareTo("") == 0) {
                this.mTvChat.setVisibility(8);
            } else {
                hideShowTvChat(slinkFromJson);
            }
        }
        slinkFromJson = AlbusUtils.getSlinkFromJson(this.mMsg.getText(), "filesize");
        Log.d(TAG, "fizzlink size from json :" + slinkFromJson);
        if (slinkFromJson == null || slinkFromJson.equals("0")) {
            slinkFromJson = this.mMsg.getFizzlink().getDataSize() + "";
            Log.d(TAG, "fizzlink size from fizzlink:" + slinkFromJson);
        }
        String slinkFromJson2 = AlbusUtils.getSlinkFromJson(this.mMsg.getText(), FriendListDataStorage.FILENAME);
        CharSequence replace = (slinkFromJson2 == null || slinkFromJson2.isEmpty()) ? "" : slinkFromJson2.replace("%20", " ");
        this.mTvFizzTitle.setText(replace);
        this.mTvFizzDesc.setText(slinkFromJson + " - Fizzlink");
        slinkFromJson = AlbusUtils.getSlinkFromJson(this.mMsg.getText(), TaskDataStorage.FILE_PATH);
        if (slinkFromJson != null) {
            this.mIvFizzIcon.setImageResource(AlbusUtils.getIconFileThumb(slinkFromJson));
        }
    }

    public void onNormalMsg(boolean z) {
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mbFitChatToThumbnail = false;
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
        this.mTvChat.setVisibility(0);
        if (z) {
            this.mTvReadMore.setVisibility(0);
        } else {
            this.mTvReadMore.setVisibility(8);
        }
        hideShowTvChat(this.mMsg.getText());
    }

    public void onPingMsg() {
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(0);
        this.mIvStatus.setImageResource(R.drawable.ic_blitz);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mbFitChatToThumbnail = false;
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
        this.mTvChat.setVisibility(0);
        this.mTvChat.setText(this.mContext.getResources().getString(R.string.blitz));
    }

    public void onPoolContactMsg() {
        this.mTvReadMore.setVisibility(8);
        this.mLlAttachContainer.setVisibility(0);
        this.mVideoPlayer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mLlAttachContact.setVisibility(0);
        this.mTvDay.setVisibility(0);
        this.mbFitChatToThumbnail = false;
        String text = this.mMsg.getText();
        String str = text.split(":")[0];
        CharSequence substring = text.substring(text.indexOf(":") + 1);
        boolean z = str.equals(CatfishService.getUserPIN()) ? false : Catfiz.matchFriendData(str) != null ? true : true;
        if (z) {
            this.mRivSingleContactPic.setVisibility(0);
            this.mRivSingleContactPic.setImageBitmap(CatfishPhotoStorage.getPromotedFriendProfilePhotoBitmapInPool(this.mContext, str));
            if (z) {
                this.mTvContactMsg.setText(this.mContext.getResources().getString(R.string.pool_msg_attach_view_contact));
            } else if (z) {
                this.mTvContactMsg.setText(this.mContext.getResources().getString(R.string.pool_msg_attach_add_contact));
            }
        } else {
            this.mRivSingleContactPic.setVisibility(0);
            if (this.mUserPhotoLoader != null) {
                this.mUserPhotoLoader.loadUserPhoto(str, this.mRivSingleContactPic);
            }
            this.mTvContactMsg.setText(this.mContext.getResources().getString(R.string.pool_msg_attach_me_promoted));
        }
        this.mTvContactName.setText(substring);
        this.mTvChat.setVisibility(8);
    }

    public void onQuoteMsg() {
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(0);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mTvReadMore.setVisibility(8);
        this.mbFitChatToThumbnail = false;
        this.mTvChat.setTextColor(this.mContext.getResources().getColor(R.color.black87));
        this.mTvDay.setTextColor(this.mContext.getResources().getColor(R.color.transparent54));
        if (QuoteUtils.isQuoteMessage(this.mMsg.getText())) {
            Quote quoteJSONStringDecoder = QuoteUtils.quoteJSONStringDecoder(this.mMsg.getText());
            this.mTvQuoteName.setText(SmiledText.getSmiledText(this.mContext, quoteJSONStringDecoder.getSenderName(), this.mTvQuoteName));
            this.mTvQuote.setText(SmiledText.getSmiledText(this.mContext, '\"' + quoteJSONStringDecoder.getQuoteMessage() + '\"', this.mTvQuote));
            CFLinkify.addLinks(this.mTvQuote, CFLinkify.NIC | 7);
            hideShowTvChat(quoteJSONStringDecoder.getMyMessage());
            return;
        }
        this.mLlQuote.setVisibility(8);
        hideShowTvChat(this.mMsg.getText());
    }

    public void onStickerMsg() {
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(8);
        this.mLlSticker.setVisibility(0);
        Log.d(TAG, String.valueOf(this.mLlSticker.getVisibility()));
        this.mTvChat.setVisibility(8);
        this.mTvDay.setVisibility(0);
        this.mTvReadMore.setVisibility(8);
        this.mbFitChatToThumbnail = false;
    }

    public void onWritingMsg() {
        this.mLlAttachContainer.setVisibility(8);
        this.mLlQuote.setVisibility(8);
        this.mIvStatus.setVisibility(8);
        this.mIvStatusTyping.setVisibility(0);
        this.mLlSticker.setVisibility(8);
        this.mTvReadMore.setVisibility(8);
        this.mTvChat.setVisibility(8);
        this.mTvDay.setVisibility(8);
    }

    public void setOnItemLeftClickListener(OnItemLeftClickListener onItemLeftClickListener) {
        this.mItemClickListener = onItemLeftClickListener;
    }

    public void setOnItemLeftLongClickListener(OnItemLeftLongClickListener onItemLeftLongClickListener) {
        this.mItemLongClickListener = onItemLeftLongClickListener;
    }

    public void setParams(int i, boolean z, String str) {
        this.mChatViewType = i;
        this.mIsOfficial = z;
        this.mUserPhotoLoader = ((ChatGroupConvActivity) this.mContext).getUserPhotoLoader();
        this.mLongMessageWorker = ((ChatGroupConvActivity) this.mContext).getLongMessageWorker();
        this.mThumbnailLoader = ((ChatGroupConvActivity) this.mContext).getThumbnailLoader();
        this.mRoomName = str;
    }

    public void setSenderLayout(HashMap hashMap, int i) {
        switch (AnonymousClass3.$SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.values()[this.mMsg.getType()].ordinal()]) {
            case e.b /*1*/:
            case e.c /*2*/:
                if (hashMap.get(Integer.valueOf(i)) == null) {
                    this.mLlBgItemMsg.setBackgroundResource(R.drawable.bc_chat_left_onclick);
                    break;
                } else {
                    this.mLlBgItemMsg.setBackgroundResource(R.drawable.bg_bc_bubble_left);
                    break;
                }
            default:
                if (hashMap.get(Integer.valueOf(i)) == null) {
                    this.mLlBgItemMsg.setBackgroundResource(R.drawable.chat_left_onclick);
                    break;
                } else {
                    this.mLlBgItemMsg.setBackgroundResource(R.drawable.bg_msg_bubble_left_selected);
                    break;
                }
        }
        this.mTvDay.setText(AlbusUtils.getLastChatTimeActivities(this.mMsg.getTimeStamp(), this.mContext, true));
        if (this.mChatViewType == 1) {
            this.mTvName.setVisibility(8);
            this.mLlLike.setVisibility(8);
        } else {
            this.mTvName.setVisibility(0);
            this.mTvName.setText(SmiledText.getSmiledText(this.mContext, this.mNameKey, this.mMsg.getSender().getName(), this.mTvName));
        }
        if (this.mIsOfficial) {
            this.mRivProfPic.setImageResource(R.drawable.df_official_pict);
        } else if (this.mUserPhotoLoader != null) {
            this.mUserPhotoLoader.loadFriendPhoto(this.mMsg.getSender(), this.mRivProfPic);
        }
        this.mLlAttachContainer.setVisibility(8);
        this.mLlNewUnreadMsg.setVisibility(8);
        this.mTvChat.setVisibility(0);
        this.mLlFizzlinkContainer.setVisibility(8);
        hideAllViewAttach();
    }

    public void setTag(Message message) {
        super.setTag(message);
        this.mIbVoicePlayer.setTag(message);
        this.mIvThumbPic.setTag(message);
        this.mLlAttachFile.setTag(message);
        this.mLlFizzlinkContainer.setTag(message);
        this.mMsg = message;
        this.mNameKey = null;
        this.mMessageKey = null;
        if (this.mMsg != null && this.mMsg.getSender() != null && this.mMsg.getSequence() != 0) {
            User sender = this.mMsg.getSender();
            if (sender != null && sender.getId() != null) {
                this.mMessageKey = CacheKeys.convtextkey(sender.getId(), this.mMsg.getSequence());
                if (sender.getStatusSequence() != 0) {
                    this.mNameKey = CacheKeys.namekey(sender.getId(), sender.getStatusSequence());
                }
            }
        }
    }

    public void setViewAttachFileOrVideo() {
        this.mLlAttachPic.setVisibility(8);
        this.mRlAttachVoice.setVisibility(8);
        this.mLlAttachContact.setVisibility(8);
        this.mLlAttachFile.setVisibility(0);
        this.mbFitChatToThumbnail = false;
    }

    public void setViewAttachPhoto(String str) {
        this.mLlAttachPic.setVisibility(0);
        this.mRlAttachVoice.setVisibility(8);
        this.mLlAttachContact.setVisibility(8);
        this.mLlAttachFile.setVisibility(8);
        String str2 = "";
        if (str.contains("file://")) {
            str = str.replace("file://", "");
        }
        Options options = new Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(str, options);
        int i = options.outWidth;
        int i2 = options.outHeight;
        if (i > i2) {
            this.mRlAttachPic.setLayoutParams(new LayoutParams(BUBBLE_IMAGE_WIDTH_NORMAL, BUBBLE_IMAGE_HEIGHT_LANDSCAPE));
        } else if (i < i2) {
            this.mRlAttachPic.setLayoutParams(new LayoutParams(BUBBLE_IMAGE_WIDTH_NORMAL, BUBBLE_IMAGE_HEIGHT_PORTRAIT));
        } else if (i == i2) {
            this.mRlAttachPic.setLayoutParams(new LayoutParams(BUBBLE_IMAGE_WIDTH_NORMAL, BUBBLE_IMAGE_WIDTH_NORMAL));
        }
        this.mbFitChatToThumbnail = true;
    }

    public void setViewAttachVoice() {
        this.mLlAttachPic.setVisibility(8);
        this.mLlAttachContact.setVisibility(8);
        this.mLlAttachFile.setVisibility(8);
        this.mRlAttachVoice.setVisibility(0);
        if (this.mMsg.getType() == MessageType.BCASTVOICE.ordinal()) {
            this.mRlAttachVoice.setBackgroundResource(R.drawable.bg_attach_bc);
        } else {
            this.mRlAttachVoice.setBackgroundResource(R.drawable.bg_attach);
        }
        this.mbFitChatToThumbnail = false;
    }
}
