package com.albus.view;

import android.content.Context;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.net.Uri;
import android.os.Handler;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import com.catfiz.R;
import java.io.File;

public class MusicPlayerView extends LinearLayout {
    private final Handler handler = new Handler();
    private Context mContext;
    private ImageButton mIbPlay;
    private MediaPlayer mMedia;
    private SeekBar mSeekBar;
    private TextView mTvDuration;
    private LinearLayout mView;
    private final Runnable updatePositionRunnable = new Runnable() {
        public void run() {
            MusicPlayerView.this.updatePosition();
        }
    };

    public MusicPlayerView(Context context) {
        super(context);
    }

    public MusicPlayerView(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.mContext = context;
        this.mView = (LinearLayout) ((LayoutInflater) context.getSystemService("layout_inflater")).inflate(R.layout.music_player_view, this);
        this.mIbPlay = (ImageButton) this.mView.findViewById(R.id.ib_play);
        this.mSeekBar = (SeekBar) this.mView.findViewById(R.id.sb_playback);
        this.mTvDuration = (TextView) this.mView.findViewById(R.id.tv_duration);
        this.mIbPlay.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (MusicPlayerView.this.mMedia.isPlaying()) {
                    MusicPlayerView.this.mIbPlay.setImageResource(R.drawable.ic_play_light);
                    MusicPlayerView.this.mMedia.pause();
                    MusicPlayerView.this.handler.removeCallbacks(MusicPlayerView.this.updatePositionRunnable);
                    return;
                }
                MusicPlayerView.this.mIbPlay.setImageResource(R.drawable.ic_pause_stream);
                MusicPlayerView.this.mMedia.start();
                MusicPlayerView.this.updatePosition();
            }
        });
        this.mSeekBar.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
            boolean userTouch;

            public void onProgressChanged(SeekBar seekBar, int i, boolean z) {
                if (MusicPlayerView.this.mMedia.isPlaying() && this.userTouch) {
                    MusicPlayerView.this.mMedia.seekTo(i);
                }
            }

            public void onStartTrackingTouch(SeekBar seekBar) {
                this.userTouch = true;
            }

            public void onStopTrackingTouch(SeekBar seekBar) {
                this.userTouch = false;
            }
        });
    }

    private void updatePosition() {
        this.handler.removeCallbacks(this.updatePositionRunnable);
        this.mSeekBar.setProgress(this.mMedia.getCurrentPosition());
        this.handler.postDelayed(this.updatePositionRunnable, 2000);
    }

    public void setPlayer(String str) {
        this.mMedia = MediaPlayer.create(this.mContext, Uri.fromFile(new File(str)));
        this.mSeekBar.setMax(this.mMedia.getDuration());
        this.mMedia.setOnCompletionListener(new OnCompletionListener() {
            public void onCompletion(MediaPlayer mediaPlayer) {
                MusicPlayerView.this.mMedia.stop();
                MusicPlayerView.this.mIbPlay.setImageResource(R.drawable.ic_play_light);
            }
        });
    }

    public void stopPlayer() {
        if (this.mMedia != null) {
            if (this.mMedia.isPlaying()) {
                this.mMedia.stop();
            }
            this.mMedia.release();
        }
    }
}
