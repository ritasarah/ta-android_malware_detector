package com.albus.util;

import android.content.Context;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.RecyclerView.OnScrollListener;
import com.catfiz.R;

public abstract class HidingScrollListener extends OnScrollListener {
    private static final int FAB_HIDE_THRESHOLD = 20;
    private static final float HIDE_THRESHOLD = 10.0f;
    private static final float SHOW_THRESHOLD = 70.0f;
    private boolean mControlsVisible = true;
    private boolean mControlsVisible_FAB = true;
    private int mScrolledDistance_FAB = 0;
    private int mToolbarHeight = 0;
    private int mToolbarOffset = 0;
    private int mTotalScrolledDistance = 0;

    public HidingScrollListener(Context context) {
        this.mToolbarHeight = (int) context.getResources().getDimension(R.dimen.actionbar);
    }

    private void clipToolbarOffset() {
        if (this.mToolbarOffset > this.mToolbarHeight) {
            this.mToolbarOffset = this.mToolbarHeight;
        } else if (this.mToolbarOffset < 0) {
            this.mToolbarOffset = 0;
        }
    }

    private void setInvisible() {
        if (this.mToolbarOffset < this.mToolbarHeight) {
            onHideToolbar();
            this.mToolbarOffset = this.mToolbarHeight;
        }
        this.mControlsVisible = false;
    }

    private void setVisible() {
        if (this.mToolbarOffset > 0) {
            onShowToolbar();
            this.mToolbarOffset = 0;
        }
        this.mControlsVisible = true;
    }

    public abstract void onHideFAB();

    public abstract void onHideToolbar();

    public abstract void onMovedToolbar(int i);

    public void onScrollStateChanged(RecyclerView recyclerView, int i) {
        super.onScrollStateChanged(recyclerView, i);
        if (i != 0) {
            return;
        }
        if (this.mTotalScrolledDistance < this.mToolbarHeight) {
            setVisible();
        } else if (this.mControlsVisible) {
            if (((float) this.mToolbarOffset) > HIDE_THRESHOLD) {
                setInvisible();
            } else {
                setVisible();
            }
        } else if (((float) (this.mToolbarHeight - this.mToolbarOffset)) > SHOW_THRESHOLD) {
            setVisible();
        } else {
            setInvisible();
        }
    }

    public void onScrolled(RecyclerView recyclerView, int i, int i2) {
        super.onScrolled(recyclerView, i, i2);
        if (((LinearLayoutManager) recyclerView.getLayoutManager()).findFirstVisibleItemPosition() == 0) {
            if (!this.mControlsVisible_FAB) {
                onShowFAB();
                this.mControlsVisible_FAB = true;
            }
        } else if (this.mScrolledDistance_FAB > FAB_HIDE_THRESHOLD && this.mControlsVisible_FAB) {
            onHideFAB();
            this.mControlsVisible_FAB = false;
            this.mScrolledDistance_FAB = 0;
        } else if (this.mScrolledDistance_FAB < -20 && !this.mControlsVisible_FAB) {
            onShowFAB();
            this.mControlsVisible_FAB = true;
            this.mScrolledDistance_FAB = 0;
        }
        if ((this.mControlsVisible_FAB && i2 > 0) || (!this.mControlsVisible_FAB && i2 < 0)) {
            this.mScrolledDistance_FAB += i2;
        }
        clipToolbarOffset();
        onMovedToolbar(this.mToolbarOffset);
        if ((this.mToolbarOffset < this.mToolbarHeight && i2 > 0) || (this.mToolbarOffset > 0 && i2 < 0)) {
            this.mToolbarOffset += i2;
        }
        if (this.mTotalScrolledDistance < 0) {
            this.mTotalScrolledDistance = 0;
        } else {
            this.mTotalScrolledDistance += i2;
        }
    }

    public abstract void onShowFAB();

    public abstract void onShowToolbar();
}
