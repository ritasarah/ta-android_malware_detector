package com.albus.behavior;

import android.animation.ObjectAnimator;
import android.content.Context;
import android.support.design.widget.CoordinatorLayout;
import android.support.design.widget.CoordinatorLayout.LayoutParams;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.FloatingActionButton.Behavior;
import android.util.AttributeSet;
import android.view.View;
import android.view.animation.AccelerateDecelerateInterpolator;
import android.widget.LinearLayout;
import com.catfiz.R;

public class FabBehavior extends Behavior {
    private int mToolbarHeight;

    public FabBehavior(Context context, AttributeSet attributeSet) {
        this.mToolbarHeight = (int) context.getResources().getDimension(R.dimen.actionbar);
    }

    public boolean layoutDependsOn(CoordinatorLayout coordinatorLayout, FloatingActionButton floatingActionButton, View view) {
        return super.layoutDependsOn(coordinatorLayout, floatingActionButton, view) || (view instanceof LinearLayout);
    }

    public boolean onDependentViewChanged(CoordinatorLayout coordinatorLayout, FloatingActionButton floatingActionButton, View view) {
        boolean onDependentViewChanged = super.onDependentViewChanged(coordinatorLayout, floatingActionButton, view);
        if (view instanceof LinearLayout) {
            int height = ((LayoutParams) floatingActionButton.getLayoutParams()).bottomMargin + floatingActionButton.getHeight();
            float y = view.getY() / ((float) this.mToolbarHeight);
            ObjectAnimator ofFloat = ObjectAnimator.ofFloat(floatingActionButton, "translationY", new float[]{((float) (-height)) * y});
            ofFloat.setInterpolator(new AccelerateDecelerateInterpolator());
            ofFloat.setDuration(200);
            ofFloat.start();
        }
        return onDependentViewChanged;
    }
}
