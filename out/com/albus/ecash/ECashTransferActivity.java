package com.albus.ecash;

import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import com.albus.ecash.EcashTransferValidateDialogFragment.CallbackTransferDialogFragment;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.ecash.ECash;
import com.catfiz.ecash.ECashCallback;
import com.catfiz.ecash.api.ResponseStatus.StatusCode;
import com.catfiz.ecash.api.Result;
import com.catfiz.ecash.model.ECashAccount;
import com.catfiz.ecash.model.ECashTransfer;

public class ECashTransferActivity extends ActionBarActivity implements CallbackTransferDialogFragment {
    private Result mResult = null;

    private void CustomToast(String str) {
        View inflate = getLayoutInflater().inflate(R.layout.custom_toast, (ViewGroup) findViewById(R.id.toast_layout_root));
        ((TextView) inflate.findViewById(R.id.toast_text)).setText(str);
        Toast toast = new Toast(getApplicationContext());
        toast.setGravity(80, 0, AlbusModelObject.VIDEO_DURATION_UPLOAD_LIMIT);
        toast.setDuration(1);
        toast.setView(inflate);
        toast.show();
    }

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView((int) R.layout.activity_ecash_transfer);
        ECash.initializeApi(this);
        TextView textView = (TextView) findViewById(R.id.tv_account);
        textView = (TextView) findViewById(R.id.tv_balance);
        final EditText editText = (EditText) findViewById(R.id.et_tujuan);
        final EditText editText2 = (EditText) findViewById(R.id.et_jumlah);
        ((Button) findViewById(R.id.bt_transfer)).setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                if (ECash.getAccountCredentials() == null || ECash.getAccount() == null) {
                    ECashTransferActivity.this.CustomToast(ECashTransferActivity.this.getResources().getString(R.string.ecash_toast_session_expired));
                    ECashTransferActivity.this.finish();
                } else if (!editText.getText().toString().matches("") && !editText2.getText().toString().matches("")) {
                    ECashTransfer eCashTransfer = new ECashTransfer();
                    eCashTransfer.setReceiverMsisdn(editText.getText().toString());
                    eCashTransfer.setAmount(Integer.parseInt(editText2.getText().toString()));
                    ECash.newTransferMemberInquiryRequest(eCashTransfer).executeAsync(new ECashCallback() {
                        public void onFailed() {
                        }

                        public void onResult(Result result) {
                            ECashTransfer eCashTransfer = (ECashTransfer) result.getResultData();
                            ECashTransferActivity.this.mResult = result;
                            boolean z = false;
                            if (eCashTransfer.isNeedOtp()) {
                                z = true;
                            }
                            new EcashTransferValidateDialogFragment(ECashTransferActivity.this, ECashTransferActivity.this, editText.getText().toString(), Integer.parseInt(editText2.getText().toString()), z).show(ECashTransferActivity.this.getSupportFragmentManager(), "");
                        }

                        public void onVerified() {
                        }
                    });
                }
            }
        });
        ECash.newBalanceInquiryRequest().executeAsync(new ECashCallback() {
            public void onFailed() {
            }

            public void onResult(Result result) {
                if (result.getStatusCode() == StatusCode.RESPONSE_PROCESSED) {
                    textView.setText(String.valueOf(((ECashAccount) result.getResultData()).getBalance()));
                    return;
                }
                ECashTransferActivity.this.finish();
                ECashTransferActivity.this.CustomToast(ECashTransferActivity.this.getResources().getString(R.string.ecash_toast_session_expired));
            }

            public void onVerified() {
            }
        });
    }

    public boolean onOptionsItemSelected(MenuItem menuItem) {
        switch (menuItem.getItemId()) {
            case 16908332:
                finish();
                return true;
            default:
                return super.onOptionsItemSelected(menuItem);
        }
    }

    public void onTransferSelected(String str, String str2) {
        if (ECash.getAccountCredentials() == null || ECash.getAccount() == null || this.mResult == null) {
            finish();
            CustomToast(getResources().getString(R.string.ecash_toast_transfer_failed));
            return;
        }
        ECash.newTransferMemberPaymentRequest((ECashTransfer) this.mResult.getResultData(), str, str2).executeAsync(new ECashCallback() {
            public void onFailed() {
                ECashTransferActivity.this.CustomToast(ECashTransferActivity.this.getResources().getString(R.string.ecash_toast_transfer_failed));
            }

            public void onResult(Result result) {
                if (result.getStatusCode() == StatusCode.RESPONSE_PROCESSED) {
                    ECashTransferActivity.this.CustomToast(ECashTransferActivity.this.getResources().getString(R.string.ecash_toast_transfer_succes));
                } else {
                    ECashTransferActivity.this.CustomToast(ECashTransferActivity.this.getResources().getString(R.string.ecash_toast_transfer_failed));
                }
            }

            public void onVerified() {
            }
        });
    }
}
