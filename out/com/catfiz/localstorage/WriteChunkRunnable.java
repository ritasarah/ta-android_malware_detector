package com.catfiz.localstorage;

import com.catfiz.service.CatfishService;
import com.catfiz.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;

public class WriteChunkRunnable implements Runnable {
    private static final String TAG = "WriteChunkRunnable";
    private static Map mCfOutputStreamMap = null;
    private OutputStream mCfOutputStream = null;
    private ChunkStorage mChunkStorage = null;
    private byte[] mData = null;
    private String mDataKey = null;
    private ILocalStorageInterface mLocalStorageInterface = null;

    public WriteChunkRunnable(ILocalStorageInterface iLocalStorageInterface, String str, byte[] bArr) {
        this.mLocalStorageInterface = iLocalStorageInterface;
        this.mDataKey = str;
        if (bArr == null) {
            this.mData = null;
            return;
        }
        this.mData = new byte[bArr.length];
        System.arraycopy(bArr, 0, this.mData, 0, this.mData.length);
    }

    public WriteChunkRunnable(String str, byte[] bArr) {
        this.mDataKey = str;
        if (bArr == null) {
            this.mData = null;
            return;
        }
        this.mData = new byte[bArr.length];
        System.arraycopy(bArr, 0, this.mData, 0, this.mData.length);
    }

    public WriteChunkRunnable(String str, byte[] bArr, int i) {
        this.mDataKey = str;
        if (bArr == null) {
            this.mData = null;
            return;
        }
        if (i < 0) {
            i = bArr.length;
        }
        this.mData = new byte[i];
        System.arraycopy(bArr, 0, this.mData, 0, this.mData.length);
    }

    protected CatfishService getCatfishService() {
        return CatfishService.getServiceInstance();
    }

    public void run() {
        if (mCfOutputStreamMap == null) {
            mCfOutputStreamMap = new HashMap();
        }
        this.mCfOutputStream = (OutputStream) mCfOutputStreamMap.get(this.mDataKey);
        try {
            if (this.mCfOutputStream == null) {
                this.mChunkStorage = new ChunkStorage(getCatfishService());
                this.mCfOutputStream = new FileOutputStream(new File(LocalStorageWorker.FILESTORAGE_ROOT_PATH, this.mDataKey));
                mCfOutputStreamMap.put(this.mDataKey, this.mCfOutputStream);
            }
            if (this.mData != null) {
                this.mCfOutputStream.write(this.mData);
                return;
            }
            this.mCfOutputStream.flush();
            this.mCfOutputStream.close();
            mCfOutputStreamMap.remove(this.mDataKey);
            if (this.mLocalStorageInterface != null) {
                this.mLocalStorageInterface.onWriteDone();
            }
        } catch (IOException e) {
            Log.e(TAG, " Runnable error e = " + e.getMessage());
        }
    }
}
