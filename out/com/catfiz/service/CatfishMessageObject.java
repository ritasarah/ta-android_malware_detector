package com.catfiz.service;

import com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus;
import com.catfiz.service.CatfishRESTAPI.MessageType;
import java.util.ArrayList;

public class CatfishMessageObject {
    private static final int MAX_POOL_SIZE = 50;
    private static CatfishMessageObject sPool;
    private static int sPoolSize = 0;
    private static final Object sPoolSync = new Object();
    private static final Object sRefCountSync = new Object();
    public int ads_expcount = 0;
    public int ads_id = 0;
    public String ads_img_path = null;
    public long ads_img_size = 0;
    public String ads_img_url = null;
    public int ads_pos = 0;
    public String ads_uri = null;
    public ArrayList appsLists = null;
    public String apps_icon = null;
    public String apps_icon_path = null;
    public int apps_id = 0;
    public int apps_locking = 0;
    public String apps_name = null;
    public String apps_packagename = null;
    public int apps_privilage = 0;
    public String apps_ps_url = null;
    public int apps_type = 0;
    public int attachmentFileSize = 0;
    public int attachmentHeight = 0;
    public int attachmentWidth = 0;
    public int binarytype = 0;
    public int byteend = 0;
    public int bytestart = 0;
    public int bytewritten = 0;
    public long channelid = 0;
    public int chunksize = 0;
    public String code = null;
    public String conversation_key = null;
    public String data = null;
    public String dataName = null;
    public String data_comment = null;
    public String data_json = null;
    public long data_sequence = 0;
    public String datafile_path = null;
    public int datasize;
    public int datatype;
    public MessageDeliveryStatus deliverystatus = MessageDeliveryStatus.UNDEFINED;
    public String desc = null;
    public String email = null;
    public String email_code = null;
    public String fif_id = null;
    public String filename = null;
    public String groupdesc = null;
    public long groupid = 0;
    public int[] groupids = null;
    public String groupname = null;
    public String groupowner = null;
    public long grouptimestamp = 0;
    public String image_path = null;
    public String imagethumb_uri = null;
    public String imei = null;
    public String invitorname = null;
    public String invitorpin = null;
    public boolean isAcceptFriend = false;
    public boolean isMute = false;
    public boolean isUserComment = false;
    public int isUserLike = 0;
    public boolean is_need_count = false;
    public int limit = 0;
    public String longmessagelink = null;
    public String longpin = null;
    private int mObjectRefCount = 1;
    public String message = null;
    public byte[] messagebyte = null;
    public MessageType messagetype = MessageType.UNDEFINED;
    CatfishMessageObject next;
    public String nic = null;
    public int objectCommentContext = 0;
    public int objectCommentType = 0;
    public String objectKey = null;
    public String object_owner = null;
    public long object_sequence = 0;
    public String old_username = null;
    public Object otherData = null;
    public String password = null;
    public String phoneNumber = null;
    public String quote_message = null;
    public long rcvtimestamp = 0;
    public long rdcounter = 0;
    public String recipient = null;
    public String recipientname = null;
    public String[] recipients = null;
    public String repo = null;
    public String sendername = null;
    public String senderpin = null;
    public long sequence = 0;
    public String slink = null;
    public int source;
    public long status_comments_sequence;
    public String status_comments_userpin = null;
    public int stickerheight;
    public int stickerwidth;
    public int subtype = 0;
    public long timestamp = 0;
    public String title = null;
    public String topic_key = null;
    public int type = 0;
    public boolean updateLastMessageStatus = false;
    public int updatemark = 0;
    public String userkey = null;
    public String username = null;
    public String userphotofile = null;
    public String userpin = null;
    public String userstatus = null;
    public String voicefilepath = null;

    public static CatfishMessageObject obtain() {
        synchronized (sPoolSync) {
            if (sPool != null) {
                CatfishMessageObject catfishMessageObject = sPool;
                sPool = catfishMessageObject.next;
                catfishMessageObject.next = null;
                sPoolSize--;
                catfishMessageObject.mObjectRefCount++;
                return catfishMessageObject;
            }
            return new CatfishMessageObject();
        }
    }

    public static CatfishMessageObject obtain(String str) {
        CatfishMessageObject obtain = obtain();
        obtain.userpin = str;
        return obtain;
    }

    public static CatfishMessageObject obtain(String str, int i, int i2, long j, int i3, int i4, int i5, long j2, long j3) {
        CatfishMessageObject obtain = obtain();
        obtain.senderpin = str;
        obtain.channelid = j;
        obtain.chunksize = i3;
        obtain.bytestart = i4;
        obtain.byteend = i5;
        obtain.sequence = j2;
        obtain.subtype = i2;
        if (i >= MessageType.MAXTYPE.ordinal()) {
            obtain.messagetype = MessageType.UNDEFINED;
        } else {
            obtain.messagetype = MessageType.values()[i];
        }
        obtain.message = null;
        obtain.rcvtimestamp = j3;
        return obtain;
    }

    public static CatfishMessageObject obtain(String str, String str2) {
        CatfishMessageObject obtain = obtain();
        obtain.userpin = str;
        obtain.username = str2;
        return obtain;
    }

    public static CatfishMessageObject obtain(String str, String str2, String str3, int i, int i2, long j, long j2, String str4, long j3, long j4) {
        CatfishMessageObject obtain = obtain();
        obtain.senderpin = str;
        obtain.sendername = str2;
        obtain.message = str3;
        obtain.rdcounter = j4;
        obtain.subtype = i2;
        if (i >= MessageType.MAXTYPE.ordinal()) {
            obtain.messagetype = MessageType.UNDEFINED;
        } else {
            obtain.messagetype = MessageType.values()[i];
        }
        obtain.sequence = j;
        obtain.object_sequence = j2;
        obtain.object_owner = str4;
        obtain.rcvtimestamp = j3;
        return obtain;
    }

    public static CatfishMessageObject obtain(String str, String str2, String str3, int i, int i2, long j, long j2, String str4, long j3, long j4, long j5) {
        CatfishMessageObject obtain = obtain();
        obtain.senderpin = str;
        obtain.sendername = str2;
        obtain.message = str3;
        obtain.rdcounter = j4;
        obtain.subtype = i2;
        if (i >= MessageType.MAXTYPE.ordinal()) {
            obtain.messagetype = MessageType.UNDEFINED;
        } else {
            obtain.messagetype = MessageType.values()[i];
        }
        obtain.sequence = j;
        obtain.object_sequence = j2;
        obtain.object_owner = str4;
        obtain.data_sequence = j5;
        obtain.rcvtimestamp = j3;
        return obtain;
    }

    public void cleaningup() {
        this.userpin = null;
        this.senderpin = null;
        this.invitorpin = null;
        this.invitorname = null;
        this.sendername = null;
        this.recipient = null;
        this.recipientname = null;
        this.recipients = null;
        this.message = null;
        this.messagebyte = null;
        this.title = null;
        this.topic_key = null;
        this.data_json = null;
        this.data_comment = null;
        this.sequence = 0;
        this.rcvtimestamp = 0;
        this.rdcounter = 0;
        this.username = null;
        this.userstatus = null;
        this.userphotofile = null;
        this.conversation_key = null;
        this.messagetype = MessageType.UNDEFINED;
        this.deliverystatus = MessageDeliveryStatus.UNDEFINED;
        this.subtype = 0;
        this.channelid = 0;
        this.binarytype = 0;
        this.chunksize = 0;
        this.bytestart = 0;
        this.byteend = 0;
        this.bytewritten = 0;
        this.imagethumb_uri = null;
        this.image_path = null;
        this.datafile_path = null;
        this.groupid = 0;
        this.groupname = null;
        this.grouptimestamp = 0;
        this.groupdesc = null;
        this.groupowner = null;
        this.voicefilepath = null;
        this.object_sequence = 0;
        this.object_owner = null;
        this.data_sequence = 0;
        this.status_comments_sequence = 0;
        this.status_comments_userpin = null;
        this.password = null;
        this.longpin = null;
        this.userkey = null;
        this.filename = null;
        this.repo = null;
        this.code = null;
        this.slink = null;
        this.source = 0;
        this.datasize = 0;
        this.datatype = 0;
        this.desc = null;
        this.stickerheight = 0;
        this.stickerwidth = 0;
        this.longmessagelink = null;
        this.otherData = null;
        this.isMute = false;
        this.phoneNumber = null;
        this.email = null;
        this.imei = null;
        this.nic = null;
        this.ads_uri = null;
        this.ads_img_url = null;
        this.apps_name = null;
        this.apps_icon = null;
        this.apps_ps_url = null;
        this.apps_packagename = null;
        if (this.appsLists != null) {
            this.appsLists.clear();
        }
        this.appsLists = null;
    }

    public CatfishMessageObject getRefCopy() {
        synchronized (sRefCountSync) {
            this.mObjectRefCount++;
        }
        return this;
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void recycle() {
        /*
        r3 = this;
        r1 = sRefCountSync;
        monitor-enter(r1);
        r0 = r3.mObjectRefCount;	 Catch:{ all -> 0x0034 }
        if (r0 <= 0) goto L_0x000d;
    L_0x0007:
        r0 = r3.mObjectRefCount;	 Catch:{ all -> 0x0034 }
        r0 = r0 + -1;
        r3.mObjectRefCount = r0;	 Catch:{ all -> 0x0034 }
    L_0x000d:
        r0 = r3.mObjectRefCount;	 Catch:{ all -> 0x0034 }
        if (r0 <= 0) goto L_0x0013;
    L_0x0011:
        monitor-exit(r1);	 Catch:{ all -> 0x0034 }
    L_0x0012:
        return;
    L_0x0013:
        r0 = 0;
        r3.mObjectRefCount = r0;	 Catch:{ all -> 0x0034 }
        monitor-exit(r1);	 Catch:{ all -> 0x0034 }
        r3.cleaningup();
        r1 = sPoolSync;
        monitor-enter(r1);
        r0 = sPoolSize;	 Catch:{ all -> 0x0031 }
        r2 = 50;
        if (r0 >= r2) goto L_0x002f;
    L_0x0023:
        r0 = sPool;	 Catch:{ all -> 0x0031 }
        r3.next = r0;	 Catch:{ all -> 0x0031 }
        sPool = r3;	 Catch:{ all -> 0x0031 }
        r0 = sPoolSize;	 Catch:{ all -> 0x0031 }
        r0 = r0 + 1;
        sPoolSize = r0;	 Catch:{ all -> 0x0031 }
    L_0x002f:
        monitor-exit(r1);	 Catch:{ all -> 0x0031 }
        goto L_0x0012;
    L_0x0031:
        r0 = move-exception;
        monitor-exit(r1);	 Catch:{ all -> 0x0031 }
        throw r0;
    L_0x0034:
        r0 = move-exception;
        monitor-exit(r1);	 Catch:{ all -> 0x0034 }
        throw r0;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.catfiz.service.CatfishMessageObject.recycle():void");
    }
}
