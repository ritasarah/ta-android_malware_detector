package com.catfiz.service.uidbexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishService;
import com.catfiz.service.CatfishUIBinder.DatabaseRequestOP;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.uiresponse.CUIResponseExecutor;
import com.catfiz.svcpersistent.CommonPersistentExecutorBase;

public abstract class CUIDatabaseExecutorBase extends CommonPersistentExecutorBase implements Runnable {
    protected ICatfishUIBinder mIBinder;
    protected ICatfishClientInterface mIfclient;
    protected final CatfishMessageObject mMessage;
    protected DatabaseRequestOP mOperation;

    public CUIDatabaseExecutorBase(ICatfishClientInterface iCatfishClientInterface) {
        this.mIfclient = iCatfishClientInterface;
        this.mOperation = DatabaseRequestOP.UNKNOWN;
        this.mIBinder = null;
        this.mMessage = null;
    }

    public CUIDatabaseExecutorBase(ICatfishUIBinder iCatfishUIBinder, ICatfishClientInterface iCatfishClientInterface, CatfishMessageObject catfishMessageObject, DatabaseRequestOP databaseRequestOP) {
        this.mIfclient = iCatfishClientInterface;
        this.mOperation = databaseRequestOP;
        this.mMessage = catfishMessageObject;
        this.mIBinder = iCatfishUIBinder;
    }

    public CUIDatabaseExecutorBase(ICatfishUIBinder iCatfishUIBinder, ICatfishClientInterface iCatfishClientInterface, DatabaseRequestOP databaseRequestOP) {
        this.mIfclient = iCatfishClientInterface;
        this.mOperation = databaseRequestOP;
        this.mIBinder = iCatfishUIBinder;
        this.mMessage = null;
    }

    protected CatfishService getCatfishService() {
        return CatfishService.getServiceInstance();
    }

    protected void postResponse(CUIResponseExecutor cUIResponseExecutor) {
        CatfishService serviceInstance = CatfishService.getServiceInstance();
        if (serviceInstance != null) {
            serviceInstance.postToMainHandler(cUIResponseExecutor);
        }
    }
}
