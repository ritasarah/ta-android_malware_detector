package com.catfiz.service;

import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.util.Log;

public class UserOnTypingExecutor implements IDropableRunnable, Runnable {
    private static final String TAG = "UserOnTypingExecutor";
    private CatfishRESTAPI catfishRestAPI = null;
    private long mAge = 0;
    private boolean mDone = false;
    private String mNotifyRecipient;
    private String mServer;
    private CatfishService mService;
    private String mUserpin;
    public int scheduleNum = 0;

    public UserOnTypingExecutor(CatfishService catfishService, String str, boolean z) {
        this.mService = catfishService;
        this.mNotifyRecipient = str;
        this.mDone = z;
        this.mUserpin = CatfishService.getUserPIN();
        this.mServer = CatfishService.getCurrentServerHost();
        this.mAge = System.currentTimeMillis();
    }

    public void dropRunnable() {
        Log.e(TAG, "SEND ONTYPING SIGNAL: DROP BY SERVICE!!!");
    }

    public long getAge() {
        return this.mAge;
    }

    public int getScheduleNum() {
        return this.scheduleNum;
    }

    public void incraseScheduleNum() {
        this.scheduleNum++;
    }

    public void run() {
        CatfishResult notifyWriting = !this.mDone ? this.catfishRestAPI.notifyWriting(this.mServer, this.mUserpin, this.mNotifyRecipient) : this.catfishRestAPI.notifyWritingDone(this.mServer, this.mUserpin, this.mNotifyRecipient);
        if (notifyWriting.hasSuccess()) {
            Log.d(TAG, "ONTYPING SIGNAL SENT");
        } else if (notifyWriting.hasFailure()) {
            Log.e(TAG, "FAIL TO SEND ONTYPING SIGNAL: RESCHEDULE.");
            this.mServer = CatfishService.getServerHost();
            this.mService.scheduleRunnableToService(this, 1);
            notifyWriting.cleaningup();
            return;
        } else {
            Log.e(TAG, "FAIL TO SEND ONTYPING SIGNAL: DROP !!!");
        }
        notifyWriting.cleaningup();
        this.mService = null;
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
