package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishService;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.util.Log;
import java.util.List;

public class CategoryBackupExecutor implements IDropableRunnable, Runnable {
    public static final int ACTION_ADD_CATEGORYS = 1;
    public static final int ACTION_ADD_FRIENDS_CATEGORY = 2;
    public static final int ACTION_DELETE_CATEGORYS = 3;
    public static final int ACTION_DELETE_FRIENDS_CATEGORY = 4;
    public static final String TAG = CategoryBackupExecutor.class.getSimpleName();
    private CatfishRESTAPI catfishRestAPI;
    private int mActionType = -1;
    private List mCategoryKeys = null;
    private List mFriendKeys = null;
    private ICatfishUIBinder mIBinder = null;
    private ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    public int mScheduleNum = 0;
    private String mServer = null;
    public CatfishService mService = null;
    private final String mUserpin;

    public CategoryBackupExecutor(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, String str2, List list, List list2, int i) {
        this.mService = catfishService;
        this.mServer = "103.11.253.2:8000";
        this.mUserpin = str2;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
        this.mCategoryKeys = list;
        this.mFriendKeys = list2;
        this.mActionType = i;
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum += ACTION_ADD_CATEGORYS;
    }

    public void run() {
        CatfishResult catfishResult = null;
        switch (this.mActionType) {
            case ACTION_ADD_CATEGORYS /*1*/:
            case ACTION_ADD_FRIENDS_CATEGORY /*2*/:
            case ACTION_DELETE_CATEGORYS /*3*/:
            case ACTION_DELETE_FRIENDS_CATEGORY /*4*/:
                break;
            default:
                Log.d(TAG, "!!!!!!!!!!!!!!!!!!! Action undefined");
                break;
        }
        if (catfishResult == null) {
            Log.d(TAG, "----RESULT is NULL---");
        } else if (catfishResult.hasSuccess()) {
            Log.d(TAG, "----SUCCESS insert data with CODE---" + catfishResult.code + " " + catfishResult.toString());
        } else if (catfishResult.hasNotFound()) {
            Log.d(TAG, "----NOTFOUND insert data with CODE---");
        } else if (catfishResult.hasFailure()) {
            Log.d(TAG, "----FAIL---");
            this.mService.scheduleRunnableToService(this);
        } else {
            Log.e(TAG, "Please Check, Server tell that something wrong in our parameter");
        }
        catfishResult.cleaningup();
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
