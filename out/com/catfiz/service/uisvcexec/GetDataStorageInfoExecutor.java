package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishService;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.service.uidbexec.CUIDBSaveDataStorageInfo;
import com.catfiz.util.Log;

public class GetDataStorageInfoExecutor implements IDropableRunnable, Runnable {
    public static final String TAG = "GetDataStorageInfoExecutor";
    private CatfishRESTAPI catfishRestAPI;
    private ICatfishUIBinder mIBinder = null;
    private ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    public int mScheduleNum = 0;
    private final String mSenderpin;
    private final long mSequence;
    public CatfishService mService = null;
    private String mSvr = null;
    private final String mUserpin;
    private final int mViewType;

    public GetDataStorageInfoExecutor(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, String str2, String str3, long j, int i) {
        this.mService = catfishService;
        this.mSvr = str;
        this.mUserpin = str2;
        this.mSenderpin = str3;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
        this.mSequence = j;
        this.mViewType = i;
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum++;
    }

    public void run() {
        Log.d(TAG, "----- getUserDataStorageInfoExecutor -----");
        CatfishResult dataStorageInfo = this.catfishRestAPI.getDataStorageInfo(this.mSvr, this.mUserpin, this.mSenderpin, this.mSequence);
        if (dataStorageInfo.hasSuccess()) {
            Log.d(TAG, "----GET USER DATA PROFILE---" + dataStorageInfo.data_json + " " + dataStorageInfo.toString());
            Log.e(TAG, "Saving data profile to db, friendpin:" + dataStorageInfo.userpin + " data:" + dataStorageInfo.data_json);
            CatfishMessageObject catfishMessageObject = new CatfishMessageObject();
            catfishMessageObject.datasize = dataStorageInfo.datasize;
            catfishMessageObject.sequence = this.mSequence;
            this.mService.postToDBHandler(new CUIDBSaveDataStorageInfo(catfishMessageObject, this.mViewType));
        } else if (dataStorageInfo.hasNotFound()) {
            Log.d(TAG, "----GET DATA STORAGE: " + dataStorageInfo.userpin + " NOT FOUND ----");
        } else if (dataStorageInfo.hasFailure()) {
            this.mSvr = CatfishService.getServerHost();
            this.mService.scheduleRunnableToService(this);
        } else {
            Log.e(TAG, "Please Check, Server tell that something wrong in our parameter");
        }
        dataStorageInfo.cleaningup();
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
