package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishService;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.util.Log;

public class StorageServerUpdateExecutor implements IDropableRunnable, Runnable {
    public static final String TAG = "StorageServerInsertExecutor";
    private CatfishRESTAPI catfishRestAPI;
    private final CatfishMessageObject mCmo;
    private ICatfishUIBinder mIBinder = null;
    private ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    public int mScheduleNum = 0;
    public CatfishService mService = null;
    private String mSvr = null;
    private final String mUserpin;

    public StorageServerUpdateExecutor(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, String str2, CatfishMessageObject catfishMessageObject) {
        this.mService = catfishService;
        this.mSvr = str;
        this.mUserpin = str2;
        this.mCmo = catfishMessageObject;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum++;
    }

    public void run() {
        CatfishResult storageInsertData = this.catfishRestAPI.storageInsertData(this.mSvr, this.mUserpin, this.mCmo.dataName, this.mCmo.data);
        if (storageInsertData.hasSuccess()) {
            Log.d(TAG, "----SUCCESS insert data with CODE---" + storageInsertData.code + " " + storageInsertData.toString());
        } else if (storageInsertData.hasNotFound()) {
            Log.d(TAG, "----NOTFOUND insert data with CODE---");
        } else if (storageInsertData.hasFailure()) {
            this.mSvr = CatfishService.getServerHost();
            this.mService.scheduleRunnableToService(this);
        } else {
            Log.e(TAG, "Please Check, Server tell that something wrong in our parameter");
        }
        storageInsertData.cleaningup();
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
