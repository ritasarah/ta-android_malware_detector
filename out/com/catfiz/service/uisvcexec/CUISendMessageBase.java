package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus;
import com.catfiz.service.CatfishService;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.service.uidbexec.CUIBCASTDeliveryStatusUpdater;
import com.catfiz.service.uidbexec.CUIMessageDeliveryStatusUpdater;
import com.catfiz.service.uidbexec.CUIMessageDeliveryStatusUpdaterWithConvkey;
import com.catfiz.service.uiresponse.CUIResponseExecutor;
import com.catfiz.svcpersistent.CommonPersistentExecutorBase;

public abstract class CUISendMessageBase extends CommonPersistentExecutorBase implements IDropableRunnable {
    private static final String TAG = "CUISendMessageBase";
    protected CatfishRESTAPI catfishRestAPI = null;
    protected ICatfishUIBinder mIBinder = null;
    protected ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    protected final CatfishMessageObject mMessage;
    public int mScheduleNum = 0;
    protected CatfishService mService = null;
    protected String mSvr = null;

    public CUISendMessageBase(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, CatfishMessageObject catfishMessageObject) {
        this.mService = catfishService;
        this.mSvr = str;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
        this.mMessage = catfishMessageObject;
        this.mLiveAge = System.currentTimeMillis();
    }

    protected void dropExecution() {
        postUpdateDeliveryStatus(this.mIBinder, this.mIfclient, this.mMessage, MessageDeliveryStatus.DROP);
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum++;
    }

    protected abstract void onFailToSend();

    protected abstract void onNotifyUIClient(CatfishResult catfishResult);

    protected abstract void onSendSuccess();

    protected void postResponse(CUIResponseExecutor cUIResponseExecutor) {
        this.mService.postToMainHandler(cUIResponseExecutor);
    }

    protected void postUpdateBCASTDeliveryStatus(ICatfishUIBinder iCatfishUIBinder, ICatfishClientInterface iCatfishClientInterface, CatfishMessageObject catfishMessageObject, MessageDeliveryStatus messageDeliveryStatus) {
        catfishMessageObject.deliverystatus = messageDeliveryStatus;
        this.mService.postToDBHandler(new CUIBCASTDeliveryStatusUpdater(iCatfishUIBinder, iCatfishClientInterface, catfishMessageObject));
    }

    protected void postUpdateDeliveryStatus(ICatfishUIBinder iCatfishUIBinder, ICatfishClientInterface iCatfishClientInterface, CatfishMessageObject catfishMessageObject, MessageDeliveryStatus messageDeliveryStatus) {
        catfishMessageObject.deliverystatus = messageDeliveryStatus;
        this.mService.postToDBHandler(new CUIMessageDeliveryStatusUpdater(iCatfishUIBinder, iCatfishClientInterface, catfishMessageObject));
    }

    protected void postUpdateDeliveryStatusWithConvkey(ICatfishUIBinder iCatfishUIBinder, ICatfishClientInterface iCatfishClientInterface, CatfishMessageObject catfishMessageObject, MessageDeliveryStatus messageDeliveryStatus) {
        catfishMessageObject.deliverystatus = messageDeliveryStatus;
        this.mService.postToDBHandler(new CUIMessageDeliveryStatusUpdaterWithConvkey(iCatfishUIBinder, iCatfishClientInterface, catfishMessageObject));
    }

    protected abstract CatfishResult proceedSendMessage();

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
