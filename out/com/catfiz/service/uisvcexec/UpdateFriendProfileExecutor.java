package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishService;
import com.catfiz.service.CatfishUIBinder.DatabaseRequestOP;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.service.PPFDownloadExecutor;
import com.catfiz.service.uidbexec.CUIDatabaseRequestExecutor;
import com.catfiz.util.Log;

public class UpdateFriendProfileExecutor implements IDropableRunnable, Runnable {
    public static final String TAG = "UpdateFriendProfileExecutor";
    private CatfishRESTAPI catfishRestAPI;
    private final String mFriendpin;
    private ICatfishUIBinder mIBinder = null;
    private ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    public int mScheduleNum = 0;
    public CatfishService mService = null;
    private String mSvr = null;
    private final String mUserpin;

    public UpdateFriendProfileExecutor(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, String str2, String str3) {
        this.mService = catfishService;
        this.mSvr = str;
        this.mUserpin = str2;
        this.mFriendpin = str3;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum++;
    }

    public void run() {
        Log.d(TAG, "----GET FRIEND PROFILE: (" + this.mFriendpin + ") profile");
        CatfishResult userProfileInfo = this.catfishRestAPI.getUserProfileInfo(this.mSvr, this.mUserpin, this.mFriendpin);
        if (userProfileInfo.hasSuccess()) {
            if (userProfileInfo.photoavailable) {
                Log.d(TAG, "----Photo Available: Get The Photo");
                this.mService.postToServiceHandler(new PPFDownloadExecutor(this.mService, this.mSvr, this.mUserpin, this.mFriendpin, true), 2);
            } else {
                Log.d(TAG, "Friend (" + this.mFriendpin + "): No Photo Available");
            }
            CatfishMessageObject obtain = CatfishMessageObject.obtain();
            obtain.recipient = this.mFriendpin;
            obtain.object_sequence = userProfileInfo.object_sequence;
            if (userProfileInfo.username == null) {
                Log.d(TAG, "Friend: " + this.mFriendpin + " : Username is NULL");
            } else if (userProfileInfo.username.length() > 0) {
                obtain.username = userProfileInfo.username;
                obtain.userstatus = userProfileInfo.userstatus;
                Log.d(TAG, "Friend: " + this.mFriendpin + " : Post to update profile DB");
                this.mService.postToDBHandler(new CUIDatabaseRequestExecutor(this.mIBinder, this.mIfclient, obtain, DatabaseRequestOP.UPDATE_FRIENDPROFILE));
                return;
            } else {
                Log.d(TAG, "Friend: " + this.mFriendpin + " : Username is zero length");
            }
            Log.d(TAG, "Friend: " + this.mFriendpin + " : NOT AVAILABLE");
            obtain.recycle();
        } else if (userProfileInfo.hasNotFound()) {
            Log.e(TAG, "Please Check, Server tell that Photo is not FOUND");
            userProfileInfo.cleaningup();
        } else if (userProfileInfo.hasFailure()) {
            Log.d(TAG, "----GET FRIEND PROFILE:" + this.mFriendpin + " FAIL: Reschedule!!!---");
            this.mSvr = CatfishService.getServerHost();
            userProfileInfo.cleaningup();
            this.mService.scheduleRunnableToService(this);
        } else if (!userProfileInfo.hasSuccess()) {
            Log.d(TAG, "----GET FRIEND PROFILE:" + this.mFriendpin + " ERROR: DROP---");
            userProfileInfo.cleaningup();
        }
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
