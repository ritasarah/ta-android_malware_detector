package com.catfiz.service.uisvcexec;

import com.catfiz.service.CatfishMessageObject;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishService;
import com.catfiz.service.CatfishUIBinder.DatabaseRequestOP;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.ICatfishUIBinder;
import com.catfiz.service.IDropableRunnable;
import com.catfiz.service.uidbexec.CUIDatabaseRequestExecutor;
import com.catfiz.util.Log;

public class GetUserActivityExecutor implements IDropableRunnable, Runnable {
    public static final String TAG = "GetUserActivityExecutor";
    private CatfishRESTAPI catfishRestAPI;
    private final String mFriendpin;
    private ICatfishUIBinder mIBinder = null;
    private ICatfishClientInterface mIfclient = null;
    private long mLiveAge = 0;
    public int mScheduleNum = 0;
    public CatfishService mService = null;
    private String mSvr = null;
    private final String mUserpin;

    public GetUserActivityExecutor(ICatfishUIBinder iCatfishUIBinder, CatfishService catfishService, String str, ICatfishClientInterface iCatfishClientInterface, String str2, String str3) {
        this.mService = catfishService;
        this.mSvr = str;
        this.mUserpin = str2;
        this.mFriendpin = str3;
        this.mIfclient = iCatfishClientInterface;
        this.mIBinder = iCatfishUIBinder;
    }

    private CatfishService getCatfishService() {
        return CatfishService.getServiceInstance();
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mLiveAge;
    }

    public int getScheduleNum() {
        return this.mScheduleNum;
    }

    public void incraseScheduleNum() {
        this.mScheduleNum++;
    }

    public void run() {
        Log.d(TAG, "----GET USER ACTIVITY---");
        CatfishResult userActivity = this.catfishRestAPI.getUserActivity(this.mSvr, this.mUserpin, this.mFriendpin);
        if (userActivity.hasSuccess()) {
            Log.e(TAG, "Saving useractivity to db, friendpin:" + userActivity.userpin + " data:" + userActivity.data_json);
            CatfishMessageObject catfishMessageObject = new CatfishMessageObject();
            catfishMessageObject.userpin = this.mUserpin;
            catfishMessageObject.senderpin = userActivity.userpin;
            catfishMessageObject.rcvtimestamp = userActivity.timestamp;
            catfishMessageObject.message = userActivity.data_json;
            getCatfishService().postToDBHandler(new CUIDatabaseRequestExecutor(this.mIBinder, this.mIfclient, catfishMessageObject, DatabaseRequestOP.SAVE_DOWNLOADED_USER_ACTIVITY));
        } else if (!userActivity.hasNotFound()) {
            if (userActivity.hasFailure()) {
                this.mSvr = CatfishService.getServerHost();
                getCatfishService().scheduleRunnableToService(this);
            } else {
                Log.e(TAG, "Please Check, Server tell that something wrong in our parameter");
            }
        }
        userActivity.cleaningup();
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
