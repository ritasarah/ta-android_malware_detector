package com.catfiz.service;

import android.content.SharedPreferences;
import android.database.Cursor;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v7.widget.helper.ItemTouchHelper.Callback;
import com.albus.util.AlbusModelObject;
import com.catfiz.R;
import com.catfiz.media.CatfishPhotoStorage;
import com.catfiz.pool.PoolDataStorage;
import com.catfiz.service.CatfishRESTAPI.CatfishResult;
import com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus;
import com.catfiz.service.CatfishRESTAPI.MessageType;
import com.catfiz.service.CatfishService.UpdateRecent;
import com.catfiz.util.Log;
import java.io.File;
import java.util.ArrayList;
import org.json.JSONObject;

public class CatfishServiceExecutor implements IDropableRunnable, Runnable {
    private static final String TAG = "CatfishServiceExecutor";
    private CatfishRESTAPI catfishRestAPI = null;
    private long mAge = 0;
    public int scheduleNum = 0;
    public String server = null;
    private CatfishService service = null;
    public String userpin = null;

    /* synthetic */ class AnonymousClass1 {
        static final /* synthetic */ int[] $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType = new int[MessageType.values().length];

        static {
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PING.ordinal()] = 1;
            } catch (NoSuchFieldError e) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.LONG_MESSAGE.ordinal()] = 2;
            } catch (NoSuchFieldError e2) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.WRITING.ordinal()] = 3;
            } catch (NoSuchFieldError e3) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.WRITING_DONE.ordinal()] = 4;
            } catch (NoSuchFieldError e4) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STIKER_MESSAGE.ordinal()] = 5;
            } catch (NoSuchFieldError e5) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PERSONCONTACT.ordinal()] = 6;
            } catch (NoSuchFieldError e6) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.SVG_EMOTICONS.ordinal()] = 7;
            } catch (NoSuchFieldError e7) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.SHARE_SLINK.ordinal()] = 8;
            } catch (NoSuchFieldError e8) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.QUOTE.ordinal()] = 9;
            } catch (NoSuchFieldError e9) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.MESSAGE.ordinal()] = 10;
            } catch (NoSuchFieldError e10) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTMESSAGE.ordinal()] = 11;
            } catch (NoSuchFieldError e11) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.OBJECTCOMMENT.ordinal()] = 12;
            } catch (NoSuchFieldError e12) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STIKER_MESSAGE_NIC.ordinal()] = 13;
            } catch (NoSuchFieldError e13) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.NIC_MESSAGE.ordinal()] = 14;
            } catch (NoSuchFieldError e14) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.SERVER_MESSAGE.ordinal()] = 15;
            } catch (NoSuchFieldError e15) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTVOICE.ordinal()] = 16;
            } catch (NoSuchFieldError e16) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.LONGSTATUSCOMMENT.ordinal()] = 17;
            } catch (NoSuchFieldError e17) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTVIDEOSTATUS.ordinal()] = 18;
            } catch (NoSuchFieldError e18) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTVOICESTATUS.ordinal()] = 19;
            } catch (NoSuchFieldError e19) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTIMAGESTATUS.ordinal()] = 20;
            } catch (NoSuchFieldError e20) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PHOTOSEND_WCOMMENT.ordinal()] = 21;
            } catch (NoSuchFieldError e21) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.DATASEND_WCOMMENT.ordinal()] = 22;
            } catch (NoSuchFieldError e22) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.REQUESTFRD.ordinal()] = 23;
            } catch (NoSuchFieldError e23) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.ACCEPTFRD.ordinal()] = 24;
            } catch (NoSuchFieldError e24) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STATUSUPDT.ordinal()] = 25;
            } catch (NoSuchFieldError e25) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.USERNAMEUPDT.ordinal()] = 26;
            } catch (NoSuchFieldError e26) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PROFILEUPDT.ordinal()] = 27;
            } catch (NoSuchFieldError e27) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.USER_ACTIVITY.ordinal()] = 28;
            } catch (NoSuchFieldError e28) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.DELIVERED.ordinal()] = 29;
            } catch (NoSuchFieldError e29) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.READ.ordinal()] = 30;
            } catch (NoSuchFieldError e30) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.DELETEFRD.ordinal()] = 31;
            } catch (NoSuchFieldError e31) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.DELETE_FRIEND_PENDING.ordinal()] = 32;
            } catch (NoSuchFieldError e32) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.REQUESTPFI.ordinal()] = 33;
            } catch (NoSuchFieldError e33) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PHOTOUPDT.ordinal()] = 34;
            } catch (NoSuchFieldError e34) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.P2PCHANNELOPEN.ordinal()] = 35;
            } catch (NoSuchFieldError e35) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.P2PENDOFDATA.ordinal()] = 36;
            } catch (NoSuchFieldError e36) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.P2PDATAREADY.ordinal()] = 37;
            } catch (NoSuchFieldError e37) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.P2PDATADELIVERED.ordinal()] = 38;
            } catch (NoSuchFieldError e38) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STATUSLIKE.ordinal()] = 39;
            } catch (NoSuchFieldError e39) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STIKER_MESSAGE_STATUS.ordinal()] = 40;
            } catch (NoSuchFieldError e40) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.DELETE_STATUSCOMENT_BYOWNER.ordinal()] = 41;
            } catch (NoSuchFieldError e41) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.PROMOTECONTACT.ordinal()] = 42;
            } catch (NoSuchFieldError e42) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.SHARE_SLINK_AT_COMMENT.ordinal()] = 43;
            } catch (NoSuchFieldError e43) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.STATUSCOMMENT.ordinal()] = 44;
            } catch (NoSuchFieldError e44) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_CREATE.ordinal()] = 45;
            } catch (NoSuchFieldError e45) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_MESSAGE.ordinal()] = 46;
            } catch (NoSuchFieldError e46) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_DROP.ordinal()] = 47;
            } catch (NoSuchFieldError e47) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_LEAVE.ordinal()] = 48;
            } catch (NoSuchFieldError e48) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_JOINED.ordinal()] = 49;
            } catch (NoSuchFieldError e49) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.CONFRC_INVITEDBY.ordinal()] = 50;
            } catch (NoSuchFieldError e50) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.BCASTCONFERENCE.ordinal()] = 51;
            } catch (NoSuchFieldError e51) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.LIKE.ordinal()] = 52;
            } catch (NoSuchFieldError e52) {
            }
            try {
                $SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType[MessageType.UNLIKE.ordinal()] = 53;
            } catch (NoSuchFieldError e53) {
            }
        }
    }

    public class LongMessageDatabaseFinishing implements Runnable {
        private CatfishService mService = null;
        private CatfishMessageObject message = null;

        public LongMessageDatabaseFinishing(CatfishService catfishService, CatfishMessageObject catfishMessageObject) {
            this.mService = catfishService;
            this.message = catfishMessageObject;
        }

        public void run() {
            int i;
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            Bundle bundle = new Bundle();
            CatfishDataStorage catfishDataStorage = new CatfishDataStorage(this.mService);
            FriendListDataStorage friendListDataStorage = new FriendListDataStorage(this.mService);
            if (friendListDataStorage.isSenderAFriend(this.message)) {
                MessageSender messageSender = new MessageSender();
                messageSender.senderpin = this.message.senderpin;
                messageSender.sequence = this.message.sequence;
                arrayList.add(messageSender);
                bundle.putInt(this.message.senderpin, this.message.messagetype.ordinal());
                CatfishMessageObject catfishMessageObject = this.message;
                catfishMessageObject.userpin = CatfishServiceExecutor.this.userpin;
                catfishMessageObject.deliverystatus = MessageDeliveryStatus.RECEIVED;
                arrayList2.add(catfishMessageObject);
                i = 1;
            } else {
                if (friendListDataStorage.isSenderInPendingReq(this.message)) {
                    this.mService.postRunnableToService(new ReSendFriendRequest(this.message.senderpin));
                }
                i = 0;
            }
            if (arrayList.size() > 0) {
                this.mService.postRunnableToService(new SendDeliveredSignal(this.mService, CatfishServiceExecutor.this.server, CatfishServiceExecutor.this.userpin, arrayList), 0);
            }
            if (arrayList2.size() > 0) {
                catfishDataStorage.storeMessages(arrayList2, Callback.DEFAULT_SWIPE_ANIMATION_DURATION);
                if (i > 0) {
                    this.mService.signalHasNewMessage(arrayList2.size(), bundle);
                }
                arrayList2.clear();
            }
        }
    }

    public class LongMessageRunnable implements Runnable {
        private CatfishService mService = null;
        private CatfishMessageObject message = null;

        public LongMessageRunnable(CatfishService catfishService, CatfishMessageObject catfishMessageObject) {
            this.mService = catfishService;
            this.message = catfishMessageObject;
        }

        public void run() {
            String concateJSONMessage = new LongMessageExecutor().concateJSONMessage(this.message.message);
            if (concateJSONMessage != null) {
                Log.d(CatfishServiceExecutor.TAG, "longmessage != null sequence = " + this.message.sequence);
                this.message.message = concateJSONMessage;
                this.mService.postRunnableToDbThread(new LongMessageDatabaseFinishing(this.mService, this.message));
            }
        }
    }

    public class LongStatusCommentDatabaseFinishing implements Runnable {
        private CatfishService mService = null;
        private CatfishMessageObject message = null;

        public LongStatusCommentDatabaseFinishing(CatfishService catfishService, CatfishMessageObject catfishMessageObject) {
            this.mService = catfishService;
            this.message = catfishMessageObject;
        }

        public void run() {
            int i = 0;
            ArrayList arrayList = new ArrayList();
            Bundle bundle = new Bundle();
            CatfishDataStorage catfishDataStorage = new CatfishDataStorage(this.mService);
            FriendListDataStorage friendListDataStorage = new FriendListDataStorage(this.mService);
            CatfishMessageObject catfishMessageObject = this.message;
            long friendStatusSequence = friendListDataStorage.getFriendStatusSequence(catfishMessageObject.object_owner);
            int i2 = catfishMessageObject.object_owner.compareTo(CatfishService.getUserPIN()) == 0 ? 1 : 0;
            if (i2 != 0) {
                CatfishService catfishService = this.mService;
                friendStatusSequence = CatfishService.getCatfishPreferences().getLong(CatfishService.USERSTATUS_SEQ_PREF, 0);
            }
            if (friendStatusSequence != 0 || i2 != 0) {
                int i3;
                if (friendStatusSequence != catfishMessageObject.object_sequence) {
                    if (friendStatusSequence < catfishMessageObject.object_sequence && i2 == 0) {
                        catfishDataStorage.deleteChatConversation("sc:" + catfishMessageObject.object_owner + ":" + String.valueOf(friendStatusSequence));
                        catfishDataStorage.deleteChatConversationResponse(catfishMessageObject.object_owner, "scl:");
                        friendListDataStorage.updateFriendStatusSeq(catfishMessageObject.object_owner, catfishMessageObject.object_sequence);
                    } else {
                        return;
                    }
                }
                if ((friendListDataStorage.isPinAFriend(catfishMessageObject.object_owner) || i2 != 0) && catfishMessageObject.object_sequence != 0) {
                    bundle.putInt(this.message.senderpin, this.message.messagetype.ordinal());
                    bundle.putString(this.message.senderpin + AlbusModelObject.OWNER, this.message.object_owner);
                    CatfishMessageObject catfishMessageObject2 = this.message;
                    catfishMessageObject2.deliverystatus = MessageDeliveryStatus.RECEIVED;
                    if (i2 != 0) {
                        catfishMessageObject2.userpin = CatfishService.getUserPIN();
                        catfishMessageObject2.conversation_key = "sc:" + catfishMessageObject2.userpin + ":" + String.valueOf(catfishMessageObject2.object_sequence);
                        i3 = 1;
                    } else {
                        catfishMessageObject2.userpin = CatfishServiceExecutor.this.userpin;
                        catfishMessageObject2.conversation_key = "sc:" + catfishMessageObject2.object_owner + ":" + String.valueOf(catfishMessageObject2.object_sequence);
                        i3 = 0;
                        i = 1;
                    }
                    arrayList.add(catfishMessageObject2);
                    friendListDataStorage.setUnReadStatCommStatus(catfishMessageObject.object_owner, 1, catfishMessageObject.rcvtimestamp);
                } else {
                    i3 = 0;
                }
                if (arrayList.size() > 0) {
                    catfishDataStorage.storeMessages(arrayList, 100);
                    if (i3 > 0) {
                        this.mService.signalHasCommentonStatus();
                        catfishDataStorage.increaseUnreadStatusCommentCount(i3);
                    }
                    if (i > 0) {
                        arrayList.clear();
                    } else {
                        arrayList.clear();
                    }
                }
            }
        }
    }

    public class LongStatusCommentRunnable implements Runnable {
        private CatfishService mService = null;
        private CatfishMessageObject message = null;

        public LongStatusCommentRunnable(CatfishService catfishService, CatfishMessageObject catfishMessageObject) {
            this.mService = catfishService;
            this.message = catfishMessageObject;
        }

        public void run() {
            String concateJSONMessage = new LongMessageExecutor().concateJSONMessage(this.message.message);
            if (concateJSONMessage != null) {
                Log.d(CatfishServiceExecutor.TAG, "longmessage != null sequence = " + this.message.sequence);
                this.message.message = concateJSONMessage;
                this.mService.postRunnableToDbThread(new LongStatusCommentDatabaseFinishing(this.mService, this.message));
            }
        }
    }

    public class MessageSender {
        public String senderpin = null;
        public long sequence = 0;
    }

    public class ProcessMessagesInDBThread implements Runnable {
        private CatfishResult mMessages = null;
        private String mServer = null;
        private CatfishService mService = null;
        private String mUserpin = null;

        public ProcessMessagesInDBThread(CatfishService catfishService, String str, String str2, CatfishResult catfishResult) {
            this.mService = catfishService;
            this.mServer = str;
            this.mUserpin = str2;
            this.mMessages = catfishResult;
        }

        public void cleaningup() {
            this.mService = null;
            this.mServer = null;
            this.mUserpin = null;
            if (this.mMessages != null) {
                this.mMessages.cleaningup();
            }
            this.mMessages = null;
        }

        public void deleteImageFiles(Cursor cursor, int i) {
            cursor.moveToFirst();
            for (int i2 = 0; i2 < i; i2++) {
                Log.d(CatfishServiceExecutor.TAG, "to deleted imagefile:" + cursor.getString(0));
                File file = new File(cursor.getString(0));
                if (file.exists()) {
                    file.delete();
                    Log.d(CatfishServiceExecutor.TAG, "deleted imagefile:" + cursor.getString(0));
                }
                cursor.moveToNext();
            }
            cursor.close();
        }

        public void deletePromoteFriendImage(Cursor cursor, int i) {
            cursor.moveToFirst();
            for (int i2 = 0; i2 < i; i2++) {
                String str = CatfishPhotoStorage.getImageStorageDir(this.mService) + "/img" + getContactPin(cursor.getString(0)) + ".jpg";
                Log.d(CatfishServiceExecutor.TAG, "to deleted imagefile:" + str);
                File file = new File(str);
                if (file.exists()) {
                    file.delete();
                    Log.d(CatfishServiceExecutor.TAG, "deleted imagefile:" + str);
                }
                cursor.moveToNext();
            }
            cursor.close();
        }

        public void deleteVoiceFiles(Cursor cursor, int i) {
            cursor.moveToFirst();
            for (int i2 = 0; i2 < i; i2++) {
                File file = new File(cursor.getString(0));
                if (file.exists()) {
                    file.delete();
                }
                cursor.moveToNext();
            }
            cursor.close();
        }

        public String getContactPin(String str) {
            String str2 = "-";
            try {
                JSONObject jSONObject = new JSONObject(str);
                Log.d(CatfishServiceExecutor.TAG, "isi:" + str);
                if (jSONObject.has("contacts")) {
                    str2 = jSONObject.getJSONArray("contacts").getJSONObject(0).getString("pin");
                }
            } catch (Exception e) {
                Log.e(CatfishServiceExecutor.TAG, "Error: " + e.toString());
            }
            return str2;
        }

        /* JADX WARNING: inconsistent code. */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void run() {
            /*
            r37 = this;
            r28 = new com.catfiz.service.CatfishDataStorage;
            r0 = r37;
            r2 = r0.mService;
            r0 = r28;
            r0.<init>(r2);
            r29 = new com.catfiz.service.FriendListDataStorage;
            r0 = r37;
            r2 = r0.mService;
            r0 = r29;
            r0.<init>(r2);
            r0 = r37;
            r2 = r0.mMessages;
            if (r2 == 0) goto L_0x2136;
        L_0x001c:
            r0 = r37;
            r2 = r0.mMessages;
            r2 = r2.getCount();
            if (r2 <= 0) goto L_0x2136;
        L_0x0026:
            r30 = new java.util.ArrayList;
            r30.<init>();
            r31 = new java.util.ArrayList;
            r31.<init>();
            r32 = new java.util.ArrayList;
            r32.<init>();
            r33 = new java.util.ArrayList;
            r33.<init>();
            r12 = 0;
            r11 = 0;
            r10 = 0;
            r34 = new android.os.Bundle;
            r34.<init>();
            r35 = new android.os.Bundle;
            r35.<init>();
            r9 = 0;
            r8 = 0;
            r7 = 0;
            r6 = 0;
            r5 = 0;
            r4 = 0;
            r3 = 0;
            r2 = 0;
            r0 = r37;
            r13 = r0.mMessages;
            r13 = r13.messages;
            r36 = r13.iterator();
            r17 = r2;
            r18 = r3;
            r19 = r4;
            r20 = r5;
            r21 = r6;
            r22 = r7;
            r23 = r8;
            r24 = r9;
            r25 = r10;
            r26 = r11;
            r27 = r12;
        L_0x006f:
            r2 = r36.hasNext();
            if (r2 == 0) goto L_0x1e3f;
        L_0x0075:
            r2 = r36.next();
            r16 = r2;
            r16 = (com.catfiz.service.CatfishMessageObject) r16;
            r0 = r28;
            r1 = r16;
            r2 = r0.isBlackListNic(r1);
            if (r2 == 0) goto L_0x00a7;
        L_0x0087:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "sender ignored:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r16.recycle();
            goto L_0x006f;
        L_0x00a7:
            r2 = com.catfiz.service.CatfishServiceExecutor.AnonymousClass1.$SwitchMap$com$catfiz$service$CatfishRESTAPI$MessageType;
            r0 = r16;
            r3 = r0.messagetype;
            r3 = r3.ordinal();
            r2 = r2[r3];
            switch(r2) {
                case 1: goto L_0x00e6;
                case 2: goto L_0x0136;
                case 3: goto L_0x0166;
                case 4: goto L_0x018a;
                case 5: goto L_0x01ae;
                case 6: goto L_0x0216;
                case 7: goto L_0x0216;
                case 8: goto L_0x0216;
                case 9: goto L_0x0216;
                case 10: goto L_0x0216;
                case 11: goto L_0x0377;
                case 12: goto L_0x03c3;
                case 13: goto L_0x03db;
                case 14: goto L_0x03fa;
                case 15: goto L_0x071c;
                case 16: goto L_0x0767;
                case 17: goto L_0x07a8;
                case 18: goto L_0x07f2;
                case 19: goto L_0x07f2;
                case 20: goto L_0x07f2;
                case 21: goto L_0x09ef;
                case 22: goto L_0x09ef;
                case 23: goto L_0x0a54;
                case 24: goto L_0x0aff;
                case 25: goto L_0x0b51;
                case 26: goto L_0x0cb0;
                case 27: goto L_0x0d13;
                case 28: goto L_0x0d43;
                case 29: goto L_0x0d82;
                case 30: goto L_0x0e05;
                case 31: goto L_0x0e88;
                case 32: goto L_0x0f46;
                case 33: goto L_0x0fc3;
                case 34: goto L_0x0fe2;
                case 35: goto L_0x1055;
                case 36: goto L_0x1092;
                case 37: goto L_0x10c0;
                case 38: goto L_0x10ee;
                case 39: goto L_0x111b;
                case 40: goto L_0x12e7;
                case 41: goto L_0x134f;
                case 42: goto L_0x134f;
                case 43: goto L_0x134f;
                case 44: goto L_0x134f;
                case 45: goto L_0x16fb;
                case 46: goto L_0x1833;
                case 47: goto L_0x1928;
                case 48: goto L_0x19b2;
                case 49: goto L_0x1a45;
                case 50: goto L_0x1bc9;
                case 51: goto L_0x1c4e;
                case 52: goto L_0x1c66;
                case 53: goto L_0x1e09;
                default: goto L_0x00b6;
            };
        L_0x00b6:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
        L_0x00cc:
            r16.recycle();
            r17 = r2;
            r18 = r3;
            r19 = r4;
            r20 = r5;
            r21 = r6;
            r22 = r7;
            r23 = r8;
            r24 = r9;
            r25 = r10;
            r26 = r11;
            r27 = r12;
            goto L_0x006f;
        L_0x00e6:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderAFriend(r1);
            if (r2 == 0) goto L_0x011f;
        L_0x00f0:
            r2 = new com.catfiz.service.CatfishServiceExecutor$MessageSender;
            r2.<init>();
            r0 = r16;
            r3 = r0.senderpin;
            r2.senderpin = r3;
            r0 = r16;
            r4 = r0.sequence;
            r2.sequence = r4;
            r0 = r30;
            r0.add(r2);
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            r2 = r16.getRefCopy();
            r0 = r31;
            r0.add(r2);
            r26 = r26 + 1;
        L_0x011f:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0136:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.CatfishServiceExecutor$LongMessageRunnable;
            r0 = r37;
            r4 = com.catfiz.service.CatfishServiceExecutor.this;
            r0 = r37;
            r5 = r0.mService;
            r6 = r16.getRefCopy();
            r3.<init>(r5, r6);
            r2.postRunnableToLongMessageThread(r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0166:
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r2 = r0.senderpin;
            r3 = 0;
            com.catfiz.service.CatfishService.signalHasOnTyping(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x018a:
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r2 = r0.senderpin;
            r3 = 1;
            com.catfiz.service.CatfishService.signalHasOnTyping(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x01ae:
            r2 = "CatfishServiceExecutor";
            r3 = " STIKER_MESSAGE received ";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.sticker.StickerDatabaseExecutor;
            r4 = 0;
            r5 = com.catfiz.sticker.StickerDatabaseExecutor.StickerDatabaseAction.PREPARE_STICKER;
            r0 = r16;
            r6 = r0.message;
            r3.<init>(r4, r5, r6);
            r2.postRunnableToDbThread(r3);
            r4 = new com.catfiz.sticker.StickerDataStorage;
            r0 = r37;
            r2 = r0.mService;
            r4.<init>(r2);
            r2 = 0;
            r3 = new org.json.JSONObject;	 Catch:{ Exception -> 0x0322 }
            r0 = r16;
            r5 = r0.message;	 Catch:{ Exception -> 0x0322 }
            r3.<init>(r5);	 Catch:{ Exception -> 0x0322 }
            r5 = "stickerId";
            r5 = r3.has(r5);	 Catch:{ Exception -> 0x0322 }
            if (r5 == 0) goto L_0x01e9;
        L_0x01e3:
            r5 = "stickerId";
            r2 = r3.getString(r5);	 Catch:{ Exception -> 0x0322 }
        L_0x01e9:
            if (r2 == 0) goto L_0x0216;
        L_0x01eb:
            r2 = r4.getStickerItemDetail(r2);
            if (r2 == 0) goto L_0x0216;
        L_0x01f1:
            r3 = r2.getCount();
            if (r3 <= 0) goto L_0x0216;
        L_0x01f7:
            r2.moveToFirst();
            r3 = "stickerheight";
            r3 = r2.getColumnIndex(r3);
            r3 = r2.getInt(r3);
            r0 = r16;
            r0.stickerheight = r3;
            r3 = "stickerwidth";
            r3 = r2.getColumnIndex(r3);
            r2 = r2.getInt(r3);
            r0 = r16;
            r0.stickerwidth = r2;
        L_0x0216:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderAFriend(r1);
            if (r2 == 0) goto L_0x0341;
        L_0x0220:
            r2 = new com.catfiz.service.CatfishServiceExecutor$MessageSender;
            r2.<init>();
            r0 = r16;
            r3 = r0.senderpin;
            r2.senderpin = r3;
            r0 = r16;
            r4 = r0.sequence;
            r2.sequence = r4;
            r0 = r30;
            r0.add(r2);
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r3 = r0.messagetype;
            r3 = r3.ordinal();
            r0 = r34;
            r0.putInt(r2, r3);
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r2 = r0.senderpin;
            r3 = 1;
            com.catfiz.service.CatfishService.signalHasOnTyping(r2, r3);
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "isi dari message--> userpin:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.userpin;
            r3 = r3.append(r4);
            r4 = " sender:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = " messagetype:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.messagetype;
            r4 = r4.ordinal();
            r3 = r3.append(r4);
            r4 = " message:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.message;
            r3 = r3.append(r4);
            r4 = " convkey:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.conversation_key;
            r3 = r3.append(r4);
            r4 = " username:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.username;
            r3 = r3.append(r4);
            r4 = " sequence:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.sequence;
            r3 = r3.append(r4);
            r4 = " objseq:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = r3.append(r4);
            r4 = " rcvtime:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.rcvtimestamp;
            r3 = r3.append(r4);
            r4 = " sendername:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.sendername;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = r16.getRefCopy();
            r0 = r31;
            r0.add(r2);
            r25 = r25 + 1;
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0322:
            r3 = move-exception;
            r5 = "CatfishServiceExecutor";
            r6 = new java.lang.StringBuilder;
            r6.<init>();
            r7 = "Error: ";
            r6 = r6.append(r7);
            r3 = r3.toString();
            r3 = r6.append(r3);
            r3 = r3.toString();
            com.catfiz.util.Log.e(r5, r3);
            goto L_0x01e9;
        L_0x0341:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderInPendingReq(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x034b:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.CatfishServiceExecutor$ReSendFriendRequest;
            r0 = r37;
            r4 = com.catfiz.service.CatfishServiceExecutor.this;
            r0 = r16;
            r5 = r0.senderpin;
            r3.<init>(r5);
            r2.postRunnableToService(r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0377:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderAFriend(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x0381:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r3 = r0.messagetype;
            r3 = r3.ordinal();
            r0 = r34;
            r0.putInt(r2, r3);
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.BCASTRECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            r2 = r16.getRefCopy();
            r0 = r31;
            r0.add(r2);
            r25 = r25 + 1;
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x03c3:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x03db:
            r2 = "CatfishServiceExecutor";
            r3 = "STICKER NIC MESSAGE: IGNORE";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x03fa:
            r0 = r16;
            r2 = r0.subtype;
            r3 = 1;
            if (r2 >= r3) goto L_0x0428;
        L_0x0401:
            r0 = r16;
            r2 = r0.subtype;
            r3 = 3000; // 0xbb8 float:4.204E-42 double:1.482E-320;
            if (r2 <= r3) goto L_0x0428;
        L_0x0409:
            r2 = "CatfishServiceExecutor";
            r3 = "ERROR: unsupported nicmessage: invalid subtype: ignore";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0428:
            r0 = r16;
            r2 = r0.senderpin;
            r3 = "6C3AA8342C";
            r2 = r2.equals(r3);
            if (r2 != 0) goto L_0x0453;
        L_0x0434:
            r2 = "CatfishServiceExecutor";
            r3 = "ERROR: invalid sender";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0453:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "OFFICIAL MESSAGE : ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.message;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = "6C3AA8342C";
            r0 = r29;
            r2 = r0.isOfficialExists(r2);
            if (r2 != 0) goto L_0x049e;
        L_0x0479:
            r2 = r29.addFirstOfficial();
            if (r2 != 0) goto L_0x049e;
        L_0x047f:
            r2 = "CatfishServiceExecutor";
            r3 = "FATAL: INVALID OFFICIAL: IGNORE";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x049e:
            r0 = r16;
            r2 = r0.message;	 Catch:{ JSONException -> 0x04cb }
            r4 = new org.json.JSONObject;	 Catch:{ JSONException -> 0x04cb }
            r4.<init>(r2);	 Catch:{ JSONException -> 0x04cb }
            r0 = r16;
            r2 = r0.subtype;	 Catch:{ JSONException -> 0x04cb }
            switch(r2) {
                case 1: goto L_0x0500;
                case 1000: goto L_0x0512;
                case 2000: goto L_0x0512;
                case 3000: goto L_0x0512;
                default: goto L_0x04ae;
            };	 Catch:{ JSONException -> 0x04cb }
        L_0x04ae:
            r2 = new org.json.JSONException;	 Catch:{ JSONException -> 0x04cb }
            r3 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x04cb }
            r3.<init>();	 Catch:{ JSONException -> 0x04cb }
            r4 = "invalid subtype: ";
            r3 = r3.append(r4);	 Catch:{ JSONException -> 0x04cb }
            r0 = r16;
            r4 = r0.subtype;	 Catch:{ JSONException -> 0x04cb }
            r3 = r3.append(r4);	 Catch:{ JSONException -> 0x04cb }
            r3 = r3.toString();	 Catch:{ JSONException -> 0x04cb }
            r2.<init>(r3);	 Catch:{ JSONException -> 0x04cb }
            throw r2;	 Catch:{ JSONException -> 0x04cb }
        L_0x04cb:
            r2 = move-exception;
        L_0x04cc:
            r3 = "CatfishServiceExecutor";
            r4 = new java.lang.StringBuilder;
            r4.<init>();
            r5 = "ERROR: OFFICIAL MESSAGE: ";
            r4 = r4.append(r5);
            r2 = r2.toString();
            r2 = r4.append(r2);
            r2 = r2.toString();
            com.catfiz.util.Log.e(r3, r2);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0500:
            r0 = r16;
            r3 = r0.senderpin;	 Catch:{ JSONException -> 0x04cb }
            r0 = r16;
            r2 = r0.sendername;	 Catch:{ JSONException -> 0x04cb }
        L_0x0508:
            if (r3 != 0) goto L_0x0574;
        L_0x050a:
            r2 = new org.json.JSONException;	 Catch:{ JSONException -> 0x04cb }
            r3 = "invalid senderpin: null";
            r2.<init>(r3);	 Catch:{ JSONException -> 0x04cb }
            throw r2;	 Catch:{ JSONException -> 0x04cb }
        L_0x0512:
            r2 = "sn";
            r3 = r4.getString(r2);	 Catch:{ JSONException -> 0x04cb }
            r2 = "sm";
            r2 = r4.getString(r2);	 Catch:{ JSONException -> 0x04cb }
            r0 = r29;
            r5 = r0.isOfficialExists(r3);	 Catch:{ JSONException -> 0x04cb }
            if (r5 != 0) goto L_0x0508;
        L_0x0526:
            r0 = r29;
            r5 = r0.addNewOfficial(r3, r2);	 Catch:{ JSONException -> 0x04cb }
            if (r5 != 0) goto L_0x0551;
        L_0x052e:
            r4 = new org.json.JSONException;	 Catch:{ JSONException -> 0x04cb }
            r5 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x04cb }
            r5.<init>();	 Catch:{ JSONException -> 0x04cb }
            r6 = "fail to add official: ";
            r5 = r5.append(r6);	 Catch:{ JSONException -> 0x04cb }
            r3 = r5.append(r3);	 Catch:{ JSONException -> 0x04cb }
            r5 = ", name: ";
            r3 = r3.append(r5);	 Catch:{ JSONException -> 0x04cb }
            r2 = r3.append(r2);	 Catch:{ JSONException -> 0x04cb }
            r2 = r2.toString();	 Catch:{ JSONException -> 0x04cb }
            r4.<init>(r2);	 Catch:{ JSONException -> 0x04cb }
            throw r4;	 Catch:{ JSONException -> 0x04cb }
        L_0x0551:
            r5 = "CatfishServiceExecutor";
            r6 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x04cb }
            r6.<init>();	 Catch:{ JSONException -> 0x04cb }
            r7 = "ADD NEW OFFICIAL ID: ";
            r6 = r6.append(r7);	 Catch:{ JSONException -> 0x04cb }
            r6 = r6.append(r3);	 Catch:{ JSONException -> 0x04cb }
            r7 = ", NAME: ";
            r6 = r6.append(r7);	 Catch:{ JSONException -> 0x04cb }
            r6 = r6.append(r2);	 Catch:{ JSONException -> 0x04cb }
            r6 = r6.toString();	 Catch:{ JSONException -> 0x04cb }
            com.catfiz.util.Log.d(r5, r6);	 Catch:{ JSONException -> 0x04cb }
            goto L_0x0508;
        L_0x0574:
            if (r2 != 0) goto L_0x057e;
        L_0x0576:
            r2 = new org.json.JSONException;	 Catch:{ JSONException -> 0x04cb }
            r3 = "invalid sendername: null";
            r2.<init>(r3);	 Catch:{ JSONException -> 0x04cb }
            throw r2;	 Catch:{ JSONException -> 0x04cb }
        L_0x057e:
            r5 = "mc";
            r12 = r4.getJSONArray(r5);	 Catch:{ JSONException -> 0x04cb }
            r13 = r12.length();	 Catch:{ JSONException -> 0x04cb }
            if (r13 > 0) goto L_0x05a2;
        L_0x058a:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x05a2:
            r4 = "CatfishServiceExecutor";
            r5 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x04cb }
            r5.<init>();	 Catch:{ JSONException -> 0x04cb }
            r6 = "OFFICIAL MESSAGE: length: ";
            r5 = r5.append(r6);	 Catch:{ JSONException -> 0x04cb }
            r5 = r5.append(r13);	 Catch:{ JSONException -> 0x04cb }
            r5 = r5.toString();	 Catch:{ JSONException -> 0x04cb }
            com.catfiz.util.Log.d(r4, r5);	 Catch:{ JSONException -> 0x04cb }
            r14 = com.catfiz.service.CatfishMessageObject.obtain();	 Catch:{ JSONException -> 0x04cb }
            r0 = r37;
            r4 = r0.mUserpin;	 Catch:{ JSONException -> 0x04cb }
            r14.userpin = r4;	 Catch:{ JSONException -> 0x04cb }
            r14.senderpin = r3;	 Catch:{ JSONException -> 0x04cb }
            r14.sendername = r2;	 Catch:{ JSONException -> 0x04cb }
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;	 Catch:{ JSONException -> 0x04cb }
            r14.deliverystatus = r2;	 Catch:{ JSONException -> 0x04cb }
            r2 = com.catfiz.service.CatfishRESTAPI.MessageType.MESSAGE;	 Catch:{ JSONException -> 0x04cb }
            r14.messagetype = r2;	 Catch:{ JSONException -> 0x04cb }
            r0 = r16;
            r2 = r0.subtype;	 Catch:{ JSONException -> 0x04cb }
            r14.subtype = r2;	 Catch:{ JSONException -> 0x04cb }
            r2 = 0;
            r11 = r2;
            r2 = r17;
        L_0x05da:
            if (r11 >= r13) goto L_0x0703;
        L_0x05dc:
            r3 = r12.getJSONObject(r11);	 Catch:{ JSONException -> 0x215a }
            r4 = "sq";
            r4 = r3.has(r4);	 Catch:{ JSONException -> 0x215a }
            if (r4 != 0) goto L_0x060a;
        L_0x05e8:
            r3 = "CatfishServiceExecutor";
            r4 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x215a }
            r4.<init>();	 Catch:{ JSONException -> 0x215a }
            r5 = "official message[";
            r4 = r4.append(r5);	 Catch:{ JSONException -> 0x215a }
            r4 = r4.append(r11);	 Catch:{ JSONException -> 0x215a }
            r5 = "] has no sequence: SKIP";
            r4 = r4.append(r5);	 Catch:{ JSONException -> 0x215a }
            r4 = r4.toString();	 Catch:{ JSONException -> 0x215a }
            com.catfiz.util.Log.d(r3, r4);	 Catch:{ JSONException -> 0x215a }
        L_0x0606:
            r3 = r11 + 1;
            r11 = r3;
            goto L_0x05da;
        L_0x060a:
            r4 = "sq";
            r4 = r3.getLong(r4);	 Catch:{ JSONException -> 0x215a }
            r14.sequence = r4;	 Catch:{ JSONException -> 0x215a }
            r4 = "m";
            r4 = r3.has(r4);	 Catch:{ JSONException -> 0x215a }
            if (r4 == 0) goto L_0x0622;
        L_0x061a:
            r4 = "m";
            r4 = r3.getString(r4);	 Catch:{ JSONException -> 0x215a }
            r14.message = r4;	 Catch:{ JSONException -> 0x215a }
        L_0x0622:
            r4 = "lm";
            r4 = r3.has(r4);	 Catch:{ JSONException -> 0x215a }
            if (r4 == 0) goto L_0x0632;
        L_0x062a:
            r4 = "lm";
            r4 = r3.getString(r4);	 Catch:{ JSONException -> 0x215a }
            r14.longmessagelink = r4;	 Catch:{ JSONException -> 0x215a }
        L_0x0632:
            r4 = "cl";
            r4 = r3.has(r4);	 Catch:{ JSONException -> 0x215a }
            if (r4 == 0) goto L_0x0642;
        L_0x063a:
            r4 = "cl";
            r4 = r3.getString(r4);	 Catch:{ JSONException -> 0x215a }
            r14.slink = r4;	 Catch:{ JSONException -> 0x215a }
        L_0x0642:
            r4 = "t";
            r4 = r3.has(r4);	 Catch:{ JSONException -> 0x215a }
            if (r4 == 0) goto L_0x0652;
        L_0x064a:
            r4 = "t";
            r3 = r3.getInt(r4);	 Catch:{ JSONException -> 0x215a }
            r14.type = r3;	 Catch:{ JSONException -> 0x215a }
        L_0x0652:
            r4 = com.catfiz.service.CatfishRESTAPI.uniqueMonotonicSequence();	 Catch:{ JSONException -> 0x215a }
            r14.rcvtimestamp = r4;	 Catch:{ JSONException -> 0x215a }
            r3 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x215a }
            r3.<init>();	 Catch:{ JSONException -> 0x215a }
            r0 = r37;
            r4 = r0.mUserpin;	 Catch:{ JSONException -> 0x215a }
            r3 = r3.append(r4);	 Catch:{ JSONException -> 0x215a }
            r4 = ":";
            r3 = r3.append(r4);	 Catch:{ JSONException -> 0x215a }
            r4 = r14.senderpin;	 Catch:{ JSONException -> 0x215a }
            r3 = r3.append(r4);	 Catch:{ JSONException -> 0x215a }
            r3 = r3.toString();	 Catch:{ JSONException -> 0x215a }
            r14.conversation_key = r3;	 Catch:{ JSONException -> 0x215a }
            r3 = "CatfishServiceExecutor";
            r4 = new java.lang.StringBuilder;	 Catch:{ JSONException -> 0x215a }
            r4.<init>();	 Catch:{ JSONException -> 0x215a }
            r5 = "STORE OFFICIAL MESSAGE TO DB: ";
            r4 = r4.append(r5);	 Catch:{ JSONException -> 0x215a }
            r5 = r14.conversation_key;	 Catch:{ JSONException -> 0x215a }
            r4 = r4.append(r5);	 Catch:{ JSONException -> 0x215a }
            r4 = r4.toString();	 Catch:{ JSONException -> 0x215a }
            com.catfiz.util.Log.d(r3, r4);	 Catch:{ JSONException -> 0x215a }
            r0 = r28;
            r0.storeOfficialMessage(r14);	 Catch:{ JSONException -> 0x215a }
            r10 = r2 + 1;
            r2 = r14.slink;	 Catch:{ JSONException -> 0x2160 }
            if (r2 == 0) goto L_0x06bc;
        L_0x069c:
            r2 = r14.slink;	 Catch:{ JSONException -> 0x2160 }
            r2 = r2.isEmpty();	 Catch:{ JSONException -> 0x2160 }
            if (r2 != 0) goto L_0x06bc;
        L_0x06a4:
            r0 = r37;
            r2 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r3 = new com.catfiz.service.uisvcexec.GetStreamThumbnailExecutor;	 Catch:{ JSONException -> 0x2160 }
            r0 = r37;
            r4 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r5 = r14.slink;	 Catch:{ JSONException -> 0x2160 }
            r3.<init>(r4, r5);	 Catch:{ JSONException -> 0x2160 }
            r4 = 2;
            r2.postToServiceHandler(r3, r4);	 Catch:{ JSONException -> 0x2160 }
            r2 = r14.type;	 Catch:{ JSONException -> 0x2160 }
            switch(r2) {
                case 2: goto L_0x06e1;
                case 3: goto L_0x06bc;
                case 4: goto L_0x06bf;
                default: goto L_0x06bc;
            };	 Catch:{ JSONException -> 0x2160 }
        L_0x06bc:
            r2 = r10;
            goto L_0x0606;
        L_0x06bf:
            r8 = 1;
            r0 = r37;
            r15 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r2 = new com.catfiz.service.SlinkFileInfoExecutor;	 Catch:{ JSONException -> 0x2160 }
            r0 = r37;
            r3 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r4 = r14.sequence;	 Catch:{ JSONException -> 0x2160 }
            r0 = r37;
            r6 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r6 = com.catfiz.service.CatfishService.getCurrentServerHost();	 Catch:{ JSONException -> 0x2160 }
            r7 = r14.slink;	 Catch:{ JSONException -> 0x2160 }
            r9 = 0;
            r2.<init>(r3, r4, r6, r7, r8, r9);	 Catch:{ JSONException -> 0x2160 }
            r3 = 2;
            r15.postRunnableToService(r2, r3);	 Catch:{ JSONException -> 0x2160 }
            r2 = r10;
            goto L_0x0606;
        L_0x06e1:
            r8 = 0;
            r0 = r37;
            r15 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r2 = new com.catfiz.service.SlinkFileInfoExecutor;	 Catch:{ JSONException -> 0x2160 }
            r0 = r37;
            r3 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r4 = r14.sequence;	 Catch:{ JSONException -> 0x2160 }
            r0 = r37;
            r6 = r0.mService;	 Catch:{ JSONException -> 0x2160 }
            r6 = com.catfiz.service.CatfishService.getCurrentServerHost();	 Catch:{ JSONException -> 0x2160 }
            r7 = r14.slink;	 Catch:{ JSONException -> 0x2160 }
            r9 = 0;
            r2.<init>(r3, r4, r6, r7, r8, r9);	 Catch:{ JSONException -> 0x2160 }
            r3 = 2;
            r15.postRunnableToService(r2, r3);	 Catch:{ JSONException -> 0x2160 }
            r2 = r10;
            goto L_0x0606;
        L_0x0703:
            r14.recycle();	 Catch:{ JSONException -> 0x215a }
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x071c:
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageType.SERVER_MESSAGE;
            r0 = r16;
            r0.messagetype = r2;
            r2 = "##########";
            r0 = r16;
            r0.senderpin = r2;
            r2 = new com.catfiz.service.ServerMessageDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r0 = r16;
            r2.storeServerMessage(r0);
            r2 = r2.getServerMessage();
            r0 = r37;
            r3 = r0.mService;
            r3.signalServerMessageReceived(r2);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0767:
            r0 = r37;
            r12 = r0.mService;
            r2 = new com.catfiz.service.VoiceBcastDLoadExecutor;
            r0 = r37;
            r3 = r0.mService;
            r0 = r37;
            r4 = r0.mServer;
            r0 = r37;
            r5 = r0.mUserpin;
            r0 = r16;
            r6 = r0.senderpin;
            r0 = r16;
            r7 = r0.message;
            r0 = r16;
            r8 = r0.sequence;
            r0 = r16;
            r10 = r0.object_sequence;
            r2.<init>(r3, r4, r5, r6, r7, r8, r10);
            r3 = 2;
            r12.postRunnableToService(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x07a8:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.StatusDataBcastDLoadExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.senderpin;
            r0 = r16;
            r8 = r0.message;
            r0 = r16;
            r9 = r0.sendername;
            r0 = r16;
            r10 = r0.sequence;
            r0 = r16;
            r12 = r0.object_sequence;
            r0 = r16;
            r14 = r0.object_owner;
            r15 = 0;
            r3.<init>(r4, r5, r6, r7, r8, r9, r10, r12, r14, r15);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x07f2:
            r0 = r37;
            r2 = r0.mService;
            r2 = android.preference.PreferenceManager.getDefaultSharedPreferences(r2);
            r3 = "CatfishServiceExecutor";
            r4 = new java.lang.StringBuilder;
            r4.<init>();
            r5 = "userpincuk";
            r4 = r4.append(r5);
            r0 = r37;
            r5 = r0.mUserpin;
            r4 = r4.append(r5);
            r4 = r4.toString();
            com.catfiz.util.Log.d(r3, r4);
            r3 = "status_auto_download";
            r4 = 0;
            r2 = r2.getBoolean(r3, r4);
            if (r2 == 0) goto L_0x0869;
        L_0x081f:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.StatusDataBcastDLoadExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.senderpin;
            r0 = r16;
            r8 = r0.message;
            r0 = r16;
            r9 = r0.sendername;
            r0 = r16;
            r10 = r0.sequence;
            r0 = r16;
            r12 = r0.object_sequence;
            r0 = r16;
            r14 = r0.object_owner;
            r15 = 0;
            r3.<init>(r4, r5, r6, r7, r8, r9, r10, r12, r14, r15);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
        L_0x0851:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0869:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.getFriendStatusSequence(r2);
            r0 = r16;
            r4 = r0.object_owner;
            r5 = com.catfiz.service.CatfishService.getUserPIN();
            r4 = r4.compareTo(r5);
            if (r4 != 0) goto L_0x08b4;
        L_0x0881:
            r4 = 1;
        L_0x0882:
            if (r4 == 0) goto L_0x0894;
        L_0x0884:
            r0 = r37;
            r2 = r0.mService;
            r2 = com.catfiz.service.CatfishService.getCatfishPreferences();
            r3 = "userstatus_seq";
            r6 = 0;
            r2 = r2.getLong(r3, r6);
        L_0x0894:
            r6 = 0;
            r5 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1));
            if (r5 != 0) goto L_0x08b6;
        L_0x089a:
            if (r4 != 0) goto L_0x08b6;
        L_0x089c:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x08b4:
            r4 = 0;
            goto L_0x0882;
        L_0x08b6:
            r0 = r16;
            r6 = r0.object_sequence;
            r5 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1));
            if (r5 == 0) goto L_0x090a;
        L_0x08be:
            r0 = r16;
            r6 = r0.object_sequence;
            r5 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1));
            if (r5 >= 0) goto L_0x00b6;
        L_0x08c6:
            if (r4 != 0) goto L_0x00b6;
        L_0x08c8:
            r5 = new java.lang.StringBuilder;
            r5.<init>();
            r6 = "sc:";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.object_owner;
            r5 = r5.append(r6);
            r6 = ":";
            r5 = r5.append(r6);
            r2 = java.lang.String.valueOf(r2);
            r2 = r5.append(r2);
            r2 = r2.toString();
            r0 = r28;
            r0.deleteChatConversation(r2);
            r0 = r16;
            r2 = r0.object_owner;
            r3 = "scl:";
            r0 = r28;
            r0.deleteChatConversationResponse(r2, r3);
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r16;
            r6 = r0.object_sequence;
            r0 = r29;
            r0.updateFriendStatusSeq(r2, r6);
        L_0x090a:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.isPinAFriend(r2);
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r29;
            r3 = r0.isPinAFriend(r3);
            if (r2 != 0) goto L_0x0924;
        L_0x0920:
            if (r4 == 0) goto L_0x0851;
        L_0x0922:
            if (r3 == 0) goto L_0x0851;
        L_0x0924:
            r0 = r16;
            r2 = r0.object_sequence;
            r6 = 0;
            r2 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1));
            if (r2 == 0) goto L_0x0851;
        L_0x092e:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r3 = r0.messagetype;
            r3 = r3.ordinal();
            r0 = r35;
            r0.putInt(r2, r3);
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r0 = r16;
            r3 = r0.senderpin;
            r2 = r2.append(r3);
            r3 = "owner";
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r3 = r0.object_owner;
            r0 = r35;
            r0.putString(r2, r3);
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            if (r4 == 0) goto L_0x09b7;
        L_0x0967:
            r2 = com.catfiz.service.CatfishService.getUserPIN();
            r0 = r16;
            r0.userpin = r2;
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sc:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.userpin;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.String.valueOf(r4);
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r0.conversation_key = r2;
            r23 = r23 + 1;
        L_0x099e:
            r2 = r16.getRefCopy();
            r0 = r32;
            r0.add(r2);
            r0 = r16;
            r2 = r0.object_owner;
            r3 = 1;
            r0 = r16;
            r4 = r0.rcvtimestamp;
            r0 = r29;
            r0.setUnReadStatCommStatus(r2, r3, r4);
            goto L_0x0851;
        L_0x09b7:
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sc:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.object_owner;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.String.valueOf(r4);
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r0.conversation_key = r2;
            r24 = r24 + 1;
            goto L_0x099e;
        L_0x09ef:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "slink is append or not? ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.message;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.ChatDataDLoadExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.senderpin;
            r0 = r16;
            r8 = r0.message;
            r0 = r16;
            r9 = r0.sendername;
            r0 = r16;
            r10 = r0.sequence;
            r0 = r16;
            r12 = r0.sequence;
            r0 = r16;
            r14 = r0.object_owner;
            r3.<init>(r4, r5, r6, r7, r8, r9, r10, r12, r14);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0a54:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderAFriend(r1);
            if (r2 == 0) goto L_0x0a8e;
        L_0x0a5e:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.CatfishServiceExecutor$ReAcceptFriendRequest;
            r0 = r37;
            r4 = com.catfiz.service.CatfishServiceExecutor.this;
            r0 = r16;
            r5 = r0.senderpin;
            r0 = r16;
            r6 = r0.sequence;
            r3.<init>(r5, r6);
            r2.postRunnableToService(r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0a8e:
            r0 = r28;
            r1 = r16;
            r2 = r0.isBlackListNic(r1);
            if (r2 != 0) goto L_0x0ac5;
        L_0x0a98:
            r0 = r29;
            r1 = r16;
            r2 = r0.addNewFriendRequest(r1);
            if (r2 == 0) goto L_0x0aad;
        L_0x0aa2:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r33;
            r0.add(r2);
            r27 = r27 + 1;
        L_0x0aad:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0ac5:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "This NIC:";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = " is blocked";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0aff:
            r0 = r29;
            r1 = r16;
            r2 = r0.isSenderInPendingReq(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x0b09:
            r0 = r29;
            r1 = r16;
            r0.deleteSenderFromPendingRequest(r1);
            r0 = r29;
            r1 = r16;
            r2 = r0.addNewFriend(r1);
            if (r2 == 0) goto L_0x0b39;
        L_0x0b1a:
            r2 = "CatfishServiceExecutor";
            r3 = "---Post to Service: Request Friend Profile---";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.CatfishServiceExecutor$RequestNewFriendProfile;
            r0 = r37;
            r4 = com.catfiz.service.CatfishServiceExecutor.this;
            r0 = r37;
            r5 = r0.mService;
            r0 = r16;
            r6 = r0.senderpin;
            r3.<init>(r5, r6);
            r2.postRunnableToService(r3);
        L_0x0b39:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0b51:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend Status Update";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r16;
            r2 = r0.object_sequence;
            r0 = r16;
            r4 = r0.senderpin;
            r0 = r29;
            r4 = r0.getFriendStatusSequence(r4);
            r2 = (r4 > r2 ? 1 : (r4 == r2 ? 0 : -1));
            if (r2 >= 0) goto L_0x0c06;
        L_0x0b6a:
            r2 = com.catfiz.service.CatfishMessageObject.obtain();
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r6 = "sc:";
            r3 = r3.append(r6);
            r0 = r16;
            r6 = r0.senderpin;
            r3 = r3.append(r6);
            r6 = ":";
            r3 = r3.append(r6);
            r6 = java.lang.String.valueOf(r4);
            r3 = r3.append(r6);
            r3 = r3.toString();
            r2.conversation_key = r3;
            r0 = r28;
            r3 = r0.getVoiceFileInChat(r2);
            r6 = r3.getCount();
            r0 = r28;
            r7 = r0.getImageFileInChat(r2);
            r8 = r7.getCount();
            r0 = r28;
            r9 = r0.getImagePromoteFileInChat(r2);
            r10 = r9.getCount();
            r0 = r37;
            r0.deleteVoiceFiles(r3, r6);
            r0 = r37;
            r0.deleteImageFiles(r7, r8);
            r0 = r37;
            r0.deletePromoteFriendImage(r9, r10);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r6 = "sc:";
            r3 = r3.append(r6);
            r0 = r16;
            r6 = r0.senderpin;
            r3 = r3.append(r6);
            r6 = ":";
            r3 = r3.append(r6);
            r6 = java.lang.String.valueOf(r4);
            r3 = r3.append(r6);
            r3 = r3.toString();
            r0 = r28;
            r0.deleteChatConversation(r3);
            r0 = r16;
            r3 = r0.senderpin;
            r6 = "scl:";
            r0 = r28;
            r0.deleteChatConversationResponse(r3, r6);
            r0 = r16;
            r3 = r0.senderpin;
            r6 = 0;
            r8 = 0;
            r0 = r29;
            r0.setUnReadStatCommStatus(r3, r6, r8);
            r2.recycle();
        L_0x0c06:
            r0 = r29;
            r1 = r16;
            r2 = r0.updateFriendStatus(r1);
            if (r2 == 0) goto L_0x0ca8;
        L_0x0c10:
            r0 = r28;
            r1 = r16;
            r2 = r0.addRecentupdates(r1);
            if (r2 == 0) goto L_0x0c4c;
        L_0x0c1a:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r6 = r0.rcvtimestamp;
            r0 = r29;
            r0.setFriendLastActivity(r2, r6);
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r29;
            r0.setUnfollow(r2);
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r6 = r0.rcvtimestamp;
            r0 = r29;
            r0.updateLastStatusChange(r2, r6);
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishService.UpdateRecent.STATUSUPDT;
            r3 = r3.ordinal();
            r6 = "";
            r2.signalUpdatesIncoming(r3, r6);
        L_0x0c4c:
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r16;
            r6 = r0.message;
            r0 = r16;
            r8 = r0.object_sequence;
            r2.signalFriendHasStatusUpdate(r3, r6, r8);
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sl:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.senderpin;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r2 = r2.append(r4);
            r2 = r2.toString();
            r0 = r28;
            r0.deleteChatConversation(r2);
            r0 = r16;
            r2 = r0.senderpin;
            r3 = 100;
            r0 = r29;
            r0.updateActivityCount(r2, r3);
        L_0x0c90:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0ca8:
            r2 = "CatfishServiceExecutor";
            r3 = "Receive Friend Status Update: DB update FAIL";
            com.catfiz.util.Log.e(r2, r3);
            goto L_0x0c90;
        L_0x0cb0:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend Name Update";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r29;
            r2 = r0.getFriendname(r2);
            r0 = r29;
            r1 = r16;
            r3 = r0.updateFriendName(r1);
            if (r3 == 0) goto L_0x0cfb;
        L_0x0ccb:
            r3 = "CatfishServiceExecutor";
            r4 = "----Receive Friend Name Update: DB write success";
            com.catfiz.util.Log.d(r3, r4);
            r0 = r16;
            r0.username = r2;
            r0 = r28;
            r1 = r16;
            r0.addRecentupdates(r1);
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishService.UpdateRecent.USERNAMEUPDT;
            r3 = r3.ordinal();
            r4 = "";
            r2.signalUpdatesIncoming(r3, r4);
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r16;
            r4 = r0.message;
            r2.signalFriendHasNameUpdate(r3, r4);
        L_0x0cfb:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0d13:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend Profile Update";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r29;
            r1 = r16;
            r2 = r0.updateFriendDataProfile(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x0d24:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend Profile Update: DB write success";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0d43:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend USERACTIVITY Update";
            com.catfiz.util.Log.e(r2, r3);
            r0 = r29;
            r1 = r16;
            r2 = r0.updateFriendUserActivity(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x0d54:
            r2 = "CatfishServiceExecutor";
            r3 = "----Receive Friend USERACTIVITY Update: DB update success";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r16;
            r4 = r0.message;
            r2.signalFriendHasUserActivityUpdate(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0d82:
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "DELIVERED (";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ")";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.DELIVERED;
            r0 = r16;
            r0.deliverystatus = r2;
            r2 = 1;
            r0 = r16;
            r3 = r0.senderpin;
            r4 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.DELIVERED;
            r4 = r4.ordinal();
            r0 = r29;
            r0.setLastMessageStatus(r2, r3, r4);
            r0 = r28;
            r1 = r16;
            r2 = r0.updateMessageDeliveryStatus(r1);
            if (r2 == 0) goto L_0x0de6;
        L_0x0dcc:
            r18 = r18 + 1;
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0de6:
            r2 = "CatfishServiceExecutor";
            r3 = "Update delivery status to DELIVERED: FAIL";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0e05:
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.READ;
            r0 = r16;
            r0.deliverystatus = r2;
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "READ (";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ")";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = 1;
            r0 = r16;
            r3 = r0.senderpin;
            r4 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.READ;
            r4 = r4.ordinal();
            r0 = r29;
            r0.setLastMessageStatus(r2, r3, r4);
            r0 = r28;
            r1 = r16;
            r2 = r0.setAsReadMessages(r1);
            if (r2 == 0) goto L_0x0e69;
        L_0x0e4f:
            r19 = r19 + 1;
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0e69:
            r2 = "CatfishServiceExecutor";
            r3 = "Update delivery status to READ: FAIL";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0e88:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "----DELETE FRIEND: ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r0 = r28;
            r1 = r16;
            r2 = r0.deleteSenderFromFriend(r1);
            if (r2 == 0) goto L_0x00b6;
        L_0x0eb6:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "----DELETE FRIEND: ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ": DELETED";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r2.signalDeletedByFriend(r3);
            r2 = com.catfiz.service.CatfishRESTAPI.uniqueMonotonicSequence();
            r0 = r37;
            r4 = r0.mService;
            r4 = com.catfiz.service.CatfishService.getCatfishPreferences();
            r4 = r4.edit();
            r5 = "flist_timestamp";
            r2 = r4.putLong(r5, r2);
            r2.commit();
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.FriendListUpdateExecutor;
            r4 = 0;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mService;
            r6 = com.catfiz.service.CatfishService.getServerHost();
            r0 = r37;
            r7 = r0.mUserpin;
            r3.<init>(r4, r5, r6, r7);
            r2.postRunnableToService(r3);
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r2 = com.catfiz.media.CatfishPhotoStorage.delFriendFoto(r2, r3);
            if (r2 != 0) goto L_0x0f2e;
        L_0x0f27:
            r2 = "CatfishServiceExecutor";
            r3 = "delete foto gagal";
            com.catfiz.util.Log.d(r2, r3);
        L_0x0f2e:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0f46:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "----DELETE PENDING FRIEND: ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r0 = r29;
            r1 = r16;
            r2 = r0.deleteSenderFromPendingRequest(r1);
            if (r2 <= 0) goto L_0x00b6;
        L_0x0f74:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "----DELETE PENDING FRIEND: ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ": DELETED";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r0 = r16;
            r3 = r0.senderpin;
            r2 = com.catfiz.media.CatfishPhotoStorage.delFriendFoto(r2, r3);
            if (r2 != 0) goto L_0x00b6;
        L_0x0fa4:
            r2 = "CatfishServiceExecutor";
            r3 = "delete foto gagal";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0fc3:
            r2 = "CatfishServiceExecutor";
            r3 = "OBSOLETE: Request Update Profile and Photo Received: IGNORE";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x0fe2:
            r0 = r16;
            r6 = r0.senderpin;
            r0 = r29;
            r2 = r0.isPinAFriend(r6);
            if (r2 != 0) goto L_0x100d;
        L_0x0fee:
            r2 = "CatfishServiceExecutor";
            r3 = "Receive PHOTO update from non friend: IGNORE";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x100d:
            r0 = r28;
            r1 = r16;
            r0.addRecentupdates(r1);
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishService.UpdateRecent.PHOTOUPDT;
            r3 = r3.ordinal();
            r4 = "";
            r2.signalUpdatesIncoming(r3, r4);
            r0 = r37;
            r8 = r0.mService;
            r2 = new com.catfiz.service.PPFDownloadExecutor;
            r0 = r37;
            r3 = r0.mService;
            r0 = r37;
            r4 = r0.mServer;
            r0 = r37;
            r5 = r0.mUserpin;
            r7 = 1;
            r2.<init>(r3, r4, r5, r6, r7);
            r3 = 2;
            r8.postRunnableToService(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1055:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.P2PDownloadExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.senderpin;
            r0 = r16;
            r8 = r0.channelid;
            r0 = r16;
            r10 = r0.sequence;
            r3.<init>(r4, r5, r6, r7, r8, r10);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1092:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.P2PServiceExecutor$P2PDataReady;
            r0 = r37;
            r4 = r0.mService;
            r0 = r16;
            r6 = r0.channelid;
            r5 = 1;
            r3.<init>(r4, r6, r5);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x10c0:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.P2PServiceExecutor$P2PDataReady;
            r0 = r37;
            r4 = r0.mService;
            r0 = r16;
            r6 = r0.channelid;
            r5 = 0;
            r3.<init>(r4, r6, r5);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x10ee:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.P2PServiceExecutor$P2PDelivered;
            r0 = r37;
            r4 = r0.mService;
            r0 = r16;
            r6 = r0.channelid;
            r3.<init>(r4, r6);
            r4 = 2;
            r2.postRunnableToService(r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x111b:
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sl:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.object_owner;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r0 = r16;
            r4 = r0.object_sequence;
            r2 = r2.append(r4);
            r3 = r2.toString();
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r4 = r0.message;
            r0 = r28;
            r2 = r0.isUserMessageForStatusLikeExists(r2, r3, r4);
            if (r2 == 0) goto L_0x116f;
        L_0x1150:
            r2 = "CatfishServiceExecutor";
            r3 = "STATUSLIKE: Sender send more than once: IGNORE!!!";
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x116f:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r0.userpin = r2;
            r0 = r16;
            r2 = r0.sendername;
            r0 = r16;
            r0.username = r2;
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r16;
            r0.recipient = r2;
            r0 = r37;
            r2 = r0.mService;
            r4 = com.catfiz.service.CatfishService.getCatfishPreferences();
            r2 = "userstatus_seq";
            r6 = 0;
            r6 = r4.getLong(r2, r6);
            r0 = r16;
            r2 = r0.object_owner;
            if (r2 == 0) goto L_0x125c;
        L_0x119d:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r37;
            r5 = r0.mUserpin;
            r2 = r2.compareTo(r5);
            if (r2 != 0) goto L_0x125c;
        L_0x11ab:
            r0 = r16;
            r8 = r0.object_sequence;
            r2 = (r8 > r6 ? 1 : (r8 == r6 ? 0 : -1));
            if (r2 != 0) goto L_0x125c;
        L_0x11b3:
            r2 = "CatfishServiceExecutor";
            r5 = "STATUSLIKE: USER STATUS";
            com.catfiz.util.Log.d(r2, r5);
            r2 = "likestatus";
            r5 = 0;
            r2 = r4.getInt(r2, r5);
            r5 = "CatfishServiceExecutor";
            r6 = new java.lang.StringBuilder;
            r6.<init>();
            r7 = "nilai like di pref";
            r6 = r6.append(r7);
            r2 = r6.append(r2);
            r2 = r2.toString();
            com.catfiz.util.Log.d(r5, r2);
            r0 = r28;
            r5 = r0.getResponseLikeList(r3);
            r2 = r5.getCount();
            r0 = r16;
            r6 = r0.message;
            r6 = java.lang.Integer.parseInt(r6);
            r2 = r2 + r6;
            r5.close();
            if (r2 >= 0) goto L_0x11f2;
        L_0x11f1:
            r2 = 0;
        L_0x11f2:
            r5 = "CatfishServiceExecutor";
            r6 = new java.lang.StringBuilder;
            r6.<init>();
            r7 = "nilai like ditambah message";
            r6 = r6.append(r7);
            r6 = r6.append(r2);
            r6 = r6.toString();
            com.catfiz.util.Log.d(r5, r6);
            r4 = r4.edit();
            r5 = "likestatus";
            r2 = r4.putInt(r5, r2);
            r2.commit();
        L_0x1217:
            r0 = r28;
            r1 = r16;
            r0.storeUserMessageForStatusLike(r1, r3);
            r0 = r16;
            r2 = r0.object_owner;
            r3 = com.catfiz.service.CatfishService.getUserPIN();
            r2 = r2.compareTo(r3);
            if (r2 != 0) goto L_0x12a9;
        L_0x122c:
            r2 = 1;
        L_0x122d:
            if (r2 == 0) goto L_0x12ab;
        L_0x122f:
            r0 = r37;
            r2 = r0.mService;
            r2.signalHasCommentonStatus();
        L_0x1236:
            r0 = r16;
            r2 = r0.object_owner;
            r3 = 1;
            r0 = r16;
            r4 = r0.rcvtimestamp;
            r0 = r29;
            r0.setUnReadStatCommStatus(r2, r3, r4);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x125c:
            r2 = "CatfishServiceExecutor";
            r4 = "STATUSLIKE: FRIEND STATUS";
            com.catfiz.util.Log.d(r2, r4);
            r0 = r16;
            r0.conversation_key = r3;
            r2 = 0;
            r0 = r29;
            r1 = r16;
            r2 = r0.updateStatusLike(r1, r2);
            if (r2 != 0) goto L_0x1291;
        L_0x1272:
            r2 = "CatfishServiceExecutor";
            r3 = "STATUSLIKE: FAIL TO UPDATE DB !!!";
            com.catfiz.util.Log.e(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1291:
            r0 = r28;
            r1 = r16;
            r0.addRecentupdates(r1);
            r0 = r37;
            r2 = r0.mService;
            r4 = com.catfiz.service.CatfishService.UpdateRecent.STATUSUPDT;
            r4 = r4.ordinal();
            r5 = "";
            r2.signalUpdatesIncoming(r4, r5);
            goto L_0x1217;
        L_0x12a9:
            r2 = 0;
            goto L_0x122d;
        L_0x12ab:
            r2 = new android.os.Bundle;
            r2.<init>();
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r16;
            r4 = r0.messagetype;
            r4 = r4.ordinal();
            r2.putInt(r3, r4);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = "owner";
            r3 = r3.append(r4);
            r3 = r3.toString();
            r0 = r16;
            r4 = r0.object_owner;
            r2.putString(r3, r4);
            r0 = r37;
            r3 = r0.mService;
            r4 = 1;
            r3.signalHasNewMessage(r4, r2);
            goto L_0x1236;
        L_0x12e7:
            r2 = "CatfishServiceExecutor";
            r3 = " STIKER_MESSAGE received ";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.sticker.StickerDatabaseExecutor;
            r4 = 0;
            r5 = com.catfiz.sticker.StickerDatabaseExecutor.StickerDatabaseAction.PREPARE_STICKER;
            r0 = r16;
            r6 = r0.message;
            r3.<init>(r4, r5, r6);
            r2.postRunnableToDbThread(r3);
            r4 = new com.catfiz.sticker.StickerDataStorage;
            r0 = r37;
            r2 = r0.mService;
            r4.<init>(r2);
            r2 = 0;
            r3 = new org.json.JSONObject;	 Catch:{ Exception -> 0x13eb }
            r0 = r16;
            r5 = r0.message;	 Catch:{ Exception -> 0x13eb }
            r3.<init>(r5);	 Catch:{ Exception -> 0x13eb }
            r5 = "stickerId";
            r5 = r3.has(r5);	 Catch:{ Exception -> 0x13eb }
            if (r5 == 0) goto L_0x1322;
        L_0x131c:
            r5 = "stickerId";
            r2 = r3.getString(r5);	 Catch:{ Exception -> 0x13eb }
        L_0x1322:
            if (r2 == 0) goto L_0x134f;
        L_0x1324:
            r2 = r4.getStickerItemDetail(r2);
            if (r2 == 0) goto L_0x134f;
        L_0x132a:
            r3 = r2.getCount();
            if (r3 <= 0) goto L_0x134f;
        L_0x1330:
            r2.moveToFirst();
            r3 = "stickerheight";
            r3 = r2.getColumnIndex(r3);
            r3 = r2.getInt(r3);
            r0 = r16;
            r0.stickerheight = r3;
            r3 = "stickerwidth";
            r3 = r2.getColumnIndex(r3);
            r2 = r2.getInt(r3);
            r0 = r16;
            r0.stickerwidth = r2;
        L_0x134f:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.getFriendStatusSequence(r2);
            r0 = r16;
            r4 = r0.object_owner;
            r5 = com.catfiz.service.CatfishService.getUserPIN();
            r4 = r4.compareTo(r5);
            if (r4 != 0) goto L_0x140a;
        L_0x1367:
            r4 = 1;
            r8 = r4;
        L_0x1369:
            if (r8 == 0) goto L_0x137b;
        L_0x136b:
            r0 = r37;
            r2 = r0.mService;
            r2 = com.catfiz.service.CatfishService.getCatfishPreferences();
            r3 = "userstatus_seq";
            r4 = 0;
            r2 = r2.getLong(r3, r4);
        L_0x137b:
            if (r8 != 0) goto L_0x140e;
        L_0x137d:
            r4 = 0;
            r4 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
            if (r4 != 0) goto L_0x140e;
        L_0x1383:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "STATUS COMMENT RCV (CHECK): senderpin = ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ", sendername=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.sendername;
            r3 = r3.append(r4);
            r4 = ", objectseq=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r3 = r3.append(r4);
            r4 = ", objectown=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":OWNER IS NOT A FRIEND OR INVALID OBJSEQUENCE!!!: IGNORE";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x13eb:
            r3 = move-exception;
            r5 = "CatfishServiceExecutor";
            r6 = new java.lang.StringBuilder;
            r6.<init>();
            r7 = "Error: ";
            r6 = r6.append(r7);
            r3 = r3.toString();
            r3 = r6.append(r3);
            r3 = r3.toString();
            com.catfiz.util.Log.e(r5, r3);
            goto L_0x1322;
        L_0x140a:
            r4 = 0;
            r8 = r4;
            goto L_0x1369;
        L_0x140e:
            r4 = "CatfishServiceExecutor";
            r5 = new java.lang.StringBuilder;
            r5.<init>();
            r6 = " STATUS COMMENT RECEIVE objseq = ";
            r5 = r5.append(r6);
            r5 = r5.append(r2);
            r6 = " COMMENT objseq = ";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.object_sequence;
            r5 = r5.append(r6);
            r5 = r5.toString();
            com.catfiz.util.Log.d(r4, r5);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
            if (r4 == 0) goto L_0x14d8;
        L_0x143c:
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
            if (r4 >= 0) goto L_0x15e9;
        L_0x1444:
            if (r8 != 0) goto L_0x15e9;
        L_0x1446:
            r4 = "CatfishServiceExecutor";
            r5 = new java.lang.StringBuilder;
            r5.<init>();
            r6 = "STATUS COMMENT RCV (CHECK): senderpin = ";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.senderpin;
            r5 = r5.append(r6);
            r6 = ", sendername=";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.sendername;
            r5 = r5.append(r6);
            r6 = ", objectseq=";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.object_sequence;
            r6 = java.lang.String.valueOf(r6);
            r5 = r5.append(r6);
            r6 = ", objectown=";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.object_owner;
            r5 = r5.append(r6);
            r6 = ":OBJECT SEQUENCE OUTDATED: UPDATE";
            r5 = r5.append(r6);
            r5 = r5.toString();
            com.catfiz.util.Log.d(r4, r5);
            r4 = new java.lang.StringBuilder;
            r4.<init>();
            r5 = "sc:";
            r4 = r4.append(r5);
            r0 = r16;
            r5 = r0.object_owner;
            r4 = r4.append(r5);
            r5 = ":";
            r4 = r4.append(r5);
            r2 = java.lang.String.valueOf(r2);
            r2 = r4.append(r2);
            r2 = r2.toString();
            r0 = r28;
            r0.deleteChatConversation(r2);
            r0 = r16;
            r2 = r0.object_owner;
            r3 = "scl:";
            r0 = r28;
            r0.deleteChatConversationResponse(r2, r3);
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r16;
            r4 = r0.object_sequence;
            r0 = r29;
            r0.updateFriendStatusSeq(r2, r4);
        L_0x14d8:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.isPinAFriend(r2);
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r29;
            r3 = r0.isPinAFriend(r3);
            if (r2 != 0) goto L_0x14f2;
        L_0x14ee:
            if (r8 == 0) goto L_0x16a9;
        L_0x14f0:
            if (r3 == 0) goto L_0x16a9;
        L_0x14f2:
            r0 = r16;
            r2 = r0.object_sequence;
            r4 = 0;
            r2 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
            if (r2 == 0) goto L_0x16a9;
        L_0x14fc:
            r0 = r16;
            r2 = r0.messagetype;
            r3 = com.catfiz.service.CatfishRESTAPI.MessageType.PROMOTECONTACT;
            if (r2 != r3) goto L_0x1542;
        L_0x1504:
            r2 = new org.json.JSONObject;	 Catch:{ Exception -> 0x1651 }
            r0 = r16;
            r3 = r0.message;	 Catch:{ Exception -> 0x1651 }
            r2.<init>(r3);	 Catch:{ Exception -> 0x1651 }
            r3 = "contacts";
            r3 = r2.has(r3);	 Catch:{ Exception -> 0x1651 }
            if (r3 == 0) goto L_0x1542;
        L_0x1515:
            r3 = "contacts";
            r2 = r2.getJSONArray(r3);	 Catch:{ Exception -> 0x1651 }
            r3 = 0;
            r2 = r2.getJSONObject(r3);	 Catch:{ Exception -> 0x1651 }
            r3 = "pin";
            r6 = r2.getString(r3);	 Catch:{ Exception -> 0x1651 }
            r0 = r37;
            r9 = r0.mService;	 Catch:{ Exception -> 0x1651 }
            r2 = new com.catfiz.service.PromotePFDownloadExecutor;	 Catch:{ Exception -> 0x1651 }
            r0 = r37;
            r3 = r0.mService;	 Catch:{ Exception -> 0x1651 }
            r0 = r37;
            r4 = r0.mServer;	 Catch:{ Exception -> 0x1651 }
            r5 = com.catfiz.service.CatfishService.getUserPIN();	 Catch:{ Exception -> 0x1651 }
            r0 = r16;
            r7 = r0.object_owner;	 Catch:{ Exception -> 0x1651 }
            r2.<init>(r3, r4, r5, r6, r7);	 Catch:{ Exception -> 0x1651 }
            r9.postRunnableToService(r2);	 Catch:{ Exception -> 0x1651 }
        L_0x1542:
            r0 = r16;
            r2 = r0.senderpin;
            r0 = r16;
            r3 = r0.messagetype;
            r3 = r3.ordinal();
            r0 = r35;
            r0.putInt(r2, r3);
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r0 = r16;
            r3 = r0.senderpin;
            r2 = r2.append(r3);
            r3 = "owner";
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r3 = r0.object_owner;
            r0 = r35;
            r0.putString(r2, r3);
            r2 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.RECEIVED;
            r0 = r16;
            r0.deliverystatus = r2;
            if (r8 == 0) goto L_0x1670;
        L_0x157b:
            r2 = com.catfiz.service.CatfishService.getUserPIN();
            r0 = r16;
            r0.userpin = r2;
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sc:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.userpin;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.String.valueOf(r4);
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r0.conversation_key = r2;
            r23 = r23 + 1;
        L_0x15b2:
            r2 = r16.getRefCopy();
            r0 = r32;
            r0.add(r2);
            r0 = r16;
            r2 = r0.messagetype;
            r3 = com.catfiz.service.CatfishRESTAPI.MessageType.DELETE_STATUSCOMENT_BYOWNER;
            if (r2 == r3) goto L_0x15d1;
        L_0x15c3:
            r0 = r16;
            r2 = r0.object_owner;
            r3 = 1;
            r0 = r16;
            r4 = r0.rcvtimestamp;
            r0 = r29;
            r0.setUnReadStatCommStatus(r2, r3, r4);
        L_0x15d1:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x15e9:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "STATUS COMMENT RCV (CHECK): senderpin = ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ", sendername=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.sendername;
            r3 = r3.append(r4);
            r4 = ", objectseq=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r3 = r3.append(r4);
            r4 = ", objectown=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":OBJECT SEQUENCE IS INVALID !!!: IGNORE";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1651:
            r2 = move-exception;
            r3 = "CatfishServiceExecutor";
            r4 = new java.lang.StringBuilder;
            r4.<init>();
            r5 = "Error: ";
            r4 = r4.append(r5);
            r2 = r2.toString();
            r2 = r4.append(r2);
            r2 = r2.toString();
            com.catfiz.util.Log.d(r3, r2);
            goto L_0x1542;
        L_0x1670:
            r0 = r37;
            r2 = r0.mUserpin;
            r0 = r16;
            r0.userpin = r2;
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r3 = "sc:";
            r2 = r2.append(r3);
            r0 = r16;
            r3 = r0.object_owner;
            r2 = r2.append(r3);
            r3 = ":";
            r2 = r2.append(r3);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.String.valueOf(r4);
            r2 = r2.append(r3);
            r2 = r2.toString();
            r0 = r16;
            r0.conversation_key = r2;
            r24 = r24 + 1;
            goto L_0x15b2;
        L_0x16a9:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "STATUS COMMENT RCV: senderpin = ";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r3 = r3.append(r4);
            r4 = ", sendername=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.sendername;
            r3 = r3.append(r4);
            r4 = ", objectseq=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r3 = r3.append(r4);
            r4 = ", objectown=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":OWNER IS NOT A FRIEND OR INVALID OBJSEQUENCE!!!: IGNORE";
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            goto L_0x15d1;
        L_0x16fb:
            r0 = r37;
            r2 = r0.mService;
            r8 = android.preference.PreferenceManager.getDefaultSharedPreferences(r2);
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = "ignore_pool_invite";
            r4 = 1;
            r3 = r8.getBoolean(r3, r4);
            if (r3 == 0) goto L_0x1812;
        L_0x1715:
            r3 = "ask_pool_invite";
            r4 = 1;
            r3 = r8.getBoolean(r3, r4);
            if (r3 == 0) goto L_0x1724;
        L_0x171e:
            r3 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.CONFRCPENDING;
            r0 = r16;
            r0.deliverystatus = r3;
        L_0x1724:
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = r3.append(r4);
            r3 = r3.toString();
            r0 = r16;
            r2.storeSingleTopic(r0);
            r4 = 1;
            r2.setUnReadItemInTopic(r3, r4);
            r0 = r37;
            r1 = r16;
            r0.saveToNotificationDataListForInvitingTopic(r1);
            r2 = r2.getAllTopic();
            r0 = r37;
            r3 = r0.mService;
            r3.signalNewTopicReceived(r2);
            r0 = r37;
            r9 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 1;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r9.postRunnableToService(r2);
            r2 = new com.catfiz.backup.LocalBackup;
            r2.<init>();
            r0 = r37;
            r3 = r0.mService;
            r2.backupPool(r3);
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.isPinAFriend(r2);
            if (r2 != 0) goto L_0x17b7;
        L_0x1793:
            r2 = "CatfishServiceExecutor";
            r3 = "OWNER BUKAN FRIEND, -> AMBIL OWNERNAME DARI SERVER";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r9 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 5;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r9.postRunnableToService(r2);
        L_0x17b7:
            r2 = "ask_pool_invite";
            r3 = 1;
            r2 = r8.getBoolean(r2, r3);
            if (r2 != 0) goto L_0x17fa;
        L_0x17c0:
            r0 = r37;
            r8 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 4;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r8.postRunnableToService(r2);
            r0 = r37;
            r8 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 0;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r8.postRunnableToService(r2);
        L_0x17fa:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1812:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.pool.LeaveOrDropTopicExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.object_owner;
            r0 = r16;
            r8 = r0.object_sequence;
            r3.<init>(r4, r5, r6, r7, r8);
            r2.postRunnableToService(r3);
            goto L_0x17fa;
        L_0x1833:
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r3 = r3.append(r4);
            r3 = r3.toString();
            r0 = r16;
            r4 = r0.message;
            r5 = "";
            r4 = r4.compareTo(r5);
            if (r4 != 0) goto L_0x1920;
        L_0x186b:
            r4 = r2.isTopicAccepted(r3);
            if (r4 == 0) goto L_0x1920;
        L_0x1871:
            r4 = "CatfishServiceExecutor";
            r5 = "Notifikasi ada message conference diterima.";
            com.catfiz.util.Log.d(r4, r5);
            r4 = r2.isTopicExists(r3);
            if (r4 == 0) goto L_0x1918;
        L_0x187e:
            r8 = r2.getRDCounter(r3);
            r8.moveToFirst();
            r2 = "rdcounter";
            r2 = r8.getColumnIndex(r2);
            r2 = r8.getInt(r2);
            r4 = (long) r2;
            r0 = r16;
            r0.rdcounter = r4;
            r0 = r16;
            r4 = r0.rdcounter;
            r2 = com.catfiz.util.ObjectLockManager.checkLockKeyLong(r3, r4);
            if (r2 == 0) goto L_0x18d5;
        L_0x189e:
            r2 = "CatfishServiceExecutor";
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r4 = "Already get message on rdcounter=";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.rdcounter;
            r3 = r3.append(r4);
            r3 = r3.toString();
            com.catfiz.util.Log.d(r2, r3);
            r8.close();
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x18d5:
            r0 = r16;
            r4 = r0.rdcounter;
            r2 = java.lang.Long.valueOf(r4);
            com.catfiz.util.ObjectLockManager.acquireLockKey(r3, r2);
            r0 = r37;
            r9 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 0;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r9.postRunnableToService(r2);
            r8.close();
        L_0x1900:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1918:
            r2 = "CatfishServiceExecutor";
            r3 = "TOPIC IS NOT EXISTS";
            com.catfiz.util.Log.e(r2, r3);
            goto L_0x1900;
        L_0x1920:
            r2 = "CatfishServiceExecutor";
            r3 = "Notifikasi ada message conference ditolak.";
            com.catfiz.util.Log.d(r2, r3);
            goto L_0x1900;
        L_0x1928:
            r2 = "CatfishServiceExecutor";
            r3 = "ada converence di drop";
            com.catfiz.util.Log.d(r2, r3);
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = r3.append(r4);
            r3 = r3.toString();
            r4 = r2.isTopicExists(r3);
            if (r4 == 0) goto L_0x198a;
        L_0x195d:
            r4 = r2.isTopicAccepted(r3);
            if (r4 == 0) goto L_0x1986;
        L_0x1963:
            r0 = r37;
            r4 = r0.mService;
            r2 = r2.getTopicTitle(r3);
            r4.signalTopicConverenceDeleted(r3, r2);
        L_0x196e:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1986:
            r2.dropTopicConverence(r3);
            goto L_0x196e;
        L_0x198a:
            r2 = "CatfishServiceExecutor";
            r3 = "TOPIC IS NOT EXISTS";
            com.catfiz.util.Log.e(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.pool.LeaveOrDropTopicExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.object_owner;
            r0 = r16;
            r8 = r0.object_sequence;
            r3.<init>(r4, r5, r6, r7, r8);
            r2.postRunnableToService(r3);
            goto L_0x196e;
        L_0x19b2:
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = r3.append(r4);
            r10 = r3.toString();
            r0 = r16;
            r0.topic_key = r10;
            r0 = r16;
            r3 = r0.senderpin;
            r0 = r37;
            r4 = r0.mUserpin;
            r3 = r3.compareTo(r4);
            if (r3 != 0) goto L_0x19fd;
        L_0x19ec:
            r3 = r2.isTopicExists(r10);
            if (r3 == 0) goto L_0x1a1d;
        L_0x19f2:
            r0 = r37;
            r3 = r0.mService;
            r4 = r2.getTopicTitle(r10);
            r3.signalTopicConverenceDeleted(r10, r4);
        L_0x19fd:
            r0 = r16;
            r2.deleteMember(r0);
            r2.getFriendList(r10);
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1a1d:
            r3 = "CatfishServiceExecutor";
            r4 = "TOPIC IS NOT EXISTS";
            com.catfiz.util.Log.e(r3, r4);
            r0 = r37;
            r11 = r0.mService;
            r3 = new com.catfiz.pool.LeaveOrDropTopicExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.object_owner;
            r0 = r16;
            r8 = r0.object_sequence;
            r3.<init>(r4, r5, r6, r7, r8);
            r11.postRunnableToService(r3);
            goto L_0x19fd;
        L_0x1a45:
            r0 = r37;
            r2 = r0.mService;
            r8 = android.preference.PreferenceManager.getDefaultSharedPreferences(r2);
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = new java.lang.StringBuilder;
            r3.<init>();
            r0 = r16;
            r4 = r0.object_owner;
            r3 = r3.append(r4);
            r4 = ":";
            r3 = r3.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = r3.append(r4);
            r3 = r3.toString();
            r0 = r16;
            r0.topic_key = r3;
            r4 = "CatfishServiceExecutor";
            r5 = new java.lang.StringBuilder;
            r5.<init>();
            r6 = "CONFRC_JOINED : ";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.senderpin;
            r5 = r5.append(r6);
            r6 = " ";
            r5 = r5.append(r6);
            r0 = r16;
            r6 = r0.sendername;
            r5 = r5.append(r6);
            r5 = r5.toString();
            com.catfiz.util.Log.d(r4, r5);
            r0 = r16;
            r4 = r0.topic_key;
            r0 = r16;
            r5 = r0.senderpin;
            r4 = r2.isMemberExist(r4, r5);
            if (r4 != 0) goto L_0x1ac3;
        L_0x1ab1:
            r0 = r16;
            r4 = r0.topic_key;
            r4 = r2.isTopicExists(r4);
            if (r4 == 0) goto L_0x1ac3;
        L_0x1abb:
            r0 = r16;
            r2.storeSingleFriendList(r0);
            r2.getFriendList(r3);
        L_0x1ac3:
            r0 = r16;
            r4 = r0.senderpin;
            r0 = r37;
            r5 = r0.mUserpin;
            r4 = r4.compareTo(r5);
            if (r4 != 0) goto L_0x1b90;
        L_0x1ad1:
            r3 = r2.isTopicExists(r3);
            if (r3 != 0) goto L_0x1b90;
        L_0x1ad7:
            r3 = "ignore_pool_invite";
            r4 = 1;
            r3 = r8.getBoolean(r3, r4);
            if (r3 == 0) goto L_0x1ba8;
        L_0x1ae0:
            r3 = "ask_pool_invite";
            r4 = 1;
            r3 = r8.getBoolean(r3, r4);
            if (r3 == 0) goto L_0x1aef;
        L_0x1ae9:
            r3 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.CONFRCPENDING;
            r0 = r16;
            r0.deliverystatus = r3;
        L_0x1aef:
            r0 = r16;
            r2.storeSingleTopic(r0);
            r0 = r37;
            r9 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 1;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r9.postRunnableToService(r2);
            r2 = new com.catfiz.backup.LocalBackup;
            r2.<init>();
            r0 = r37;
            r3 = r0.mService;
            r2.backupPool(r3);
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r29;
            r2 = r0.isPinAFriend(r2);
            if (r2 != 0) goto L_0x1b4d;
        L_0x1b29:
            r2 = "CatfishServiceExecutor";
            r3 = "OWNER BUKAN FRIEND, -> AMBIL OWNERNAME DARI SERVER";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r9 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 5;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r9.postRunnableToService(r2);
        L_0x1b4d:
            r2 = "ask_pool_invite";
            r3 = 1;
            r2 = r8.getBoolean(r2, r3);
            if (r2 != 0) goto L_0x1b90;
        L_0x1b56:
            r0 = r37;
            r8 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 4;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r8.postRunnableToService(r2);
            r0 = r37;
            r8 = r0.mService;
            r2 = new com.catfiz.pool.PoolServiceExecutor;
            r0 = r37;
            r3 = r0.mServer;
            r4 = 0;
            r0 = r37;
            r5 = r0.mService;
            r0 = r37;
            r6 = r0.mUserpin;
            r7 = r16.getRefCopy();
            r2.<init>(r3, r4, r5, r6, r7);
            r8.postRunnableToService(r2);
        L_0x1b90:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1ba8:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.pool.LeaveOrDropTopicExecutor;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r16;
            r7 = r0.object_owner;
            r0 = r16;
            r8 = r0.object_sequence;
            r3.<init>(r4, r5, r6, r7, r8);
            r2.postRunnableToService(r3);
            goto L_0x1b90;
        L_0x1bc9:
            r2 = new com.catfiz.pool.PoolDataStorage;
            r0 = r37;
            r3 = r0.mService;
            r2.<init>(r3);
            r3 = new com.catfiz.service.CatfishDataStorage;
            r0 = r37;
            r4 = r0.mService;
            r3.<init>(r4);
            r3 = com.catfiz.service.CatfishMessageObject.obtain();
            r0 = r16;
            r4 = r0.message;
            r3.invitorpin = r4;
            r4 = new java.lang.StringBuilder;
            r4.<init>();
            r0 = r16;
            r5 = r0.object_owner;
            r4 = r4.append(r5);
            r5 = ":";
            r4 = r4.append(r5);
            r0 = r16;
            r6 = r0.object_sequence;
            r4 = r4.append(r6);
            r4 = r4.toString();
            r3.topic_key = r4;
            r4 = r3.invitorpin;
            r0 = r29;
            r4 = r0.getFriendname(r4);
            r3.invitorname = r4;
            r0 = r16;
            r4 = r0.senderpin;
            r0 = r37;
            r5 = r0.mUserpin;
            r4 = r4.compareTo(r5);
            if (r4 != 0) goto L_0x1c33;
        L_0x1c1e:
            r2.updateSingleTopicContent(r3);
            r0 = r37;
            r1 = r16;
            r0.saveToNotificationDataListForInvitingTopic(r1);
            r2 = r2.getAllTopic();
            r0 = r37;
            r4 = r0.mService;
            r4.signalNewTopicReceived(r2);
        L_0x1c33:
            r3.recycle();
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1c4e:
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1c66:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.Long.valueOf(r4);
            r0 = r28;
            r2 = r0.isStatusCommentExist(r2, r3);
            if (r2 == 0) goto L_0x00b6;
        L_0x1c7a:
            r3 = com.catfiz.service.CatfishMessageObject.obtain();
            r0 = r16;
            r2 = r0.senderpin;
            r3.userpin = r2;
            r0 = r16;
            r2 = r0.sendername;
            r3.username = r2;
            r0 = r16;
            r2 = r0.message;
            r3.recipient = r2;
            r0 = r16;
            r2 = r0.messagetype;
            r3.messagetype = r2;
            r0 = r16;
            r4 = r0.rcvtimestamp;
            r3.rcvtimestamp = r4;
            r0 = r16;
            r2 = r0.conversation_key;
            r3.conversation_key = r2;
            r0 = r16;
            r2 = r0.message;
            r3.message = r2;
            r0 = r16;
            r2 = r0.deliverystatus;
            r3.deliverystatus = r2;
            r0 = r16;
            r4 = r0.sequence;
            r3.sequence = r4;
            r0 = r16;
            r4 = r0.object_sequence;
            r3.object_sequence = r4;
            r0 = r16;
            r2 = r0.object_owner;
            r3.object_owner = r2;
            r0 = r16;
            r2 = r0.messagetype;
            r4 = com.catfiz.service.CatfishRESTAPI.MessageType.LIKE;
            if (r2 != r4) goto L_0x1d47;
        L_0x1cc8:
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r4 = "scl:";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r2 = r2.append(r4);
            r2 = r2.toString();
        L_0x1cff:
            r0 = r28;
            r0.storeUserMessageWConvKeyForResponse(r3, r2);
            r2 = new java.util.StringTokenizer;
            r0 = r16;
            r4 = r0.message;
            r5 = " ";
            r2.<init>(r4, r5);
            r2 = r2.nextToken();
            r4 = 1;
            r6 = java.lang.System.currentTimeMillis();
            r0 = r29;
            r0.setUnReadStatCommStatus(r2, r4, r6);
            r4 = com.catfiz.service.CatfishService.getUserPIN();
            r2 = r2.compareTo(r4);
            if (r2 != 0) goto L_0x1e02;
        L_0x1d27:
            r2 = 1;
        L_0x1d28:
            if (r2 == 0) goto L_0x1e05;
        L_0x1d2a:
            r22 = r22 + 1;
        L_0x1d2c:
            r3.recycle();
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1d47:
            r0 = r16;
            r2 = r0.messagetype;
            r4 = com.catfiz.service.CatfishRESTAPI.MessageType.FUNNY;
            if (r2 != r4) goto L_0x1d88;
        L_0x1d4f:
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r4 = "scf:";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r2 = r2.append(r4);
            r2 = r2.toString();
            goto L_0x1cff;
        L_0x1d88:
            r0 = r16;
            r2 = r0.messagetype;
            r4 = com.catfiz.service.CatfishRESTAPI.MessageType.PRET;
            if (r2 != r4) goto L_0x1dc9;
        L_0x1d90:
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r4 = "scp:";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r2 = r2.append(r4);
            r2 = r2.toString();
            goto L_0x1cff;
        L_0x1dc9:
            r2 = new java.lang.StringBuilder;
            r2.<init>();
            r4 = "scb:";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_owner;
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.object_sequence;
            r4 = java.lang.String.valueOf(r4);
            r2 = r2.append(r4);
            r4 = ":";
            r2 = r2.append(r4);
            r0 = r16;
            r4 = r0.senderpin;
            r2 = r2.append(r4);
            r2 = r2.toString();
            goto L_0x1cff;
        L_0x1e02:
            r2 = 0;
            goto L_0x1d28;
        L_0x1e05:
            r21 = r21 + 1;
            goto L_0x1d2c;
        L_0x1e09:
            r0 = r16;
            r2 = r0.object_owner;
            r0 = r16;
            r4 = r0.object_sequence;
            r3 = java.lang.Long.valueOf(r4);
            r0 = r28;
            r2 = r0.isStatusCommentExist(r2, r3);
            if (r2 == 0) goto L_0x00b6;
        L_0x1e1d:
            r2 = 0;
            r0 = r28;
            r1 = r16;
            r0.deleteUserMessageWConvKeyForResponse(r1, r2);
            r20 = r20 + 1;
            r2 = r17;
            r3 = r18;
            r4 = r19;
            r5 = r20;
            r6 = r21;
            r7 = r22;
            r8 = r23;
            r9 = r24;
            r10 = r25;
            r11 = r26;
            r12 = r27;
            goto L_0x00cc;
        L_0x1e3f:
            if (r27 <= 0) goto L_0x1e77;
        L_0x1e41:
            r0 = r37;
            r2 = r0.mService;
            r0 = r27;
            r2.signalHasFriendRequest(r0);
            r4 = r33.size();
            r2 = 0;
            r3 = r2;
        L_0x1e50:
            if (r3 >= r4) goto L_0x1e74;
        L_0x1e52:
            r2 = 0;
            r0 = r33;
            r2 = r0.remove(r2);
            r2 = (java.lang.String) r2;
            r0 = r37;
            r5 = r0.mService;
            r6 = new com.catfiz.service.CatfishServiceExecutor$UpdateRequesterProfile;
            r0 = r37;
            r7 = com.catfiz.service.CatfishServiceExecutor.this;
            r0 = r37;
            r8 = r0.mService;
            r6.<init>(r8, r2);
            r2 = 0;
            r5.postRunnableToService(r6, r2);
            r2 = r3 + 1;
            r3 = r2;
            goto L_0x1e50;
        L_0x1e74:
            r33.clear();
        L_0x1e77:
            r2 = r30.size();
            if (r2 <= 0) goto L_0x1e98;
        L_0x1e7d:
            r0 = r37;
            r2 = r0.mService;
            r3 = new com.catfiz.service.CatfishServiceExecutor$SendDeliveredSignal;
            r0 = r37;
            r4 = r0.mService;
            r0 = r37;
            r5 = r0.mServer;
            r0 = r37;
            r6 = r0.mUserpin;
            r0 = r30;
            r3.<init>(r4, r5, r6, r0);
            r4 = 0;
            r2.postRunnableToService(r3, r4);
        L_0x1e98:
            r2 = r31.size();
            if (r2 <= 0) goto L_0x201d;
        L_0x1e9e:
            r0 = r37;
            r2 = r0.mService;
            r8 = r2.getNotificationMsgList();
            r0 = r37;
            r2 = r0.mService;
            r9 = r2.getNotificationNameList();
            r2 = 0;
            r3 = r31.size();
            r4 = 6;
            if (r3 <= r4) goto L_0x216b;
        L_0x1eb6:
            r2 = r31.size();
            r2 = r2 + -6;
            r3 = r2;
        L_0x1ebd:
            r4 = "";
            r2 = "";
            r2 = 0;
            r6 = r2;
        L_0x1ec3:
            r2 = r31.size();
            if (r6 >= r2) goto L_0x1fab;
        L_0x1ec9:
            r0 = r31;
            r2 = r0.get(r6);
            r2 = (com.catfiz.service.CatfishMessageObject) r2;
            r5 = r2.sendername;
            r7 = r2.senderpin;
            if (r7 == 0) goto L_0x1eef;
        L_0x1ed7:
            r7 = r2.senderpin;
            r10 = "6C3AA8342C";
            r7 = r7.equals(r10);
            if (r7 == 0) goto L_0x1eef;
        L_0x1ee1:
            r0 = r37;
            r5 = r0.mService;
            r5 = r5.getResources();
            r7 = com.catfiz.R.string.official_name;
            r5 = r5.getString(r7);
        L_0x1eef:
            if (r5 == 0) goto L_0x1ef7;
        L_0x1ef1:
            r7 = r5.isEmpty();
            if (r7 == 0) goto L_0x2168;
        L_0x1ef7:
            r5 = r2.senderpin;
            r0 = r29;
            r7 = r0.getFriend(r5);
            if (r7 == 0) goto L_0x1f8e;
        L_0x1f01:
            r5 = r7.getCount();
            if (r5 <= 0) goto L_0x1f8e;
        L_0x1f07:
            r7.moveToFirst();
            r5 = "friendname";
            r5 = r7.getColumnIndex(r5);
            r5 = r7.getString(r5);
            r7.close();
            r7 = r5;
        L_0x1f18:
            r5 = r9.contains(r7);
            if (r5 != 0) goto L_0x1f21;
        L_0x1f1e:
            r9.add(r7);
        L_0x1f21:
            if (r6 < r3) goto L_0x2165;
        L_0x1f23:
            r5 = r2.senderpin;
            r4 = r2.message;
            r10 = r2.messagetype;
            r11 = com.catfiz.service.CatfishRESTAPI.MessageType.STIKER_MESSAGE;
            if (r10 != r11) goto L_0x1f92;
        L_0x1f2d:
            r0 = r37;
            r4 = r0.mService;
            r10 = com.catfiz.R.string.sticker_has_been_received;
            r4 = r4.getString(r10);
        L_0x1f37:
            r10 = new java.lang.StringBuilder;
            r10.<init>();
            r7 = r10.append(r7);
            r10 = 7;
            r7 = r7.append(r10);
            r4 = r7.append(r4);
            r4 = r4.toString();
            r7 = "CatfishServiceExecutor";
            r10 = new java.lang.StringBuilder;
            r10.<init>();
            r11 = "mo.messagetype:";
            r10 = r10.append(r11);
            r11 = r2.messagetype;
            r10 = r10.append(r11);
            r11 = " mo.messagetype.ordinal():";
            r10 = r10.append(r11);
            r2 = r2.messagetype;
            r2 = r2.ordinal();
            r2 = r10.append(r2);
            r2 = r2.toString();
            com.catfiz.util.Log.d(r7, r2);
            if (r4 == 0) goto L_0x1fa3;
        L_0x1f79:
            r8.add(r4);
        L_0x1f7c:
            r2 = r8.size();
            r4 = 6;
            if (r2 <= r4) goto L_0x1f87;
        L_0x1f83:
            r2 = 0;
            r8.remove(r2);
        L_0x1f87:
            r2 = r5;
        L_0x1f88:
            r4 = r6 + 1;
            r6 = r4;
            r4 = r2;
            goto L_0x1ec3;
        L_0x1f8e:
            r5 = r2.senderpin;
            r7 = r5;
            goto L_0x1f18;
        L_0x1f92:
            r10 = r2.messagetype;
            r11 = com.catfiz.service.CatfishRESTAPI.MessageType.PERSONCONTACT;
            if (r10 != r11) goto L_0x1f37;
        L_0x1f98:
            r0 = r37;
            r4 = r0.mService;
            r10 = com.catfiz.R.string.contact_received_text;
            r4 = r4.getString(r10);
            goto L_0x1f37;
        L_0x1fa3:
            r2 = "CatfishServiceExecutor";
            r4 = "msg null on save message to notification msg";
            com.catfiz.util.Log.d(r2, r4);
            goto L_0x1f7c;
        L_0x1fab:
            r0 = r37;
            r2 = r0.mService;
            r2.setNotificationMsgList(r8);
            r0 = r37;
            r2 = r0.mService;
            r2.setNotificationNameList(r9);
            r0 = r37;
            r2 = r0.mService;
            r2 = android.preference.PreferenceManager.getDefaultSharedPreferences(r2);
            r3 = "chatNotificationCount";
            r5 = 0;
            r3 = r2.getInt(r3, r5);
            r5 = r31.size();
            r3 = r3 + r5;
            r5 = r2.edit();
            r6 = "chatNotificationCount";
            r3 = r5.putInt(r6, r3);
            r3.commit();
            r2 = r2.edit();
            r3 = "chatNotificationLastUser";
            r2 = r2.putString(r3, r4);
            r2.commit();
            r2 = 600; // 0x258 float:8.41E-43 double:2.964E-321;
            r0 = r28;
            r1 = r31;
            r0.storeMessages(r1, r2);
            if (r25 <= 0) goto L_0x1fff;
        L_0x1ff2:
            r0 = r37;
            r2 = r0.mService;
            r3 = r31.size();
            r0 = r34;
            r2.signalHasNewMessage(r3, r0);
        L_0x1fff:
            if (r26 <= 0) goto L_0x200a;
        L_0x2001:
            r0 = r37;
            r2 = r0.mService;
            r0 = r26;
            r2.signalHasPing(r0);
        L_0x200a:
            r2 = r31.size();
            if (r2 <= 0) goto L_0x201d;
        L_0x2010:
            r2 = 0;
            r0 = r31;
            r2 = r0.remove(r2);
            r2 = (com.catfiz.service.CatfishMessageObject) r2;
            r2.recycle();
            goto L_0x200a;
        L_0x201d:
            r2 = r32.size();
            if (r2 <= 0) goto L_0x20bd;
        L_0x2023:
            r2 = 100;
            r0 = r28;
            r1 = r32;
            r0.storeMessages(r1, r2);
            if (r23 <= 0) goto L_0x2061;
        L_0x202e:
            r2 = com.catfiz.service.CatfishService.getCatfishPreferences();	 Catch:{ Exception -> 0x20b6 }
            r3 = "has_statuscomment";
            r4 = 0;
            r3 = r2.getBoolean(r3, r4);	 Catch:{ Exception -> 0x20b6 }
            if (r3 == 0) goto L_0x20a6;
        L_0x203b:
            r3 = "statuscomment_count";
            r4 = 0;
            r3 = r2.getInt(r3, r4);	 Catch:{ Exception -> 0x20b6 }
            r2 = r2.edit();	 Catch:{ Exception -> 0x20b6 }
            r4 = "statuscomment_count";
            r3 = r3 + r23;
            r2 = r2.putInt(r4, r3);	 Catch:{ Exception -> 0x20b6 }
            r2.commit();	 Catch:{ Exception -> 0x20b6 }
        L_0x2051:
            r0 = r28;
            r1 = r23;
            r0.increaseUnreadStatusCommentCount(r1);
            r0 = r37;
            r2 = r0.mService;
            r2.signalHasCommentonStatus();
            r22 = 0;
        L_0x2061:
            if (r24 <= 0) goto L_0x207f;
        L_0x2063:
            r0 = r37;
            r2 = r0.mService;
            r3 = r32.size();
            r0 = r35;
            r2.signalHasNewMessage(r3, r0);
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishService.UpdateRecent.STATUSUPDT;
            r3 = r3.ordinal();
            r4 = "";
            r2.signalUpdatesIncoming(r3, r4);
        L_0x207f:
            r2 = r32.size();
            if (r2 <= 0) goto L_0x20bd;
        L_0x2085:
            r2 = 0;
            r0 = r32;
            r2 = r0.remove(r2);
            r2 = (com.catfiz.service.CatfishMessageObject) r2;
            r3 = r2.object_owner;
            r4 = com.catfiz.service.CatfishService.getUserPIN();
            r3 = r3.compareTo(r4);
            if (r3 != 0) goto L_0x20bb;
        L_0x209a:
            r3 = 1;
        L_0x209b:
            if (r3 != 0) goto L_0x20a2;
        L_0x209d:
            r0 = r28;
            r0.addRecentupdates(r2);
        L_0x20a2:
            r2.recycle();
            goto L_0x207f;
        L_0x20a6:
            r2 = r2.edit();	 Catch:{ Exception -> 0x20b6 }
            r3 = "statuscomment_count";
            r0 = r23;
            r2 = r2.putInt(r3, r0);	 Catch:{ Exception -> 0x20b6 }
            r2.commit();	 Catch:{ Exception -> 0x20b6 }
            goto L_0x2051;
        L_0x20b6:
            r2 = move-exception;
            r2.printStackTrace();
            goto L_0x2051;
        L_0x20bb:
            r3 = 0;
            goto L_0x209b;
        L_0x20bd:
            if (r22 <= 0) goto L_0x20d8;
        L_0x20bf:
            r28.increaseUnreadStatusCommentCount();
            r0 = r37;
            r2 = r0.mService;
            r2.signalHasCommentonStatus();
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishService.UpdateRecent.STATUSUPDT;
            r3 = r3.ordinal();
            r4 = "";
            r2.signalUpdatesIncoming(r3, r4);
        L_0x20d8:
            if (r21 <= 0) goto L_0x20e1;
        L_0x20da:
            r0 = r37;
            r2 = r0.mService;
            r2.signalHasResponseStatus();
        L_0x20e1:
            if (r20 <= 0) goto L_0x20ea;
        L_0x20e3:
            r0 = r37;
            r2 = r0.mService;
            r2.signalHasResponseStatusNetral();
        L_0x20ea:
            if (r18 <= 0) goto L_0x20f9;
        L_0x20ec:
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.DELIVERED;
            r3 = r3.ordinal();
            r2.signalDeliveryStatusUpdated(r3);
        L_0x20f9:
            if (r19 <= 0) goto L_0x2108;
        L_0x20fb:
            r0 = r37;
            r2 = r0.mService;
            r3 = com.catfiz.service.CatfishRESTAPI.MessageDeliveryStatus.READ;
            r3 = r3.ordinal();
            r2.signalDeliveryStatusUpdated(r3);
        L_0x2108:
            if (r17 <= 0) goto L_0x2136;
        L_0x210a:
            r2 = "CatfishServiceExecutor";
            r3 = "--- HAS NIC MESSAGE ---";
            com.catfiz.util.Log.d(r2, r3);
            r0 = r37;
            r2 = r0.mService;
            r2 = android.preference.PreferenceManager.getDefaultSharedPreferences(r2);
            r3 = "chatOfficialNotificationCount";
            r4 = 0;
            r3 = r2.getInt(r3, r4);
            r2 = r2.edit();
            r4 = "chatOfficialNotificationCount";
            r3 = r3 + r17;
            r2 = r2.putInt(r4, r3);
            r2.commit();
            r0 = r37;
            r2 = r0.mService;
            r2.signalNicMessageReceived();
        L_0x2136:
            r0 = r37;
            r2 = r0.mMessages;
            if (r2 == 0) goto L_0x2158;
        L_0x213c:
            r0 = r37;
            r2 = r0.mMessages;
            r2 = r2.getCount();
            if (r2 <= 0) goto L_0x2158;
        L_0x2146:
            r2 = 1;
        L_0x2147:
            r0 = r37;
            r3 = r0.mService;
            if (r3 == 0) goto L_0x2154;
        L_0x214d:
            r0 = r37;
            r3 = r0.mService;
            r3.signalGetMessagesDone(r2);
        L_0x2154:
            r37.cleaningup();
            return;
        L_0x2158:
            r2 = 0;
            goto L_0x2147;
        L_0x215a:
            r3 = move-exception;
            r17 = r2;
            r2 = r3;
            goto L_0x04cc;
        L_0x2160:
            r2 = move-exception;
            r17 = r10;
            goto L_0x04cc;
        L_0x2165:
            r2 = r4;
            goto L_0x1f88;
        L_0x2168:
            r7 = r5;
            goto L_0x1f18;
        L_0x216b:
            r3 = r2;
            goto L_0x1ebd;
            */
            throw new UnsupportedOperationException("Method not decompiled: com.catfiz.service.CatfishServiceExecutor.ProcessMessagesInDBThread.run():void");
        }

        public void saveToNotificationDataListForInvitingTopic(CatfishMessageObject catfishMessageObject) {
            PoolDataStorage poolDataStorage;
            String topicTitle;
            SharedPreferences defaultSharedPreferences;
            ArrayList poolNotificationMsgList = this.mService.getPoolNotificationMsgList();
            ArrayList poolNotificationNameList = this.mService.getPoolNotificationNameList();
            String str = "";
            str = "";
            Log.d(CatfishServiceExecutor.TAG, "mo.messagetype:" + catfishMessageObject.messagetype + " mo.messagetype.ordinal():" + catfishMessageObject.messagetype.ordinal() + " mo.topic_key:" + catfishMessageObject.topic_key + " mo.senderpin:" + catfishMessageObject.senderpin + " mo.sendername:" + catfishMessageObject.sendername + " mo.object_owner :" + catfishMessageObject.object_owner + " mo.object_sequence :" + catfishMessageObject.object_sequence);
            String str2 = null;
            if (catfishMessageObject.messagetype != MessageType.CONFRC_INVITEDBY) {
                str2 = catfishMessageObject.sendername;
            }
            if (str2 == null || str2.compareTo("") == 0) {
                Cursor friend = new FriendListDataStorage(this.mService).getFriend(catfishMessageObject.messagetype == MessageType.CONFRC_INVITEDBY ? catfishMessageObject.message : catfishMessageObject.senderpin);
                if (friend != null) {
                    if (friend.getCount() > 0) {
                        friend.moveToFirst();
                        str = friend.getString(friend.getColumnIndex(FriendListDataStorage.FRIENDNAME));
                    } else {
                        str = catfishMessageObject.sendername;
                        if (str == null || str.length() == 0) {
                            str = " ";
                        }
                    }
                    friend.close();
                    if (catfishMessageObject.messagetype == MessageType.CONFRC_JOINED) {
                        str = " ";
                    }
                    str2 = catfishMessageObject.topic_key == null ? catfishMessageObject.topic_key : catfishMessageObject.object_owner + ":" + catfishMessageObject.object_sequence;
                    poolDataStorage = new PoolDataStorage(this.mService);
                    topicTitle = poolDataStorage.getTopicTitle(str2);
                    if (!poolNotificationNameList.contains(topicTitle)) {
                        poolNotificationNameList.add(topicTitle);
                    }
                    str = str + '\u0007' + topicTitle + '\u0007' + this.mService.getString(R.string.invite_you_to) + " " + topicTitle;
                    if (str == null) {
                        poolNotificationMsgList.add(str);
                    } else {
                        Log.d(CatfishServiceExecutor.TAG, "msg null on save message to notification msg");
                    }
                    if (poolNotificationMsgList.size() > 6) {
                        poolNotificationMsgList.remove(0);
                    }
                    this.mService.setPoolNotificationMsgList(poolNotificationMsgList);
                    this.mService.setPoolNotificationNameList(poolNotificationNameList);
                    defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.mService);
                    defaultSharedPreferences.edit().putInt("poolNotificationCount", defaultSharedPreferences.getInt("poolNotificationCount", 0) + 1).commit();
                    defaultSharedPreferences.edit().putString("poolNotificationLastTopic", poolDataStorage.getStringImageThumbUriInTopic(str2)).commit();
                }
            }
            str = str2;
            if (catfishMessageObject.messagetype == MessageType.CONFRC_JOINED) {
                str = " ";
            }
            if (catfishMessageObject.topic_key == null) {
            }
            poolDataStorage = new PoolDataStorage(this.mService);
            topicTitle = poolDataStorage.getTopicTitle(str2);
            if (poolNotificationNameList.contains(topicTitle)) {
                poolNotificationNameList.add(topicTitle);
            }
            str = str + '\u0007' + topicTitle + '\u0007' + this.mService.getString(R.string.invite_you_to) + " " + topicTitle;
            if (str == null) {
                Log.d(CatfishServiceExecutor.TAG, "msg null on save message to notification msg");
            } else {
                poolNotificationMsgList.add(str);
            }
            if (poolNotificationMsgList.size() > 6) {
                poolNotificationMsgList.remove(0);
            }
            this.mService.setPoolNotificationMsgList(poolNotificationMsgList);
            this.mService.setPoolNotificationNameList(poolNotificationNameList);
            defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.mService);
            defaultSharedPreferences.edit().putInt("poolNotificationCount", defaultSharedPreferences.getInt("poolNotificationCount", 0) + 1).commit();
            defaultSharedPreferences.edit().putString("poolNotificationLastTopic", poolDataStorage.getStringImageThumbUriInTopic(str2)).commit();
        }
    }

    class ReAcceptFriendRequest implements IDropableRunnable, Runnable {
        private CatfishRESTAPI catfishRestAPI = null;
        private long mAge = 0;
        private String mRecipient;
        private long mSequence;
        private String mServer = null;
        public int scheduleNum = 0;

        public ReAcceptFriendRequest(String str, long j) {
            this.mRecipient = str;
            this.mSequence = j;
            this.mAge = System.currentTimeMillis();
            this.mServer = CatfishService.getCurrentServerHost();
        }

        public void dropRunnable() {
        }

        public long getAge() {
            return this.mAge;
        }

        public int getScheduleNum() {
            return this.scheduleNum;
        }

        public void incraseScheduleNum() {
            this.scheduleNum++;
        }

        public void run() {
            CatfishResult acceptFriend = this.catfishRestAPI.acceptFriend(this.mServer, CatfishServiceExecutor.this.userpin, this.mRecipient, this.mSequence);
            if (acceptFriend.hasFailure()) {
                acceptFriend.cleaningup();
                this.mServer = CatfishService.getServerHost();
                CatfishServiceExecutor.this.service.scheduleRunnableToService(this, 0);
                return;
            }
            if (acceptFriend.hasSuccess()) {
                acceptFriend.cleaningup();
            } else {
                acceptFriend.cleaningup();
            }
        }

        public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
            this.catfishRestAPI = catfishRESTAPI;
        }
    }

    class ReSendFriendRequest implements IDropableRunnable, Runnable {
        private CatfishRESTAPI catfishRestAPI = null;
        private long mAge = 0;
        private String mRecipient;
        private String mServer = null;
        public int scheduleNum = 0;

        public ReSendFriendRequest(String str) {
            this.mRecipient = str;
            this.mAge = System.currentTimeMillis();
            this.mServer = CatfishService.getCurrentServerHost();
        }

        public void dropRunnable() {
        }

        public long getAge() {
            return this.mAge;
        }

        public int getScheduleNum() {
            return this.scheduleNum;
        }

        public void incraseScheduleNum() {
            this.scheduleNum++;
        }

        public void run() {
            CatfishResult sendRequestFriend = this.catfishRestAPI.sendRequestFriend(this.mServer, CatfishServiceExecutor.this.userpin, this.mRecipient, "");
            if (sendRequestFriend.hasFailure()) {
                sendRequestFriend.cleaningup();
                this.mServer = CatfishService.getServerHost();
                CatfishServiceExecutor.this.service.scheduleRunnableToService(this, 0);
                return;
            }
            if (sendRequestFriend.hasSuccess()) {
                sendRequestFriend.cleaningup();
            } else {
                sendRequestFriend.cleaningup();
            }
        }

        public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
            this.catfishRestAPI = catfishRESTAPI;
        }
    }

    public class RequestNewFriendProfile implements IDropableRunnable, Runnable {
        private CatfishRESTAPI catfishRestAPI = null;
        private long mAge = 0;
        private String mFriendpin;
        private String mServer;
        private CatfishService mService = null;
        private int mTries = 0;
        private String mUserpin;
        public int scheduleNum = 0;

        public RequestNewFriendProfile(CatfishService catfishService, String str) {
            this.mFriendpin = str;
            this.mServer = CatfishService.getCurrentServerHost();
            this.mUserpin = CatfishService.getUserPIN();
            this.mService = catfishService;
            this.mAge = System.currentTimeMillis();
        }

        public void dropRunnable() {
        }

        public long getAge() {
            return this.mAge;
        }

        public int getScheduleNum() {
            return this.scheduleNum;
        }

        public void incraseScheduleNum() {
            this.scheduleNum++;
        }

        public void run() {
            CatfishResult userProfileInfo = this.catfishRestAPI.getUserProfileInfo(this.mServer, this.mUserpin, this.mFriendpin);
            if (userProfileInfo.hasSuccess()) {
                this.mService.postRunnableToDbThread(new UpdateNewFriendProfile(this.mService, this.mServer, this.mFriendpin, userProfileInfo.username, userProfileInfo.userstatus, userProfileInfo.object_sequence));
            } else if (userProfileInfo.hasFailure()) {
                this.mServer = CatfishService.getServerHost();
                this.mTries++;
                if (this.mTries < 10) {
                    CatfishServiceExecutor.this.service.scheduleRunnableToService(this, 0);
                    return;
                }
                r0 = new Bundle();
                r0.putString(FriendListDataStorage.FRIENDPIN, this.mFriendpin);
                this.mService.signalHasNewFriend(r0);
            } else {
                Log.e(CatfishServiceExecutor.TAG, "Update Friend Profile: Request Profile (" + this.mFriendpin + "): NOT FOUND");
                r0 = new Bundle();
                r0.putString(FriendListDataStorage.FRIENDPIN, this.mFriendpin);
                this.mService.signalHasNewFriend(r0);
            }
        }

        public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
            this.catfishRestAPI = catfishRESTAPI;
        }
    }

    public class SendDeliveredSignal implements IDropableRunnable, Runnable {
        private static final String TAG = "SendDeliveredSignal";
        private CatfishRESTAPI catfishRestAPI = null;
        private long mAge = 0;
        private String mServer = null;
        private CatfishService mService = null;
        public int scheduleNum = 0;
        private ArrayList senderlist = null;
        private String userpin = null;

        public SendDeliveredSignal(CatfishService catfishService, String str, String str2, ArrayList arrayList) {
            this.senderlist = arrayList;
            this.mServer = str;
            this.userpin = str2;
            this.mService = catfishService;
            this.mAge = System.currentTimeMillis();
        }

        private void cleaningup() {
            this.senderlist = null;
            this.mServer = null;
            this.userpin = null;
            this.mService = null;
        }

        public void dropRunnable() {
            this.senderlist.clear();
            cleaningup();
        }

        public long getAge() {
            return this.mAge;
        }

        public int getScheduleNum() {
            return this.scheduleNum;
        }

        public void incraseScheduleNum() {
            this.scheduleNum++;
        }

        public void run() {
            while (this.senderlist.size() > 0) {
                MessageSender messageSender = (MessageSender) this.senderlist.get(0);
                if (!this.catfishRestAPI.notifyMessageDelivered(this.mServer, this.userpin, messageSender.senderpin, messageSender.sequence).hasSuccess()) {
                    Log.d(TAG, "FAIL TO SEND DELIVERED SIGNAL: BREAK");
                    break;
                }
                this.senderlist.remove(0);
            }
            if (this.senderlist.size() > 0) {
                Log.d(TAG, "PENDING JOB: RESCHEDULE");
                this.mServer = CatfishService.getServerHost();
                this.mService.scheduleRunnableToService(this, 0);
                return;
            }
            Log.d(TAG, "JOBS DONE.");
            this.senderlist.clear();
            cleaningup();
        }

        public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
            this.catfishRestAPI = catfishRESTAPI;
        }
    }

    public class UpdateNewFriendProfile implements Runnable {
        private String mFriendname;
        private String mFriendpin;
        private String mFriendstatus;
        private long mFriendstatusSequence;
        private String mServer;
        private CatfishService mService;

        public UpdateNewFriendProfile(CatfishService catfishService, String str, String str2, String str3, String str4, long j) {
            this.mFriendpin = str2;
            this.mFriendname = str3;
            this.mFriendstatus = str4;
            this.mFriendstatusSequence = j;
            this.mService = catfishService;
            this.mServer = str;
        }

        public void run() {
            CatfishDataStorage catfishDataStorage = new CatfishDataStorage(this.mService);
            FriendListDataStorage friendListDataStorage = new FriendListDataStorage(this.mService);
            CatfishMessageObject obtain = CatfishMessageObject.obtain();
            obtain.senderpin = this.mFriendpin;
            obtain.username = this.mFriendname;
            obtain.userstatus = this.mFriendstatus;
            obtain.object_sequence = this.mFriendstatusSequence;
            Bundle bundle;
            if (friendListDataStorage.updateFriendProfile(obtain)) {
                bundle = new Bundle();
                bundle.putString(FriendListDataStorage.FRIENDPIN, this.mFriendpin);
                bundle.putString(FriendListDataStorage.FRIENDNAME, this.mFriendname);
                bundle.putString("friendstatus", this.mFriendstatus);
                this.mService.signalHasNewFriend(bundle);
                this.mService.postRunnableToService(new PPFDownloadExecutor(this.mService, this.mServer, CatfishServiceExecutor.this.userpin, this.mFriendpin, true), 2);
            } else {
                Log.e(CatfishServiceExecutor.TAG, "Update Friend Profile: Update DB (" + this.mFriendpin + "): FAIL");
                bundle = new Bundle();
                bundle.putString(FriendListDataStorage.FRIENDPIN, this.mFriendpin);
                this.mService.signalHasNewFriend(bundle);
            }
            long uniqueMonotonicSequence = CatfishRESTAPI.uniqueMonotonicSequence();
            catfishDataStorage.addRecentupdates(this.mFriendpin, UpdateRecent.ACCEPTFRIEND.ordinal(), this.mService.getString(R.string.rac_friend_new_friend), uniqueMonotonicSequence);
            CatfishService catfishService = this.mService;
            CatfishService.getCatfishPreferences().edit().putLong(CatfishService.FRIENDLIST_TIMESTAMP, uniqueMonotonicSequence).commit();
            catfishService = this.mService;
            CatfishService catfishService2 = this.mService;
            String str = this.mServer;
            CatfishService catfishService3 = this.mService;
            catfishService.postRunnableToService(new FriendListUpdateExecutor(null, catfishService2, str, CatfishService.getUserPIN()));
            obtain.recycle();
        }
    }

    public class UpdateRequesterProfile implements IDropableRunnable, Runnable {
        private CatfishRESTAPI catfishRestAPI = null;
        private long mAge = 0;
        private String mFriendpin;
        private String mServer;
        private CatfishService mService = null;
        private String mUserpin;
        public int scheduleNum = 0;

        public UpdateRequesterProfile(CatfishService catfishService, String str) {
            this.mFriendpin = str;
            this.mServer = CatfishService.getCurrentServerHost();
            this.mUserpin = CatfishService.getUserPIN();
            this.mService = catfishService;
            this.mAge = System.currentTimeMillis();
        }

        public void dropRunnable() {
        }

        public long getAge() {
            return this.mAge;
        }

        public int getScheduleNum() {
            return this.scheduleNum;
        }

        public void incraseScheduleNum() {
            this.scheduleNum++;
        }

        public void run() {
            CatfishResult userProfileInfo = this.catfishRestAPI.getUserProfileInfo(this.mServer, this.mUserpin, this.mFriendpin);
            if (userProfileInfo.hasSuccess()) {
                this.mService.postRunnableToDbThread(new UpdateRequesterProfileinDB(this.mService, this.mFriendpin, userProfileInfo.username, 0));
                this.mService.postRunnableToService(new PPFDownloadExecutor(this.mService, this.mServer, this.mUserpin, this.mFriendpin, true), 2);
            } else if (userProfileInfo.hasFailure()) {
                this.mServer = CatfishService.getServerHost();
                this.mService.scheduleRunnableToService(this, 0);
                return;
            } else {
                Log.e(CatfishServiceExecutor.TAG, "GET USER PROFILE (REQUEST): ERROR: DROP");
                this.mService.postRunnableToDbThread(new UpdateRequesterProfileinDB(this.mService, this.mFriendpin, userProfileInfo.username, MessageType.INVALID_REQUEST.ordinal()));
            }
            if (this.catfishRestAPI != null) {
                this.catfishRestAPI.shutdownConnectionManager();
            }
        }

        public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
            this.catfishRestAPI = catfishRESTAPI;
        }
    }

    public class UpdateRequesterProfileinDB implements Runnable {
        private String mFriendname;
        private String mFriendpin;
        private int mMessageType;
        private CatfishService mService = null;

        public UpdateRequesterProfileinDB(CatfishService catfishService, String str, String str2, int i) {
            this.mService = catfishService;
            this.mFriendpin = str;
            this.mFriendname = str2;
            this.mMessageType = i;
        }

        public void run() {
            new FriendListDataStorage(this.mService).updateNewFriendRequest(this.mFriendpin, this.mFriendname, this.mMessageType);
        }
    }

    public CatfishServiceExecutor(CatfishService catfishService, String str, String str2) {
        this.server = str;
        this.service = catfishService;
        this.userpin = str2;
        this.mAge = System.currentTimeMillis();
    }

    private CatfishResult do_getMessages() {
        SharedPreferences sharedPreferences = this.service.getSharedPreferences(CatfishService.COMMON_PREFERENCE_NAME, 0);
        Log.d(TAG, "RDCOUNTER=" + sharedPreferences.getLong(CatfishService.RDCOUNTER_PREF, 0));
        CatfishResult messagesWithRdcounter = this.catfishRestAPI.getMessagesWithRdcounter(this.server, this.userpin, sharedPreferences.getLong(CatfishService.RDCOUNTER_PREF, 0));
        if (messagesWithRdcounter.hasSuccess()) {
            if (messagesWithRdcounter.rdcounter == 0) {
                return messagesWithRdcounter;
            }
            sharedPreferences.edit().putLong(CatfishService.RDCOUNTER_PREF, messagesWithRdcounter.rdcounter).commit();
            return messagesWithRdcounter;
        } else if (messagesWithRdcounter.hasFailure()) {
            this.server = CatfishService.getServerHost();
            this.service.scheduleRunnableToService(this, 0);
            return null;
        } else {
            messagesWithRdcounter.cleaningup();
            this.service.signalGetMessagesDone(false);
            return null;
        }
    }

    public void dropRunnable() {
        Log.e(TAG, "Drop by service");
        CatfishService catfishService = this.service;
        CatfishService.releaseGetMessagesLock();
    }

    public long getAge() {
        return this.mAge;
    }

    public int getScheduleNum() {
        return this.scheduleNum;
    }

    public void incraseScheduleNum() {
        this.scheduleNum++;
    }

    public void run() {
        CatfishService catfishService;
        if (this.service == null) {
            Log.e(TAG, "----Service is NULL (?)---");
            catfishService = this.service;
            CatfishService.releaseGetMessagesLock();
        } else if (this.server == null) {
            Log.e(TAG, "----Server is NULL (?)---");
            catfishService = this.service;
            CatfishService.releaseGetMessagesLock();
        } else if (this.userpin == null) {
            Log.e(TAG, "----User PIN is NULL (?)---");
            catfishService = this.service;
            CatfishService.releaseGetMessagesLock();
        } else {
            CatfishResult do_getMessages = do_getMessages();
            if (do_getMessages != null) {
                this.service.postRunnableToDbThread(new ProcessMessagesInDBThread(this.service, this.server, this.userpin, do_getMessages));
            }
        }
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
