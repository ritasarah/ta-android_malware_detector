package com.catfiz.fif;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import com.catfiz.util.Log;

public class FifDataStorage {
    public static final String ADS_INDEX = "ads_index";
    public static final String ADS_TABLE_NAME = "ads_list";
    public static final String APPS_INDEX = "ads_index";
    public static final String APPS_TABLE_NAME = "apps_list";
    public static final String APPS_TYPE_INDEX = "ads_index";
    private static final String TAG = "FifDataStorage";
    private static FifDatabaseHelper mDBHelper = null;
    private static SQLiteDatabase mFifDataStorageDB = null;
    private SQLiteDatabase cfFifLocalDB;
    private Context mContext;

    class FifDatabaseHelper extends SQLiteOpenHelper {
        private static final String DATABASE_NAME = "catfishfif.db";
        private static final int DATABASE_VERSION = 8;

        public FifDatabaseHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }

        private void dropAllFIFTables(SQLiteDatabase sQLiteDatabase) {
            sQLiteDatabase.execSQL("DROP TABLE IF EXISTS ads_list");
            sQLiteDatabase.execSQL("DROP TABLE IF EXISTS apps_list");
            sQLiteDatabase.execSQL("DROP INDEX IF EXISTS ads_index");
            sQLiteDatabase.execSQL("DROP INDEX IF EXISTS ads_index");
        }

        public void onCreate(SQLiteDatabase sQLiteDatabase) {
        }

        public void onUpgrade(SQLiteDatabase sQLiteDatabase, int i, int i2) {
            Log.d(FifDataStorage.TAG, "Upgrade Pool DB from version: " + String.valueOf(i) + " to version: " + String.valueOf(i2));
            dropAllFIFTables(sQLiteDatabase);
        }
    }

    public FifDataStorage(Context context) {
        this.mContext = context;
        if (mDBHelper == null) {
            Log.d(TAG, "Create new DB Helper");
            mDBHelper = new FifDatabaseHelper(context);
        }
    }

    public SQLiteDatabase getDB() {
        mFifDataStorageDB = mDBHelper.getWritableDatabase();
        return mFifDataStorageDB;
    }
}
