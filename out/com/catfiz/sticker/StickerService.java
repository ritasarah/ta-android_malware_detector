package com.catfiz.sticker;

import android.content.Context;
import com.catfiz.service.CatfishRESTAPI;
import com.catfiz.service.CatfishService;
import com.catfiz.service.ICatfishClientInterface;
import com.catfiz.service.IDropableRunnable;

public class StickerService implements IDropableRunnable, Runnable {
    public static final String CATFIZ_STICKER_EXTENSION = ".cfs";
    public static final String STATUS_STICKER_ASSET_PATH_ERROR = "status_sticker/error.cvg";
    public static final String STATUS_STICKER_ASSET_PATH_ERROR_CHAT = "status_sticker/error_chat.cvg";
    public static final String STATUS_STICKER_ASSET_PATH_EXTRACT_DOWNLOAD = "status_sticker/extract_download.cvg";
    public static final String STATUS_STICKER_ASSET_PATH_EXTRACT_DOWNLOAD_CHAT = "status_sticker/extract_download_chat.cvg";
    public static final String STATUS_STICKER_ASSET_PATH_ROOT = "status_sticker";
    public static final String STATUS_STICKER_ASSET_PATH_WAITING = "status_sticker/waiting.cvg";
    public static final String STATUS_STICKER_ASSET_PATH_WAITING_CHAT = "status_sticker/waiting_chat.cvg";
    public static final int STICKER_ERROR_STATUS_LOCALSTORAGE = 100;
    public static final int STICKER_ERROR_STATUS_STICKER_BUILTIN_NOTFOUND = 200;
    public static final int STICKER_ERROR_STATUS_STICKER_DATABASE_NOTFOUND = 300;
    public static final int STICKER_TYPE_ANIMATION = 1;
    public static final int STICKER_TYPE_FIRSTFRAME = 32;
    public static final int STICKER_TYPE_ICON = 16;
    public static final int STICKER_TYPE_MULTI = 8;
    public static final int STICKER_TYPE_SINGLE = 4;
    public static final int STICKER_TYPE_STILL = 2;
    private static String mServer = null;
    private CatfishRESTAPI catfishRestAPI = null;
    private StickerServiceAction mAction = null;
    private volatile long mAge = System.currentTimeMillis();
    private ICatfishClientInterface mCatfizClient = null;
    private IStickerClientInterface mCatfizStickerClient = null;
    private Context mContext;
    private CatfishService mService = null;
    private StickerMessageObject mStickerObject = null;
    public int scheduleNum = 0;

    /* synthetic */ class AnonymousClass1 {
        static final /* synthetic */ int[] $SwitchMap$com$catfiz$sticker$StickerService$StickerServiceAction = new int[StickerServiceAction.values().length];

        static {
            try {
                $SwitchMap$com$catfiz$sticker$StickerService$StickerServiceAction[StickerServiceAction.DOWNLOAD_STICKER.ordinal()] = StickerService.STICKER_TYPE_ANIMATION;
            } catch (NoSuchFieldError e) {
            }
            try {
                $SwitchMap$com$catfiz$sticker$StickerService$StickerServiceAction[StickerServiceAction.DOWNLOAD_STICKER_PACKAGE.ordinal()] = StickerService.STICKER_TYPE_STILL;
            } catch (NoSuchFieldError e2) {
            }
        }
    }

    public enum StickerFormatType {
        FORMAT_BITMAP,
        FORMAT_SVG
    }

    public enum StickerPackageType {
        FREE,
        PAID,
        BUILT_IN
    }

    public enum StickerServiceAction {
        DOWNLOAD_STICKER_PACKAGE,
        DOWNLOAD_STICKER
    }

    public enum StickerStatus {
        READY,
        DOWNLOADING,
        EXTRACTING,
        ERROR,
        NOT_EXTRACTED
    }

    public StickerService(ICatfishClientInterface iCatfishClientInterface, CatfishService catfishService, String str, Context context, StickerMessageObject stickerMessageObject, StickerServiceAction stickerServiceAction) {
        this.mCatfizClient = iCatfishClientInterface;
        this.mContext = context;
        this.mService = catfishService;
        mServer = str;
        this.mAge = System.currentTimeMillis();
        this.mStickerObject = stickerMessageObject;
        this.mAction = stickerServiceAction;
    }

    public StickerService(IStickerClientInterface iStickerClientInterface, CatfishService catfishService, String str, Context context, StickerMessageObject stickerMessageObject, StickerServiceAction stickerServiceAction) {
        this.mCatfizStickerClient = iStickerClientInterface;
        this.mContext = context;
        this.mService = catfishService;
        mServer = str;
        this.mAge = System.currentTimeMillis();
        this.mStickerObject = stickerMessageObject;
        this.mAction = stickerServiceAction;
    }

    public void dropRunnable() {
    }

    public long getAge() {
        return this.mAge;
    }

    public int getScheduleNum() {
        return this.scheduleNum;
    }

    public void incraseScheduleNum() {
        this.scheduleNum += STICKER_TYPE_ANIMATION;
    }

    public void run() {
        switch (AnonymousClass1.$SwitchMap$com$catfiz$sticker$StickerService$StickerServiceAction[this.mAction.ordinal()]) {
        }
    }

    public void setRestAPI(CatfishRESTAPI catfishRESTAPI) {
        this.catfishRestAPI = catfishRESTAPI;
    }
}
