package com.catfiz.sticker;

import android.content.Context;
import android.graphics.Bitmap;
import android.os.AsyncTask;
import com.catfiz.sticker.StickerService.StickerStatus;
import com.catfiz.util.Log;
import com.catfiz.util.Utils;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

public class StatusStickerMaker extends AsyncTask {
    private static final String TAG = "StatusStickerMaker";
    private Context mContext = null;
    private boolean mSmallThumb = false;
    private StickerStatus mStatusSticker = null;

    public StatusStickerMaker(Context context, StickerStatus stickerStatus) {
        this.mContext = context;
        this.mStatusSticker = stickerStatus;
    }

    public StatusStickerMaker(Context context, boolean z, StickerStatus stickerStatus) {
        this.mContext = context;
        this.mSmallThumb = z;
        this.mStatusSticker = stickerStatus;
    }

    protected Bitmap doInBackground(String... strArr) {
        if (strArr.length != 1) {
            throw new IllegalArgumentException("We expect to process only one Uri");
        }
        String str = strArr[0];
        Log.d(TAG, "path=" + str);
        Bitmap bitmap = null;
        try {
            InputStream open = this.mContext.getAssets().open(str);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            byte[] bArr = new byte[Utils.IO_BUFFER_SIZE];
            while (true) {
                int read = open.read(bArr);
                if (read == -1) {
                    break;
                }
                byteArrayOutputStream.write(bArr, 0, read);
            }
            byteArrayOutputStream.flush();
            bitmap = StickerSvgUtil.convertSVGToBitmap(this.mContext, byteArrayOutputStream.toByteArray(), (long) byteArrayOutputStream.size());
        } catch (IOException e) {
            Log.e(TAG, "error = " + e.getMessage());
            e.printStackTrace();
        }
        return this.mSmallThumb ? Bitmap.createScaledBitmap(bitmap, (int) (((float) bitmap.getWidth()) * StickerSvgUtil.SVGBITMAP_THUMB_SCALE), (int) (((float) bitmap.getHeight()) * StickerSvgUtil.SVGBITMAP_THUMB_SCALE), true) : bitmap;
    }
}
