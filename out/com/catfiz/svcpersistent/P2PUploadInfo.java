package com.catfiz.svcpersistent;

public class P2PUploadInfo {
    private static final int MAX_POOL_SIZE = 50;
    private static P2PUploadInfo sPool;
    private static int sPoolSize = 0;
    private static final Object sPoolSync = new Object();
    public String mAdditionalData;
    public int mBytestart;
    public String mChannelID;
    public int mChunkOffset;
    public int mDataSize;
    public int mEndByte;
    public String mFilePath;
    public String mKey;
    public String mRecipient;
    public int mStreamType;
    public long mTimeStamp;
    P2PUploadInfo next;

    public static P2PUploadInfo obtain() {
        synchronized (sPoolSync) {
            if (sPool != null) {
                P2PUploadInfo p2PUploadInfo = sPool;
                sPool = p2PUploadInfo.next;
                p2PUploadInfo.next = null;
                sPoolSize--;
                return p2PUploadInfo;
            }
            return new P2PUploadInfo();
        }
    }

    void clearForRecycle() {
        this.mTimeStamp = 0;
        this.mBytestart = 0;
        this.mEndByte = 0;
        this.mFilePath = null;
        this.mChannelID = null;
        this.mRecipient = null;
        this.mStreamType = 0;
        this.mKey = null;
        this.mDataSize = 0;
        this.mAdditionalData = null;
    }

    public void recycle() {
        clearForRecycle();
        synchronized (sPoolSync) {
            if (sPoolSize < MAX_POOL_SIZE) {
                this.next = sPool;
                sPool = this;
                sPoolSize++;
            }
        }
    }
}
