package com.catfiz.media;

import android.content.Context;
import android.media.AudioManager;
import android.media.Ringtone;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Vibrator;
import com.catfiz.service.CatfishService;
import com.catfiz.util.Log;

public class RingtonePlayer {
    private static final String TAG = "RingtonePlayer";
    private static final long[] sVibratePattern = new long[]{200, 300, 200, 300};

    final class AnonymousClass1 implements Runnable {
        final /* synthetic */ Context val$context;

        AnonymousClass1(Context context) {
            this.val$context = context;
        }

        public void run() {
            Ringtone access$000 = RingtonePlayer.getRingtoneFromSettings(this.val$context, "enable_chat_ringtone", CatfishService.CHAT_RINGTONE);
            if (access$000 != null && ((AudioManager) this.val$context.getSystemService("audio")).getStreamVolume(5) != 0) {
                try {
                    access$000.setStreamType(5);
                    access$000.play();
                    while (access$000.isPlaying()) {
                        synchronized (this) {
                            try {
                                wait(300);
                            } catch (InterruptedException e) {
                            }
                        }
                    }
                    try {
                        access$000.stop();
                        return;
                    } catch (Exception e2) {
                        return;
                    }
                } catch (Exception e3) {
                    return;
                }
            }
            return;
        }
    }

    final class AnonymousClass2 implements Runnable {
        final /* synthetic */ Context val$context;

        AnonymousClass2(Context context) {
            this.val$context = context;
        }

        public void run() {
            Ringtone access$000 = RingtonePlayer.getRingtoneFromSettings(this.val$context, "enable_pool_ringtone", CatfishService.GROUP_RINGTONE);
            if (access$000 != null && ((AudioManager) this.val$context.getSystemService("audio")).getStreamVolume(5) != 0) {
                try {
                    access$000.setStreamType(5);
                    access$000.play();
                    while (access$000.isPlaying()) {
                        synchronized (this) {
                            try {
                                wait(300);
                            } catch (InterruptedException e) {
                            }
                        }
                    }
                    try {
                        access$000.stop();
                        return;
                    } catch (Exception e2) {
                        return;
                    }
                } catch (Exception e3) {
                    return;
                }
            }
            return;
        }
    }

    final class AnonymousClass3 implements Runnable {
        final /* synthetic */ Context val$context;

        AnonymousClass3(Context context) {
            this.val$context = context;
        }

        public void run() {
            Ringtone access$000 = RingtonePlayer.getRingtoneFromSettings(this.val$context, "enable_friend_status_ringtone", "select_friend_status_ringtone");
            if (access$000 != null && ((AudioManager) this.val$context.getSystemService("audio")).getStreamVolume(5) != 0) {
                try {
                    access$000.setStreamType(5);
                    access$000.play();
                    while (access$000.isPlaying()) {
                        synchronized (this) {
                            try {
                                wait(300);
                            } catch (InterruptedException e) {
                            }
                        }
                    }
                    try {
                        access$000.stop();
                        return;
                    } catch (Exception e2) {
                        return;
                    }
                } catch (Exception e3) {
                    return;
                }
            }
            return;
        }
    }

    final class AnonymousClass4 implements Runnable {
        final /* synthetic */ Context val$context;

        AnonymousClass4(Context context) {
            this.val$context = context;
        }

        public void run() {
            Ringtone access$000 = RingtonePlayer.getRingtoneFromSettings(this.val$context, "enable_status_ringtone", CatfishService.MY_STATUS_RINGTONE);
            if (access$000 != null) {
                Log.d(RingtonePlayer.TAG, "play my status ringtone with ringtone : " + access$000.toString());
                if (((AudioManager) this.val$context.getSystemService("audio")).getStreamVolume(5) != 0) {
                    try {
                        access$000.setStreamType(5);
                        access$000.play();
                        while (access$000.isPlaying()) {
                            synchronized (this) {
                                try {
                                    wait(300);
                                } catch (InterruptedException e) {
                                }
                            }
                        }
                        try {
                            access$000.stop();
                            return;
                        } catch (Exception e2) {
                            return;
                        }
                    } catch (Exception e3) {
                        return;
                    }
                }
                return;
            }
            return;
        }
    }

    final class AnonymousClass5 implements Runnable {
        final /* synthetic */ Context val$context;

        AnonymousClass5(Context context) {
            this.val$context = context;
        }

        public void run() {
            Vibrator vibrator;
            try {
                vibrator = (Vibrator) this.val$context.getSystemService("vibrator");
                try {
                    vibrator.vibrate(RingtonePlayer.sVibratePattern, 0);
                    synchronized (this) {
                        try {
                            wait(1000);
                        } catch (InterruptedException e) {
                        }
                    }
                    try {
                        vibrator.cancel();
                    } catch (Exception e2) {
                    }
                } catch (Exception e3) {
                    try {
                        vibrator.cancel();
                    } catch (Exception e4) {
                    }
                }
            } catch (Exception e5) {
                vibrator = null;
                vibrator.cancel();
            }
        }
    }

    private static synchronized Ringtone getRingtoneFromSettings(Context context, String str, String str2) {
        Ringtone ringtone = null;
        synchronized (RingtonePlayer.class) {
            String string = CatfishService.getCatfishPreferences().getString(str2, null);
            if (string == null) {
                Log.e(TAG, "Fail to get preference data");
            } else {
                Uri parse;
                try {
                    parse = Uri.parse(string);
                } catch (Exception e) {
                    parse = RingtoneManager.getDefaultUri(2);
                }
                try {
                    ringtone = RingtoneManager.getRingtone(context, parse);
                    Log.d(TAG, "Ringtone is available...");
                } catch (Exception e2) {
                    Log.e(TAG, "Exception: " + e2.toString());
                }
            }
        }
        return ringtone;
    }

    public static void play(Context context) {
        new Thread(new AnonymousClass1(context)).start();
    }

    public static void playFriendStatus(Context context) {
        new Thread(new AnonymousClass3(context)).start();
    }

    public static void playMyStatus(Context context) {
        new Thread(new AnonymousClass4(context)).start();
    }

    public static void playPool(Context context) {
        new Thread(new AnonymousClass2(context)).start();
    }

    public static void vibrate(Context context) {
        new Thread(new AnonymousClass5(context)).start();
    }
}
