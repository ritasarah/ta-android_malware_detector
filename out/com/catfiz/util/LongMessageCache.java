package com.catfiz.util;

import android.content.Context;
import android.support.v4.app.FragmentActivity;
import android.support.v4.util.LruCache;

public class LongMessageCache {
    private static final boolean DEFAULT_CLEAR_DISK_CACHE_ON_START = false;
    private static final boolean DEFAULT_DISK_CACHE_ENABLED = true;
    private static final int DEFAULT_DISK_CACHE_SIZE = 10485760;
    private static final boolean DEFAULT_MEM_CACHE_ENABLED = true;
    private static final int DEFAULT_MEM_CACHE_SIZE = 5242880;
    private static final String TAG = "LongMessageCache";
    private LruCache mMemoryCache = null;

    public class LongMessageCacheParams {
        public boolean clearDiskCacheOnStart = LongMessageCache.DEFAULT_CLEAR_DISK_CACHE_ON_START;
        public boolean diskCacheEnabled = LongMessageCache.DEFAULT_MEM_CACHE_ENABLED;
        public int diskCacheSize = LongMessageCache.DEFAULT_DISK_CACHE_SIZE;
        public int memCacheSize = LongMessageCache.DEFAULT_MEM_CACHE_SIZE;
        public boolean memoryCacheEnabled = LongMessageCache.DEFAULT_MEM_CACHE_ENABLED;
        public String uniqueName;

        public LongMessageCacheParams(String str) {
            this.uniqueName = str;
        }
    }

    public LongMessageCache(Context context, LongMessageCacheParams longMessageCacheParams) {
        init(context, longMessageCacheParams);
    }

    public LongMessageCache(Context context, String str) {
        init(context, new LongMessageCacheParams(str));
    }

    public static LongMessageCache findOrCreateCache(FragmentActivity fragmentActivity, LongMessageCacheParams longMessageCacheParams) {
        LongMessageCache longMessageCache;
        RetainFragment findOrCreateRetainFragment = RetainFragment.findOrCreateRetainFragment(fragmentActivity.getSupportFragmentManager());
        try {
            longMessageCache = (LongMessageCache) findOrCreateRetainFragment.getObject();
        } catch (ClassCastException e) {
            longMessageCache = null;
        }
        if (longMessageCache != null) {
            return longMessageCache;
        }
        longMessageCache = new LongMessageCache((Context) fragmentActivity, longMessageCacheParams);
        findOrCreateRetainFragment.setObject(longMessageCache);
        return longMessageCache;
    }

    public static LongMessageCache findOrCreateCache(FragmentActivity fragmentActivity, String str) {
        return findOrCreateCache(fragmentActivity, new LongMessageCacheParams(str));
    }

    private void init(Context context, LongMessageCacheParams longMessageCacheParams) {
        DiskLruCache.getDiskCacheDir(context, longMessageCacheParams.uniqueName);
        if (longMessageCacheParams.memoryCacheEnabled) {
            this.mMemoryCache = new LruCache(longMessageCacheParams.memCacheSize) {
                protected int sizeOf(String str, String str2) {
                    return str2.getBytes().length;
                }
            };
        }
    }

    public void addMessageToCache(String str, String str2) {
        if (str != null && str2 != null && this.mMemoryCache != null && this.mMemoryCache.get(str) == null) {
            try {
                this.mMemoryCache.put(str, str2);
            } catch (Exception e) {
                this.mMemoryCache.evictAll();
            }
        }
    }

    public void clearCaches() {
        if (this.mMemoryCache != null) {
            this.mMemoryCache.evictAll();
        }
    }

    public String getMessageFromMemCache(String str) {
        if (this.mMemoryCache != null) {
            String str2 = (String) this.mMemoryCache.get(str);
            if (str2 != null) {
                Log.d(TAG, "Memory cache hit");
                return str2;
            }
        }
        return null;
    }

    public void removeCache(String str) {
        if (this.mMemoryCache != null) {
            this.mMemoryCache.remove(str);
        }
    }
}
