package com.catfiz.util;

import android.content.Context;
import android.support.v4.app.FragmentActivity;
import android.support.v4.util.LruCache;
import android.text.Spannable;

public class SpannableMessageCache {
    private static final boolean DEFAULT_CLEAR_DISK_CACHE_ON_START = false;
    private static final boolean DEFAULT_DISK_CACHE_ENABLED = true;
    private static final int DEFAULT_DISK_CACHE_SIZE = 10485760;
    private static final boolean DEFAULT_MEM_CACHE_ENABLED = true;
    private static final int DEFAULT_MEM_CACHE_SIZE = 5242880;
    private static final String TAG = "SpannableMessageCache";
    private LruCache mMemoryCache = null;

    public class SpannableMessageCacheParams {
        public boolean clearDiskCacheOnStart = SpannableMessageCache.DEFAULT_CLEAR_DISK_CACHE_ON_START;
        public boolean diskCacheEnabled = SpannableMessageCache.DEFAULT_MEM_CACHE_ENABLED;
        public int diskCacheSize = SpannableMessageCache.DEFAULT_DISK_CACHE_SIZE;
        public int memCacheSize = SpannableMessageCache.DEFAULT_MEM_CACHE_SIZE;
        public boolean memoryCacheEnabled = SpannableMessageCache.DEFAULT_MEM_CACHE_ENABLED;
        public String uniqueName;

        public SpannableMessageCacheParams(String str) {
            this.uniqueName = str;
        }
    }

    public SpannableMessageCache(Context context, SpannableMessageCacheParams spannableMessageCacheParams) {
        init(context, spannableMessageCacheParams);
    }

    public SpannableMessageCache(Context context, String str) {
        init(context, new SpannableMessageCacheParams(str));
    }

    public static SpannableMessageCache findOrCreateCache(FragmentActivity fragmentActivity, SpannableMessageCacheParams spannableMessageCacheParams) {
        RetainFragment findOrCreateRetainFragment = RetainFragment.findOrCreateRetainFragment(fragmentActivity.getSupportFragmentManager());
        SpannableMessageCache spannableMessageCache = (SpannableMessageCache) findOrCreateRetainFragment.getObject();
        if (spannableMessageCache != null) {
            return spannableMessageCache;
        }
        spannableMessageCache = new SpannableMessageCache((Context) fragmentActivity, spannableMessageCacheParams);
        findOrCreateRetainFragment.setObject(spannableMessageCache);
        return spannableMessageCache;
    }

    public static SpannableMessageCache findOrCreateCache(FragmentActivity fragmentActivity, String str) {
        return findOrCreateCache(fragmentActivity, new SpannableMessageCacheParams(str));
    }

    private void init(Context context, SpannableMessageCacheParams spannableMessageCacheParams) {
        DiskLruCache.getDiskCacheDir(context, spannableMessageCacheParams.uniqueName);
        if (spannableMessageCacheParams.memoryCacheEnabled) {
            this.mMemoryCache = new LruCache(spannableMessageCacheParams.memCacheSize) {
                protected int sizeOf(String str, Spannable spannable) {
                    return spannable.toString().getBytes().length;
                }
            };
        }
    }

    public void addMessageToCache(String str, Spannable spannable) {
        if (str != null && spannable != null && this.mMemoryCache != null && this.mMemoryCache.get(str) == null) {
            try {
                this.mMemoryCache.put(str, spannable);
            } catch (Exception e) {
                this.mMemoryCache.evictAll();
            }
        }
    }

    public void clearCaches() {
        if (this.mMemoryCache != null) {
            this.mMemoryCache.evictAll();
        }
    }

    public Spannable getMessageFromMemCache(String str) {
        if (this.mMemoryCache != null) {
            Spannable spannable = (Spannable) this.mMemoryCache.get(str);
            if (spannable != null) {
                Log.d(TAG, "Memory cache hit");
                return spannable;
            }
        }
        return null;
    }

    public void removeCache(String str) {
        if (this.mMemoryCache != null) {
            this.mMemoryCache.remove(str);
        }
    }
}
