package com.catfiz.util;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import com.catfiz.consts.CatfizImageSize;

public class ImageRoundedCorners {
    private static final String TAG = "ImageRoundedCorners";
    private static int color = -12434878;

    public static int getPixelFromDp(int i, Context context) {
        float f = context.getResources().getDisplayMetrics().density;
        float f2 = ((float) i) * f;
        Log.d(TAG, "density:" + f);
        return (int) (0.5f + f2);
    }

    public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int i) {
        if (bitmap == null) {
            return null;
        }
        try {
            Bitmap createBitmap = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);
            Canvas canvas = new Canvas(createBitmap);
            Path path = new Path();
            Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
            float width = (((float) i) / CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL) * ((float) bitmap.getWidth());
            path.addRoundRect(new RectF(rect), width, width, Direction.CCW);
            canvas.clipPath(path);
            canvas.drawBitmap(bitmap, rect, rect, null);
            bitmap.recycle();
            return createBitmap;
        } catch (Exception e) {
            e.printStackTrace();
            bitmap.recycle();
            return null;
        }
    }

    public static Bitmap getRoundedCornerBitmapInPool(Bitmap bitmap, int i) {
        if (bitmap == null) {
            return Bitmap.createBitmap(1, 1, Config.ARGB_8888);
        }
        try {
            Bitmap createBitmap = Bitmap.createBitmap((int) (((float) bitmap.getWidth()) * (CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL / ((float) bitmap.getWidth()))), (int) (((float) bitmap.getHeight()) * (CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL / ((float) bitmap.getWidth()))), Config.ARGB_8888);
            Canvas canvas = new Canvas(createBitmap);
            new Canvas(bitmap).scale(CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL / ((float) bitmap.getWidth()), CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL / ((float) bitmap.getWidth()));
            Paint paint = new Paint();
            Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
            RectF rectF = new RectF(rect);
            float width = (((float) i) / CatfizImageSize.IMAGE_REQUIRE_SIZE_PROFILE_POOL) * ((float) bitmap.getWidth());
            paint.setAntiAlias(true);
            canvas.drawARGB(0, 0, 0, 0);
            paint.setColor(color);
            canvas.drawRoundRect(rectF, width, width, paint);
            paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
            canvas.drawBitmap(bitmap, rect, rect, paint);
            return createBitmap;
        } catch (Exception e) {
            e.printStackTrace();
            return Bitmap.createBitmap(1, 1, Config.ARGB_8888);
        }
    }
}
