package com.catfiz.util;

import android.content.res.XmlResourceParser;
import java.io.InputStream;
import java.io.InputStreamReader;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;

public class MimeTypeParser {
    public static final String ATTR_EXTENSION = "extension";
    public static final String ATTR_MIMETYPE = "mimetype";
    private static final String LOG_TAG = "MimeTypeParser";
    public static final String TAG_MIMETYPES = "MimeTypes";
    public static final String TAG_TYPE = "type";
    private MimeTypes mMimeTypes;
    private XmlPullParser mXpp;

    private void addMimeTypeStart() {
        this.mMimeTypes.put(this.mXpp.getAttributeValue(null, ATTR_EXTENSION), this.mXpp.getAttributeValue(null, ATTR_MIMETYPE));
    }

    public MimeTypes fromXml(InputStream inputStream) {
        this.mXpp = XmlPullParserFactory.newInstance().newPullParser();
        this.mXpp.setInput(new InputStreamReader(inputStream));
        return parse();
    }

    public MimeTypes fromXmlResource(XmlResourceParser xmlResourceParser) {
        this.mXpp = xmlResourceParser;
        return parse();
    }

    public MimeTypes parse() {
        this.mMimeTypes = new MimeTypes();
        int eventType = this.mXpp.getEventType();
        while (eventType != 1) {
            String name = this.mXpp.getName();
            if (eventType == 2) {
                if (!name.equals(TAG_MIMETYPES) && name.equals(TAG_TYPE)) {
                    addMimeTypeStart();
                }
            } else if (eventType == 3 && name.equals(TAG_MIMETYPES)) {
            }
            eventType = this.mXpp.next();
        }
        return this.mMimeTypes;
    }
}
