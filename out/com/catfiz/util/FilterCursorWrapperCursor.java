package com.catfiz.util;

import android.database.Cursor;
import android.database.CursorWrapper;
import java.util.Locale;

public class FilterCursorWrapperCursor extends CursorWrapper {
    private static final String TAG = "FilterCursorWrapperCursor";
    private int column;
    private int count = 0;
    private int[] index;
    private int pos = 0;

    public FilterCursorWrapperCursor(Cursor cursor, Cursor cursor2, int i, int i2) {
        super(cursor);
        this.column = i;
        this.count = super.getCount();
        this.index = new int[this.count];
        for (int i3 = 0; i3 < this.count; i3++) {
            super.moveToPosition(i3);
            String string = getString(this.column);
            if (string != null) {
                for (int i4 = 0; i4 < cursor2.getCount(); i4++) {
                    cursor2.moveToPosition(i4);
                    CharSequence toLowerCase = cursor2.getString(i2).toLowerCase(Locale.getDefault());
                    if (!(toLowerCase == null || toLowerCase.equals("") || !string.toLowerCase(Locale.getDefault()).contains(toLowerCase))) {
                        int[] iArr = this.index;
                        int i5 = this.pos;
                        this.pos = i5 + 1;
                        iArr[i5] = i3;
                    }
                }
            }
        }
        this.count = this.pos;
        this.pos = 0;
        super.moveToFirst();
    }

    public int getCount() {
        return this.count;
    }

    public int getPosition() {
        return this.pos;
    }

    public boolean move(int i) {
        return moveToPosition(this.pos + i);
    }

    public boolean moveToFirst() {
        return moveToPosition(0);
    }

    public boolean moveToLast() {
        return moveToPosition(this.count - 1);
    }

    public boolean moveToNext() {
        return moveToPosition(this.pos + 1);
    }

    public boolean moveToPosition(int i) {
        return (i >= this.count || i < 0) ? false : super.moveToPosition(this.index[i]);
    }

    public boolean moveToPrevious() {
        return moveToPosition(this.pos - 1);
    }
}
