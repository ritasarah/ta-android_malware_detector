package com.catfiz.qrlib.result;

import android.app.Activity;
import com.b.a.b.a.C0006g;
import com.b.a.b.a.q;
import com.catfiz.R;
import java.text.DateFormat;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;

public final class CalendarResultHandler extends ResultHandler {
    private static final DateFormat DATE_FORMAT = new SimpleDateFormat("yyyyMMdd", Locale.ENGLISH);
    private static final DateFormat DATE_TIME_FORMAT = new SimpleDateFormat("yyyyMMdd'T'HHmmss", Locale.ENGLISH);

    public CalendarResultHandler(Activity activity, q qVar) {
        super(activity, qVar);
    }

    private static void appendTime(String str, StringBuilder stringBuilder, boolean z, boolean z2) {
        if (str.length() == 8) {
            Date parse;
            synchronized (DATE_FORMAT) {
                parse = DATE_FORMAT.parse(str, new ParsePosition(0));
            }
            Date date = (!z || z2) ? parse : new Date(parse.getTime() - 86400000);
            q.a(DateFormat.getDateInstance().format(Long.valueOf(date.getTime())), stringBuilder);
            return;
        }
        synchronized (DATE_TIME_FORMAT) {
            date = DATE_TIME_FORMAT.parse(str.substring(0, 15), new ParsePosition(0));
        }
        long time = date.getTime();
        if (str.length() == 16 && str.charAt(15) == 'Z') {
            Calendar gregorianCalendar = new GregorianCalendar();
            time += (long) (gregorianCalendar.get(16) + gregorianCalendar.get(15));
        }
        q.a(DateFormat.getDateTimeInstance().format(Long.valueOf(time)), stringBuilder);
    }

    public CharSequence getDisplayContents() {
        C0006g c0006g = (C0006g) getResult();
        StringBuilder stringBuilder = new StringBuilder(100);
        q.a(c0006g.a(), stringBuilder);
        String toGMTString = c0006g.b().toGMTString();
        appendTime(toGMTString, stringBuilder, false, false);
        String toGMTString2 = c0006g.d().toGMTString();
        if (toGMTString2 != null) {
            appendTime(toGMTString2, stringBuilder, true, toGMTString.equals(toGMTString2));
        }
        q.a(c0006g.f(), stringBuilder);
        q.a(c0006g.h(), stringBuilder);
        q.a(c0006g.i(), stringBuilder);
        return stringBuilder.toString();
    }

    public int getDisplayTitle() {
        return R.string.result_calendar;
    }
}
