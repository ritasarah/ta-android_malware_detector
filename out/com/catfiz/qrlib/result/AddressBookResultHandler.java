package com.catfiz.qrlib.result;

import android.app.Activity;
import android.telephony.PhoneNumberUtils;
import android.text.SpannableString;
import android.text.style.StyleSpan;
import com.b.a.b.a.C0003d;
import com.b.a.b.a.q;
import com.catfiz.R;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public final class AddressBookResultHandler extends ResultHandler {
    private static final DateFormat[] DATE_FORMATS = new DateFormat[]{new SimpleDateFormat("yyyyMMdd", Locale.ENGLISH), new SimpleDateFormat("yyyyMMdd'T'HHmmss", Locale.ENGLISH), new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH), new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss", Locale.ENGLISH)};
    private final boolean[] fields;

    public AddressBookResultHandler(Activity activity, q qVar) {
        super(activity, qVar);
        C0003d c0003d = (C0003d) qVar;
        String[] j = c0003d.j();
        boolean z = j != null && j.length > 0 && j[0].length() > 0;
        String[] d = c0003d.d();
        boolean z2 = d != null && d.length > 0;
        String[] f = c0003d.f();
        boolean z3 = f != null && f.length > 0;
        this.fields = new boolean[4];
        this.fields[0] = true;
        this.fields[1] = z;
        this.fields[2] = z2;
        this.fields[3] = z3;
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private static java.util.Date parseDate(java.lang.String r6) {
        /*
        r0 = 0;
        r2 = DATE_FORMATS;
        r3 = r2.length;
        r1 = r0;
    L_0x0005:
        if (r1 >= r3) goto L_0x0024;
    L_0x0007:
        r4 = r2[r1];
        monitor-enter(r4);
        r0 = 0;
        r4.setLenient(r0);	 Catch:{ all -> 0x0021 }
        r0 = new java.text.ParsePosition;	 Catch:{ all -> 0x0021 }
        r5 = 0;
        r0.<init>(r5);	 Catch:{ all -> 0x0021 }
        r0 = r4.parse(r6, r0);	 Catch:{ all -> 0x0021 }
        if (r0 == 0) goto L_0x001c;
    L_0x001a:
        monitor-exit(r4);	 Catch:{ all -> 0x0021 }
    L_0x001b:
        return r0;
    L_0x001c:
        monitor-exit(r4);	 Catch:{ all -> 0x0021 }
        r0 = r1 + 1;
        r1 = r0;
        goto L_0x0005;
    L_0x0021:
        r0 = move-exception;
        monitor-exit(r4);	 Catch:{ all -> 0x0021 }
        throw r0;
    L_0x0024:
        r0 = 0;
        goto L_0x001b;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.catfiz.qrlib.result.AddressBookResultHandler.parseDate(java.lang.String):java.util.Date");
    }

    public CharSequence getDisplayContents() {
        C0003d c0003d = (C0003d) getResult();
        StringBuilder stringBuilder = new StringBuilder(100);
        q.a(c0003d.a(), stringBuilder);
        int length = stringBuilder.length();
        String c = c0003d.c();
        if (c != null && c.length() > 0) {
            stringBuilder.append("\n(");
            stringBuilder.append(c);
            stringBuilder.append(')');
        }
        q.a(c0003d.l(), stringBuilder);
        q.a(c0003d.m(), stringBuilder);
        q.a(c0003d.j(), stringBuilder);
        String[] d = c0003d.d();
        if (d != null) {
            for (String formatNumber : d) {
                q.a(PhoneNumberUtils.formatNumber(formatNumber), stringBuilder);
            }
        }
        q.a(c0003d.f(), stringBuilder);
        q.a(c0003d.n(), stringBuilder);
        c = c0003d.o();
        if (c != null && c.length() > 0) {
            Date parseDate = parseDate(c);
            if (parseDate != null) {
                q.a(DateFormat.getDateInstance().format(Long.valueOf(parseDate.getTime())), stringBuilder);
            }
        }
        q.a(c0003d.i(), stringBuilder);
        if (length <= 0) {
            return stringBuilder.toString();
        }
        CharSequence spannableString = new SpannableString(stringBuilder.toString());
        spannableString.setSpan(new StyleSpan(1), 0, length, 0);
        return spannableString;
    }

    public int getDisplayTitle() {
        return R.string.result_address_book;
    }
}
