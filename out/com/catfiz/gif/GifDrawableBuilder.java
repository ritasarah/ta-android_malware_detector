package com.catfiz.gif;

import android.content.ContentResolver;
import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.net.Uri;
import com.catfiz.gif.InputSource.AssetFileDescriptorSource;
import com.catfiz.gif.InputSource.AssetSource;
import com.catfiz.gif.InputSource.ByteArraySource;
import com.catfiz.gif.InputSource.DirectByteBufferSource;
import com.catfiz.gif.InputSource.FileDescriptorSource;
import com.catfiz.gif.InputSource.FileSource;
import com.catfiz.gif.InputSource.InputStreamSource;
import com.catfiz.gif.InputSource.ResourcesSource;
import com.catfiz.gif.InputSource.UriSource;
import java.io.File;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.concurrent.ScheduledThreadPoolExecutor;

public class GifDrawableBuilder {
    private ScheduledThreadPoolExecutor mExecutor;
    private InputSource mInputSource;
    private boolean mIsRenderingTriggeredOnDraw = true;
    private GifDrawable mOldDrawable;

    public GifDrawable build() {
        if (this.mInputSource != null) {
            return this.mInputSource.build(this.mOldDrawable, this.mExecutor, this.mIsRenderingTriggeredOnDraw);
        }
        throw new NullPointerException("Source is not set");
    }

    public GifDrawableBuilder from(ContentResolver contentResolver, Uri uri) {
        this.mInputSource = new UriSource(contentResolver, uri);
        return this;
    }

    public GifDrawableBuilder from(AssetFileDescriptor assetFileDescriptor) {
        this.mInputSource = new AssetFileDescriptorSource(assetFileDescriptor);
        return this;
    }

    public GifDrawableBuilder from(AssetManager assetManager, String str) {
        this.mInputSource = new AssetSource(assetManager, str);
        return this;
    }

    public GifDrawableBuilder from(Resources resources, int i) {
        this.mInputSource = new ResourcesSource(resources, i);
        return this;
    }

    public GifDrawableBuilder from(File file) {
        this.mInputSource = new FileSource(file);
        return this;
    }

    public GifDrawableBuilder from(FileDescriptor fileDescriptor) {
        this.mInputSource = new FileDescriptorSource(fileDescriptor);
        return this;
    }

    public GifDrawableBuilder from(InputStream inputStream) {
        this.mInputSource = new InputStreamSource(inputStream);
        return this;
    }

    public GifDrawableBuilder from(String str) {
        this.mInputSource = new FileSource(str);
        return this;
    }

    public GifDrawableBuilder from(ByteBuffer byteBuffer) {
        this.mInputSource = new DirectByteBufferSource(byteBuffer);
        return this;
    }

    public GifDrawableBuilder from(byte[] bArr) {
        this.mInputSource = new ByteArraySource(bArr);
        return this;
    }

    public GifDrawableBuilder setRenderingTriggeredOnDraw(boolean z) {
        this.mIsRenderingTriggeredOnDraw = z;
        return this;
    }

    public GifDrawableBuilder taskExecutor(ScheduledThreadPoolExecutor scheduledThreadPoolExecutor) {
        this.mExecutor = scheduledThreadPoolExecutor;
        return this;
    }

    public GifDrawableBuilder threadPoolSize(int i) {
        this.mExecutor = new ScheduledThreadPoolExecutor(i);
        return this;
    }

    public GifDrawableBuilder with(GifDrawable gifDrawable) {
        this.mOldDrawable = gifDrawable;
        return this;
    }
}
