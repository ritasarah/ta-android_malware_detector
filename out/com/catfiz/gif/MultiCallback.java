package com.catfiz.gif;

import android.graphics.drawable.Drawable;
import android.graphics.drawable.Drawable.Callback;
import android.view.View;
import java.lang.ref.WeakReference;
import java.util.concurrent.CopyOnWriteArrayList;

public class MultiCallback implements Callback {
    private final CopyOnWriteArrayList mViewList = new CopyOnWriteArrayList();

    final class ViewWeakReference extends WeakReference {
        ViewWeakReference(View view) {
            super(view);
        }

        public boolean equals(Object obj) {
            return this == obj ? true : (obj == null || getClass() != obj.getClass()) ? false : get() == ((ViewWeakReference) obj).get();
        }

        public int hashCode() {
            View view = (View) get();
            return view != null ? view.hashCode() : 0;
        }
    }

    public void addView(View view) {
        for (int i = 0; i < this.mViewList.size(); i++) {
            ViewWeakReference viewWeakReference = (ViewWeakReference) this.mViewList.get(i);
            if (((View) viewWeakReference.get()) == null) {
                this.mViewList.remove(viewWeakReference);
            }
        }
        this.mViewList.addIfAbsent(new ViewWeakReference(view));
    }

    public void invalidateDrawable(Drawable drawable) {
        for (int i = 0; i < this.mViewList.size(); i++) {
            ViewWeakReference viewWeakReference = (ViewWeakReference) this.mViewList.get(i);
            View view = (View) viewWeakReference.get();
            if (view != null) {
                view.invalidateDrawable(drawable);
            } else {
                this.mViewList.remove(viewWeakReference);
            }
        }
    }

    public void removeView(View view) {
        for (int i = 0; i < this.mViewList.size(); i++) {
            ViewWeakReference viewWeakReference = (ViewWeakReference) this.mViewList.get(i);
            View view2 = (View) viewWeakReference.get();
            if (view2 == null || view2 == view) {
                this.mViewList.remove(viewWeakReference);
            }
        }
    }

    public void scheduleDrawable(Drawable drawable, Runnable runnable, long j) {
        for (int i = 0; i < this.mViewList.size(); i++) {
            ViewWeakReference viewWeakReference = (ViewWeakReference) this.mViewList.get(i);
            View view = (View) viewWeakReference.get();
            if (view != null) {
                view.scheduleDrawable(drawable, runnable, j);
            } else {
                this.mViewList.remove(viewWeakReference);
            }
        }
    }

    public void unscheduleDrawable(Drawable drawable, Runnable runnable) {
        for (int i = 0; i < this.mViewList.size(); i++) {
            ViewWeakReference viewWeakReference = (ViewWeakReference) this.mViewList.get(i);
            View view = (View) viewWeakReference.get();
            if (view != null) {
                view.unscheduleDrawable(drawable);
            } else {
                this.mViewList.remove(viewWeakReference);
            }
        }
    }
}
