package android.support.v7.preference;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v7.app.AlertDialog.Builder;
import android.support.v7.preference.DialogPreference.TargetFragment;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.TextView;

public abstract class PreferenceDialogFragmentCompat extends DialogFragment implements OnClickListener {
    protected static final String ARG_KEY = "key";
    private DialogPreference mPreference;
    private int mWhichButtonClicked;

    private void requestInputMethod(Dialog dialog) {
        dialog.getWindow().setSoftInputMode(5);
    }

    public DialogPreference getPreference() {
        return this.mPreference;
    }

    protected boolean needInputMethod() {
        return false;
    }

    protected void onBindDialogView(View view) {
        View findViewById = view.findViewById(16908299);
        if (findViewById != null) {
            CharSequence dialogMessage = this.mPreference.getDialogMessage();
            int i = 8;
            if (!TextUtils.isEmpty(dialogMessage)) {
                if (findViewById instanceof TextView) {
                    ((TextView) findViewById).setText(dialogMessage);
                }
                i = 0;
            }
            if (findViewById.getVisibility() != i) {
                findViewById.setVisibility(i);
            }
        }
    }

    public void onClick(DialogInterface dialogInterface, int i) {
        this.mWhichButtonClicked = i;
    }

    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Fragment targetFragment = getTargetFragment();
        if (targetFragment instanceof TargetFragment) {
            this.mPreference = (DialogPreference) ((TargetFragment) targetFragment).findPreference(getArguments().getString(ARG_KEY));
            return;
        }
        throw new IllegalStateException("Target fragment must implement TargetFragment interface");
    }

    public Dialog onCreateDialog(Bundle bundle) {
        Context activity = getActivity();
        this.mWhichButtonClicked = -2;
        Builder negativeButton = new Builder(activity).setTitle(this.mPreference.getDialogTitle()).setIcon(this.mPreference.getDialogIcon()).setPositiveButton(this.mPreference.getPositiveButtonText(), (OnClickListener) this).setNegativeButton(this.mPreference.getNegativeButtonText(), (OnClickListener) this);
        View onCreateDialogView = onCreateDialogView(activity);
        if (onCreateDialogView != null) {
            onBindDialogView(onCreateDialogView);
            negativeButton.setView(onCreateDialogView);
        } else {
            negativeButton.setMessage(this.mPreference.getDialogMessage());
        }
        onPrepareDialogBuilder(negativeButton);
        Dialog create = negativeButton.create();
        if (needInputMethod()) {
            requestInputMethod(create);
        }
        return negativeButton.create();
    }

    protected View onCreateDialogView(Context context) {
        int dialogLayoutResource = this.mPreference.getDialogLayoutResource();
        return dialogLayoutResource == 0 ? null : LayoutInflater.from(context).inflate(dialogLayoutResource, null);
    }

    public abstract void onDialogClosed(boolean z);

    public void onDismiss(DialogInterface dialogInterface) {
        super.onDismiss(dialogInterface);
        onDialogClosed(this.mWhichButtonClicked == -1);
    }

    protected void onPrepareDialogBuilder(Builder builder) {
    }
}
