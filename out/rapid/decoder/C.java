package rapid.decoder;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import android.graphics.BitmapRegionDecoder;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

class C extends p {
    private FileDescriptor r;

    public C(FileDescriptor fileDescriptor) {
        this.r = fileDescriptor;
    }

    protected C(C c) {
        super(c);
        this.r = c.r;
    }

    protected Bitmap a(Options options) {
        return BitmapFactory.decodeFileDescriptor(this.r, null, options);
    }

    protected InputStream a() {
        return new FileInputStream(this.r);
    }

    protected BitmapRegionDecoder b() {
        try {
            return BitmapRegionDecoder.newInstance(this.r, false);
        } catch (IOException e) {
            return null;
        }
    }

    public p c() {
        return new C(this);
    }

    public /* synthetic */ e d() {
        return c();
    }

    public /* synthetic */ x e() {
        return c();
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof C) || !super.equals(obj)) {
            return false;
        }
        return this.r.equals(((C) obj).r);
    }

    public int hashCode() {
        if (this.k == 0) {
            this.k = super.hashCode() + (this.r.hashCode() * 31);
        }
        return this.k;
    }
}
