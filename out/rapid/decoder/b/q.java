package rapid.decoder.b;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.os.Build.VERSION;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class q extends n {
    private Field h;
    private Field i;
    private Field j;
    private Field k;
    private Method l;
    private Method m;

    protected Canvas a() {
        return new Canvas();
    }

    public Canvas a(Bitmap bitmap) {
        Canvas canvas = (Canvas) a(true);
        canvas.setBitmap(bitmap);
        return canvas;
    }

    protected boolean a(Canvas canvas) {
        if (VERSION.SDK_INT >= 14) {
            canvas.setBitmap(null);
            return true;
        } else if (VERSION.SDK_INT >= 11) {
            return false;
        } else {
            try {
                if (this.h == null) {
                    this.h = Canvas.class.getDeclaredField("mNativeCanvas");
                    this.h.setAccessible(true);
                }
                if (this.i == null) {
                    this.i = Canvas.class.getDeclaredField("mBitmap");
                    this.i.setAccessible(true);
                }
                if (this.j == null) {
                    this.j = Canvas.class.getDeclaredField("mGL");
                    this.j.setAccessible(true);
                }
                if (this.l == null) {
                    this.l = Canvas.class.getDeclaredMethod("initRaster", new Class[]{Integer.TYPE});
                    this.l.setAccessible(true);
                }
                if (this.k == null) {
                    this.k = Canvas.class.getDeclaredField("mDensity");
                    this.k.setAccessible(true);
                }
                if (this.m == null) {
                    this.m = Canvas.class.getDeclaredMethod("finalizer", new Class[]{Integer.TYPE});
                    this.m.setAccessible(true);
                }
                if (this.j.get(canvas) != null) {
                    return false;
                }
                if (this.h.getInt(canvas) != 0) {
                    this.m.invoke(null, new Object[]{Integer.valueOf(r0)});
                }
                this.h.set(canvas, Integer.valueOf(((Integer) this.l.invoke(null, new Object[]{Integer.valueOf(0)})).intValue()));
                this.i.set(canvas, null);
                this.k.set(canvas, Integer.valueOf(0));
                return true;
            } catch (Exception e) {
                return false;
            }
        }
    }

    protected /* synthetic */ Object b() {
        return a();
    }

    protected void b(Canvas canvas) {
        canvas.clipRect(0, 0, ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED, ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED);
        canvas.setDrawFilter(null);
        canvas.setMatrix(null);
    }
}
