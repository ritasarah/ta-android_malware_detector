package rapid.decoder;

import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory.Options;
import android.graphics.BitmapRegionDecoder;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Build.VERSION;
import java.io.InputStream;
import rapid.decoder.a.o;
import rapid.decoder.b.d;
import rapid.decoder.b.n;
import rapid.decoder.builtin.a;
import rapid.decoder.d.h;

public abstract class p extends e {
    public static final int l = 0;
    protected Options m;
    protected boolean n;
    Object o;
    boolean p;
    protected d q;
    private boolean r;
    private boolean s;
    private boolean t;
    private int u;
    private int v;
    private boolean w;
    private float x;
    private float y;
    private float z;

    protected p() {
        this.r = true;
        this.s = false;
        this.t = false;
        this.m = (Options) n.f.d();
        this.m.inScaled = false;
    }

    protected p(p pVar) {
        super(pVar);
        this.r = true;
        this.s = false;
        this.t = false;
        this.o = pVar.o;
        this.m = C0032w.a(pVar.m);
        this.n = pVar.n;
        this.r = pVar.r;
        this.s = pVar.s;
        this.t = pVar.t;
        this.u = pVar.u;
        this.v = pVar.v;
    }

    private static int b(int i, int i2, int i3, int i4) {
        int i5 = 1;
        if (i2 > i4 || i > i3) {
            int i6 = i2 / 2;
            int i7 = i / 2;
            while (i6 / i5 > i4 && i7 / i5 > i3) {
                i5 *= 2;
            }
        }
        return i5;
    }

    private Bitmap b(ae aeVar) {
        Bitmap o = e.a((InputStream) aeVar).a(this.g, this.h).o();
        if (o == null) {
            return null;
        }
        this.z = 1.0f;
        this.y = 1.0f;
        e b = e.b(o);
        if (this.j != null) {
            int round = Math.round(((float) this.j.left) * this.g);
            int round2 = Math.round(((float) this.j.top) * this.h);
            b = b.a(round, round2, l() + round, m() + round2);
        }
        return b.a(this.m.inPreferredConfig).b(this.r).c(this.n).o();
    }

    private int c() {
        int i = 1;
        while (this.y <= 0.5f && this.z <= 0.5f) {
            i *= 2;
            this.y *= 2.0f;
            this.z *= 2.0f;
        }
        return i;
    }

    private Bitmap c(int i, int i2) {
        boolean B = B();
        synchronized (b) {
            int i3 = (c != null ? 1 : 0) & B;
        }
        if (i3 != 0) {
            return o();
        }
        r();
        this.m.inSampleSize = b(p(), q(), i, i2);
        Bitmap C = C();
        this.q = this.p ? d.DISK : d.NOT_CACHED;
        return C;
    }

    private void j(boolean z) {
        if (this.x != 0.0f) {
            return;
        }
        if (!z || (this.g == 1.0f && this.h == 1.0f)) {
            this.x = v();
            while (((double) this.x) <= 0.5d) {
                Options options = this.m;
                options.inSampleSize *= 2;
                this.x *= 2.0f;
            }
            return;
        }
        this.x = 1.0f;
    }

    public Bitmap A() {
        Bitmap bitmap;
        synchronized (b) {
            if (c == null) {
                bitmap = null;
            } else {
                bitmap = c.a(this);
            }
        }
        return bitmap;
    }

    public boolean B() {
        return this.o != null && super.B();
    }

    protected Bitmap C() {
        boolean z = false;
        boolean z2 = (this.j == null || (this.j.left == 0 && this.j.top == 0 && this.j.width() == j() && this.j.height() == k())) ? false : true;
        if (this.s || ((z2 && VERSION.SDK_INT < 10) || ((this.n && (VERSION.SDK_INT < 11 || z2)) || (this.m.inSampleSize > 1 && !this.r)))) {
            z = true;
        }
        if (z || z2) {
            z();
        }
        e(z);
        if (!z) {
            return z2 ? a(this.m, this.j) : a(this.m);
        } else {
            InputStream a = a();
            if (a == null) {
                return null;
            }
            ae a2 = ae.a(a);
            try {
                return a(a2);
            } catch (UnsatisfiedLinkError e) {
                a2.d();
                return b(a2);
            }
        }
    }

    public void D() {
        if (!C0016d.d(this)) {
            this.m.requestCancelDecode();
        }
    }

    public Object E() {
        return this.o;
    }

    public d F() {
        return this.q;
    }

    public boolean G() {
        return this.m.mCancel;
    }

    public p H() {
        super.w();
        this.m.inPreferredConfig = null;
        this.m.inDither = false;
        if (VERSION.SDK_INT >= 10) {
            this.m.inPreferQualityOverSpeed = false;
            if (VERSION.SDK_INT >= 11) {
                this.m.inMutable = false;
            }
        }
        this.t = false;
        this.n = false;
        this.r = true;
        this.s = false;
        return this;
    }

    public Bitmap a(int i, int i2, Rect rect, Drawable drawable) {
        Bitmap bitmap = null;
        Bitmap c = c(rect.width(), rect.height());
        if (c != null) {
            if (rect.left == 0 && rect.top == 0 && rect.right == i && rect.bottom == i2 && (Config.RGB_565.equals(c.getConfig()) || !this.t)) {
                bitmap = Bitmap.createScaledBitmap(c, i, i2, this.r);
            } else {
                Bitmap createBitmap = Bitmap.createBitmap(i, i2, this.t ? Config.RGB_565 : c.getConfig());
                Canvas a = n.g.a(createBitmap);
                if (drawable != null) {
                    drawable.setBounds(0, 0, i, i2);
                    drawable.draw(a);
                }
                Paint a2 = this.r ? n.a.a(2) : null;
                a.drawBitmap(c, null, rect, a2);
                n.a.c(a2);
                n.g.c(a);
                bitmap = createBitmap;
            }
            if (!(c == bitmap || B())) {
                c.recycle();
            }
        }
        return bitmap;
    }

    protected abstract Bitmap a(Options options);

    protected Bitmap a(Options options, Rect rect) {
        j(false);
        BitmapRegionDecoder b = b();
        return b == null ? null : b.decodeRegion(rect, options);
    }

    protected Bitmap a(ae aeVar) {
        j(true);
        a aVar = new a(aeVar);
        aVar.a(this.j);
        aVar.a(this.r);
        Bitmap a = aVar.a(this.m);
        aVar.b();
        return a;
    }

    protected abstract InputStream a();

    protected af a(o oVar, h hVar) {
        return new af(this, oVar, hVar);
    }

    public /* synthetic */ e a(Config config) {
        return b(config);
    }

    public /* synthetic */ e a(boolean z) {
        return f(z);
    }

    public p a(N n) {
        n.a(this.m);
        this.t = n.a();
        return this;
    }

    public void a(Canvas canvas, Rect rect) {
        Bitmap c = c(rect.width(), rect.height());
        Paint a = this.r ? n.a.a(2) : null;
        canvas.drawBitmap(c, null, rect, a);
        n.a.c(a);
        c.recycle();
    }

    protected abstract BitmapRegionDecoder b();

    public /* synthetic */ e b(boolean z) {
        return g(z);
    }

    public p b(Config config) {
        this.m.inPreferredConfig = config;
        return this;
    }

    public p b(Uri uri) {
        return b((Object) uri);
    }

    p b(Object obj) {
        if (this.o != null) {
            throw new IllegalStateException("id can be set only once.");
        }
        this.o = obj;
        this.k = 0;
        return this;
    }

    public p b(String str) {
        return b(Uri.parse(str));
    }

    public /* synthetic */ e c(boolean z) {
        return d(z);
    }

    public p d(boolean z) {
        this.n = z;
        if (VERSION.SDK_INT >= 11) {
            this.m.inMutable = z;
        }
        this.k = 0;
        return this;
    }

    protected void e(boolean z) {
    }

    public boolean equals(Object obj) {
        if (!(obj instanceof p)) {
            return false;
        }
        p pVar = (p) obj;
        Config config = this.m.inPreferredConfig;
        Config config2 = pVar.m.inPreferredConfig;
        if (config == null) {
            if (config2 != null) {
                return false;
            }
        } else if (!config.equals(config2)) {
            return false;
        }
        if (this.o == null) {
            if (pVar.o != null) {
                return false;
            }
        } else if (!this.o.equals(pVar.o)) {
            return false;
        }
        return this.n == pVar.n && this.r == pVar.r && a((e) pVar);
    }

    public p f(boolean z) {
        this.s = z;
        return this;
    }

    protected void finalize() {
        try {
            n.f.c(this.m);
        } finally {
            super.finalize();
        }
    }

    public p g(boolean z) {
        this.r = z;
        this.k = 0;
        return this;
    }

    public p h(boolean z) {
        super.i(z);
        return this;
    }

    public int hashCode() {
        int i = 1;
        int i2 = 0;
        if (this.k == 0) {
            int hashCode = this.o != null ? this.o.hashCode() : 0;
            int i3 = this.n ? 1 : 0;
            if (!this.r) {
                i = 0;
            }
            i3 += i * 31;
            if (this.m.inPreferredConfig != null) {
                i2 = this.m.inPreferredConfig.hashCode();
            }
            this.k = hashCode + ((((i2 + (s() * 31)) * 31) + i3) * 31);
        }
        return this.k;
    }

    public /* synthetic */ x i(boolean z) {
        return h(z);
    }

    public int j() {
        if (this.u == 0) {
            z();
        }
        return this.u;
    }

    public int k() {
        if (this.v == 0) {
            z();
        }
        return this.v;
    }

    public Config n() {
        return this.m.inPreferredConfig;
    }

    public Bitmap o() {
        Bitmap A;
        boolean B = B();
        if (B) {
            A = A();
            if (A != null) {
                this.q = d.MEMORY;
                return A;
            }
        }
        this.m.mCancel = false;
        this.x = 0.0f;
        r();
        this.y = this.g;
        this.z = this.h;
        if (this.g == 1.0f && this.h == 1.0f) {
            this.m.inSampleSize = 1;
        } else {
            this.m.inSampleSize = c();
        }
        if (this.m.mCancel) {
            return null;
        }
        Bitmap C = C();
        if (C == null) {
            return null;
        }
        if (this.y != 1.0f || this.z != 1.0f) {
            C.setDensity(0);
            int a = this.i.a(((float) C.getWidth()) * this.y);
            int a2 = this.i.a(((float) C.getHeight()) * this.z);
            Config config = this.t ? Config.RGB_565 : C.getConfig();
            if (config == null) {
                config = Config.ARGB_8888;
            }
            Bitmap createBitmap = Bitmap.createBitmap(a, a2, config);
            Canvas a3 = n.g.a(createBitmap);
            Paint a4 = this.r ? n.a.a(2) : null;
            if (Config.RGB_565.equals(config) && !Config.RGB_565.equals(C.getConfig())) {
                Paint paint = a4 == null ? (Paint) n.a.d() : a4;
                paint.setDither(true);
                a4 = paint;
            }
            Rect a5 = n.b.a(0, 0, a, a2);
            a3.drawBitmap(C, null, a5, a4);
            n.b.c(a5);
            n.a.c(a4);
            n.g.c(a3);
            C.recycle();
            createBitmap.setDensity(this.m.inTargetDensity);
            A = createBitmap;
        } else if (this.t) {
            A = new C0028s(C).a(Config.RGB_565).o();
            if (C != A) {
                C.recycle();
            }
        } else {
            A = C;
        }
        if (this.m.mCancel) {
            return null;
        }
        Bitmap a6 = a(A);
        if (a6 == null) {
            return null;
        }
        if (B) {
            synchronized (b) {
                if (c != null) {
                    c.b(this, a6);
                }
            }
        }
        this.q = this.p ? d.DISK : d.NOT_CACHED;
        return a6;
    }

    public /* synthetic */ e w() {
        return H();
    }

    public q y() {
        if (!B() || this.o == null || c == null) {
            return null;
        }
        q a;
        synchronized (b) {
            a = c.a(this.o);
        }
        return a;
    }

    protected void z() {
        if (!this.w) {
            q y = y();
            if (y != null) {
                this.u = y.l();
                this.v = y.m();
                this.m.inDensity = 0;
                this.m.inTargetDensity = 0;
                return;
            }
            this.m.inJustDecodeBounds = true;
            int i = this.m.inSampleSize;
            this.m.inSampleSize = 1;
            a(this.m);
            this.m.inSampleSize = i;
            this.m.inJustDecodeBounds = false;
            this.w = true;
            this.u = Math.max(0, this.m.outWidth);
            this.v = Math.max(0, this.m.outHeight);
        }
    }
}
