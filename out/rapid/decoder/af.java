package rapid.decoder;

import rapid.decoder.a.o;
import rapid.decoder.d.a;
import rapid.decoder.d.g;
import rapid.decoder.d.h;

class af {
    private static final int a = 0;
    private static final int b = 1;
    private static final int c = 2;
    private static final int d = 3;
    private e e;
    private o f;
    private h g;
    private int h = a;
    private int i;
    private int j;
    private int k;
    private int l;
    private g m;

    public af(e eVar, o oVar, h hVar) {
        this.e = eVar;
        this.f = oVar;
        this.g = hVar;
    }

    public g a(boolean z) {
        if (this.m != null) {
            return this.m;
        }
        int i;
        int i2;
        if (this.h == 0) {
            i = this.i;
            i2 = this.j;
        } else {
            int l;
            q y = this.e.y();
            if (y != null) {
                l = y.l();
                i2 = y.m();
            } else if (z) {
                return null;
            } else {
                l = this.e.l();
                i2 = this.e.m();
            }
            switch (this.h) {
                case b /*1*/:
                    i = this.j;
                    int i3 = i;
                    i = Math.max(this.i, Math.min(a.b(l, i2, i), this.k));
                    i2 = i3;
                    break;
                case c /*2*/:
                    i = this.i;
                    i2 = Math.max(this.j, Math.min(a.a(l, i2, i), this.l));
                    break;
                case d /*3*/:
                    int max = Math.max(this.i, Math.min(l, this.k));
                    int max2 = Math.max(this.j, Math.min(i2, this.l));
                    i = Math.min(l, this.k);
                    while (i >= this.i) {
                        int a = a.a(l, i2, i);
                        if (a >= this.j && a <= this.l) {
                            i2 = a;
                            break;
                        }
                        i--;
                    }
                    i2 = max2;
                    i = max;
                    break;
                default:
                    throw new IllegalStateException();
            }
        }
        if (i == 0 || i2 == 0) {
            return null;
        }
        this.m = this.g.a(this.e, i, i2);
        return this.m;
    }

    public void a() {
        if (this.f.e() == -2) {
            if (this.f.f() == -2) {
                this.h = d;
                this.i = this.f.n();
                this.k = this.f.p();
                this.j = this.f.o();
                this.l = this.f.q();
                return;
            }
            this.h = b;
            this.i = this.f.n();
            this.k = this.f.p();
            this.j = this.f.h();
        } else if (this.f.f() == -2) {
            this.h = c;
            this.i = this.f.g();
            this.j = this.f.o();
            this.l = this.f.q();
        } else {
            this.h = a;
            this.i = this.f.g();
            this.j = this.f.h();
        }
    }
}
