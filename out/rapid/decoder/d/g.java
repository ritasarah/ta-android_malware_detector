package rapid.decoder.d;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.widget.ImageView.ScaleType;
import rapid.decoder.b.d;
import rapid.decoder.b.n;
import rapid.decoder.e;
import rapid.decoder.q;
import rapid.decoder.x;

public abstract class g extends x {
    private e a;
    protected Drawable d;
    protected int e;
    protected int f;
    protected d g;

    protected g(g gVar) {
        this.d = gVar.d;
        this.e = gVar.e;
        this.f = gVar.f;
    }

    public g(e eVar, int i, int i2) {
        this.a = eVar;
        this.e = i;
        this.f = i2;
    }

    private Bitmap a(boolean z) {
        e a;
        Bitmap bitmap = null;
        Rect rect = (Rect) n.b.e();
        if (z) {
            q y = this.a.y();
            if (y != null) {
                a = a(this.a, y, this.e, this.f, rect);
                bitmap = a.A();
            } else {
                a = null;
            }
        } else {
            a = a(this.a, this.a, this.e, this.f, rect);
            bitmap = a.a(this.e, this.f, rect, this.d);
        }
        n.b.c(rect);
        if (a != null) {
            this.g = a.F();
        }
        return bitmap;
    }

    public static g a(e eVar, int i, int i2, ScaleType scaleType) {
        if (ScaleType.MATRIX.equals(scaleType)) {
            return new i(eVar, i, i2);
        }
        if (ScaleType.FIT_XY.equals(scaleType)) {
            return new f(eVar, i, i2);
        }
        if (ScaleType.FIT_START.equals(scaleType)) {
            return new e(eVar, i, i2, 0);
        }
        if (ScaleType.FIT_CENTER.equals(scaleType)) {
            return new e(eVar, i, i2, 1);
        }
        if (ScaleType.FIT_END.equals(scaleType)) {
            return new e(eVar, i, i2, 2);
        }
        if (ScaleType.CENTER.equals(scaleType)) {
            return new c(eVar, i, i2);
        }
        if (ScaleType.CENTER_CROP.equals(scaleType)) {
            return new b(eVar, i, i2);
        }
        if (ScaleType.CENTER_INSIDE.equals(scaleType)) {
            return new d(eVar, i, i2);
        }
        throw new IllegalArgumentException("scaleType");
    }

    private e a(e eVar, q qVar, int i, int i2, Rect rect) {
        Rect rect2 = (Rect) n.b.e();
        a(qVar, i, i2, rect2, rect);
        if (!(rect2.left == 0 && rect2.top == 0 && rect2.right == qVar.l() && rect2.bottom == qVar.m())) {
            eVar = eVar.d().a(rect2);
        }
        n.b.c(rect2);
        return eVar;
    }

    public Bitmap A() {
        return a(true);
    }

    public boolean B() {
        return this.a.B();
    }

    public void D() {
        this.a.D();
    }

    public d F() {
        return this.g;
    }

    public boolean G() {
        return this.a.G();
    }

    public abstract g a();

    public g a(Drawable drawable) {
        this.d = drawable;
        return this;
    }

    public void a(Canvas canvas, Rect rect) {
        a(this.a, this.a, rect.width(), rect.height(), null).a(canvas, rect);
    }

    protected abstract void a(q qVar, int i, int i2, Rect rect, Rect rect2);

    public /* synthetic */ x e() {
        return a();
    }

    public int l() {
        return this.e;
    }

    public int m() {
        return this.f;
    }

    public Bitmap o() {
        return a(false);
    }
}
